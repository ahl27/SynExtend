* Checking package dependencies... OK
* Checking if other packages can import this one... OK
* Checking to see if we understand object initialization... OK
* Checking for deprecated package usage... OK
* Checking for remote package usage... OK
* Checking for 'LazyData: true' usage... OK
* Checking version number... OK
* Checking version number validity... OK
* Checking R version dependency... OK
* Checking package size... OK
* Checking individual file sizes...
* WARNING: The following files are over 5MB in size: '.git/objects/pack/pack-5064ff83568091bd619e7ca7f5981d4f3d2c4410.pack'
* Checking biocViews... OK
* Checking that biocViews are present... OK
* Checking package type based on biocViews... OK
* Checking for non-trivial biocViews... OK
* Checking that biocViews come from the same category... OK
* Checking biocViews validity... OK
* Checking for recommended biocViews...
* NOTE: Consider adding these automatically suggested biocViews: Sequencing, Microbiome, Microarray, Alignment, MultipleSequenceAlignment, WholeGenome, ImmunoOncology, GenePrediction, QualityControl
* Checking build system compatibility... OK
* Checking for blank lines in DESCRIPTION... OK
* Checking if DESCRIPTION is well formatted... OK
* Checking for proper Description: field... OK
* Checking for whitespace in DESCRIPTION field names... OK
* Checking that Package field matches directory/tarball name... OK
* Checking for Version field... OK
* Checking for valid maintainer... OK
* Checking License: for restrictive use... OK
* Checking for pinned package versions... OK
* Checking DESCRIPTION/NAMESPACE consistency... OK
* Checking .Rbuildignore... OK
* Checking for stray BiocCheck output folders... OK
* Checking vignette directory... OK
* Checking package installation calls in R code... OK
* Checking for library/require of SynExtend... OK
* Checking coding practice...
* NOTE:  Avoid sapply(); use vapply()
Found in files:
R/BlockExpansion.R (line  123, column 11)
R/BlockExpansion.R (line  128, column 11)
R/BlockExpansion.R (line  133, column 16)
R/BlockExpansion.R (line  142, column 16)
R/BlockExpansion.R (line  151, column 16)
R/BlockExpansion.R (line  160, column 16)
R/BlockExpansion.R (line  496, column 22)
R/BlockExpansion.R (line  506, column 22)
R/BlockExpansion.R (line  516, column 22)
R/BlockExpansion.R (line  526, column 22)
R/BlockExpansion.R (line  547, column 22)
R/BlockReconciliation.R (line  236, column 13)
R/BlockReconciliation.R (line  283, column 15)
R/BlockReconciliation.R (line  286, column 15)
R/BlockReconciliation.R (line  304, column 15)
R/BlockReconciliation.R (line  307, column 15)
R/BlockReconciliation.R (line  325, column 15)
R/ExtractBy.R (line  278, column 18)
R/gffToDataFrame.R (line   77, column 18)
R/gffToDataFrame.R (line   78, column 37)
R/gffToDataFrame.R (line  139, column 12)
R/NucleotideOverlap.R (line   55, column 22)
R/NucleotideOverlap.R (line   67, column 19)
R/PairSummaries.R (line  507, column 18)
R/PairSummaries.R (line 1055, column 37)
R/SelectByK.R (line   61, column 10)
R/simMat-class.R (line  168, column 12)
R/simMat-class.R (line  197, column 12)
R/simMat-class.R (line  270, column 12)
R/simMat-class.R (line  292, column 12)
* NOTE:  Avoid 1:...; use seq_len() or seq_along()
Found in files:
simMat-class.R (line 174, column 13)
simMat-class.R (line 203, column 13)
simMat-class.R (line 276, column 13)
simMat-class.R (line 298, column 13)
* NOTE:  Avoid 'cat' and 'print' outside of 'show' methods
Found in files:
cat() in R/BlastSeqs.R (line   23, column 16)
cat() in R/BlastSeqs.R (line   30, column 18)
cat() in R/BlastSeqs.R (line   36, column 18)
cat() in R/BlastSeqs.R (line   42, column  5)
cat() in R/BlastSeqs.R (line   53, column  9)
print() in R/BlastSeqs.R (line   54, column  9)
print() in R/BlastSeqs.R (line   55, column  9)
cat() in R/BlockExpansion.R (line  101, column  7)
cat() in R/BlockExpansion.R (line  189, column  9)
cat() in R/BlockExpansion.R (line  201, column  9)
cat() in R/BlockExpansion.R (line  849, column  9)
print() in R/BlockExpansion.R (line 1017, column  7)
print() in R/BlockExpansion.R (line 1047, column  9)
print() in R/BlockExpansion.R (line 1053, column  9)
cat() in R/BlockReconciliation.R (line  498, column  5)
print() in R/BlockReconciliation.R (line  501, column  5)
cat() in R/DisjointSet.R (line   62, column  7)
cat() in R/DisjointSet.R (line   77, column  7)
cat() in R/DisjointSet.R (line   80, column  7)
print() in R/DisjointSet.R (line   82, column  7)
cat() in R/ExtractBy.R (line  138, column  7)
cat() in R/ExtractBy.R (line  234, column  7)
cat() in R/ExtractBy.R (line  255, column  7)
cat() in R/ExtractBy.R (line  302, column  7)
cat() in R/ExtractBy.R (line  398, column  7)
cat() in R/ExtractBy.R (line  419, column  7)
print() in R/ExtractBy.R (line  257, column  7)
print() in R/ExtractBy.R (line  421, column  7)
cat() in R/FindSets.R (line   26, column  5)
cat() in R/FindSets.R (line   73, column  5)
cat() in R/FindSets.R (line   76, column  5)
cat() in R/FindSets.R (line  100, column  5)
print() in R/FindSets.R (line   74, column  5)
print() in R/FindSets.R (line  102, column  5)
cat() in R/gffToDataFrame.R (line  152, column  7)
cat() in R/gffToDataFrame.R (line  520, column  5)
print() in R/gffToDataFrame.R (line  154, column  7)
print() in R/gffToDataFrame.R (line  506, column 11)
print() in R/gffToDataFrame.R (line  521, column  5)
cat() in R/NucleotideOverlap.R (line   78, column  5)
cat() in R/NucleotideOverlap.R (line  344, column  5)
cat() in R/NucleotideOverlap.R (line 1138, column  5)
print() in R/NucleotideOverlap.R (line 1139, column  5)
cat() in R/PairSummaries.R (line  166, column  5)
cat() in R/PairSummaries.R (line  450, column  7)
cat() in R/PairSummaries.R (line  453, column  7)
cat() in R/PairSummaries.R (line  512, column  5)
cat() in R/PairSummaries.R (line  518, column  7)
cat() in R/PairSummaries.R (line 1357, column  5)
print() in R/PairSummaries.R (line 1358, column  5)
cat() in R/ProtWeaver-ColocPreds.R (line   67, column 16)
cat() in R/ProtWeaver-DMPreds.R (line   28, column 18)
cat() in R/ProtWeaver-DMPreds.R (line   45, column 18)
cat() in R/ProtWeaver-DMPreds.R (line   56, column 18)
cat() in R/ProtWeaver-DMPreds.R (line   65, column 18)
cat() in R/ProtWeaver-DMPreds.R (line   88, column 18)
cat() in R/ProtWeaver-DMPreds.R (line  126, column 16)
cat() in R/ProtWeaver-PAPreds.R (line   32, column 18)
cat() in R/ProtWeaver-PAPreds.R (line   68, column 16)
cat() in R/ProtWeaver-PAPreds.R (line   86, column 18)
cat() in R/ProtWeaver-PAPreds.R (line  118, column 16)
cat() in R/ProtWeaver-PAPreds.R (line  138, column 18)
cat() in R/ProtWeaver-PAPreds.R (line  191, column 16)
cat() in R/ProtWeaver-PAPreds.R (line  215, column 18)
cat() in R/ProtWeaver-PAPreds.R (line  253, column 18)
cat() in R/ProtWeaver-PAPreds.R (line  264, column 16)
cat() in R/ProtWeaver-PAPreds.R (line  285, column 16)
cat() in R/ProtWeaver-PAPreds.R (line  311, column 16)
cat() in R/ProtWeaver-ResiduePreds.R (line   60, column 16)
cat() in R/ProtWeaver-utils.R (line   41, column 16)
cat() in R/ProtWeaver-utils.R (line   93, column 15)
cat() in R/ProtWeaver-utils.R (line  194, column  3)
cat() in R/ProtWeaver-utils.R (line  280, column  5)
cat() in R/ProtWeaver-utils.R (line  285, column 22)
cat() in R/ProtWeaver-utils.R (line  300, column 22)
cat() in R/ProtWeaver-utils.R (line  307, column 22)
cat() in R/ProtWeaver-utils.R (line  345, column 22)
cat() in R/ProtWeaver-utils.R (line  347, column 22)
cat() in R/ProtWeaver-utils.R (line  370, column 22)
cat() in R/ProtWeaver-utils.R (line  380, column 22)
cat() in R/ProtWeaver-utils.R (line  396, column  5)
cat() in R/ProtWeaver-utils.R (line  410, column 21)
print() in R/ProtWeaver-utils.R (line  237, column  3)
print() in R/SelectByK.R (line   57, column  7)
cat() in R/SubSetPairs.R (line   62, column  7)
cat() in R/SubSetPairs.R (line   90, column  7)
cat() in R/SubSetPairs.R (line  162, column  5)
cat() in R/SubSetPairs.R (line  179, column  5)
print() in R/SubSetPairs.R (line  181, column  5)
cat() in R/SuperTree.R (line   26, column  5)
cat() in R/SuperTree.R (line   49, column  5)
cat() in R/SuperTree.R (line   86, column 16)
cat() in R/SuperTree.R (line   92, column  5)
* NOTE:  Avoid using '=' for assignment and use '<-' instead
Found in files:
R/EstimRearrScen.R (line 59, column 22)
R/SuperTree.R (line 27, column  8)
* NOTE:  Avoid the use of 'paste' in condition signals
Found in files:
R/NucleotideOverlap.R (line 106, column 15)
R/NucleotideOverlap.R (line 351, column 15)
* WARNING:  Avoid T/F variables; If logical, use TRUE/FALSE 
Found 1 times:
T in R/SuperTree.R (line 4, column 81)
* NOTE:  Avoid system() ; use system2()
Found in files:
inst/scripts/extdata.R (line 67)
* Checking parsed R code in R directory, examples, vignettes...
* NOTE: Avoid '<<-' if possible (found 4 times)
<<- in R/FastDend-class.R (line 181, column 14)
<<- in R/FastDend-class.R (line 192, column 20)
<<- in R/FastDend-class.R (line 195, column 20)
<<- in R/FastDend-class.R (line 218, column 21)
* NOTE: Avoid 'suppressWarnings'/'*Messages' if possible (found 1 times)
suppressWarnings() in R/ProtWeaver-DMPreds.R (line 116, column 20)
* Checking function lengths...
* NOTE: The recommended function length is 50 lines or less. There are 173 functions greater than 50 lines.
The longest 5 functions are:
PairSummaries() (R/PairSummaries.R): 1359 lines
NucleotideOverlap() (R/NucleotideOverlap.R): 1141 lines
BlockExpansion() (R/BlockExpansion.R): 1055 lines
EstimRearrScen() (R/EstimRearrScen.R):  705 lines
rearrange_chromosome() (R/EstimRearrScen.R):  549 lines
* Checking man page documentation...
* NOTE: Consider adding runnable examples to man pages that documentexported objects.
BlastSeqs.Rd
* NOTE: Usage of dontrun{} / donttest{} tags found in man page examples. 3% of man pages use at least one of these tags.
Found in files:
ExtractBy.Rd
* Checking package NEWS... OK
* Checking unit tests...
* NOTE: Consider adding unit tests. We strongly encourage them. See
  https://contributions.bioconductor.org/tests.html
* Checking skip_on_bioc() in tests... OK
* Checking formatting of DESCRIPTION, NAMESPACE, man pages, R source, and vignette source...
* NOTE: Consider shorter lines; 677 lines (6%) are > 80 characters long.
First few lines:
R/BlastSeqs.R#L   6                       blastType=c('blast...
R/BlastSeqs.R#L  17   stopifnot('blastType must be a single ...
R/BlastSeqs.R#L  18   stopifnot('Undefined blast type'=(blas...
R/BlastSeqs.R#L  20   stopifnot('Requested blast not found. ...
R/BlastSeqs.R#L  26     if (is(seqs, 'AAStringSet') && blast...
R/BlastSeqs.R#L  27       stop("'", blastType, "'expects nuc...
R/BlastSeqs.R#L  29       stop("'", blastType, "' expects pr...
R/BlastSeqs.R#L  30     if (verbose) cat('Input is XStringSe...
R/BlastSeqs.R#L  35     stopifnot(readBStringSet(seqs, forma...
R/BlastSeqs.R#L  40   query <- paste0(blastType, ' -query ',...
R/BlastSeqs.R#L  49                                    "Alig...
R/BlockExpansion.R#L  34     stop ("GapTolerance defines the diff...
R/BlockExpansion.R#L 138                           NA # NA Placeh...
R/BlockExpansion.R#L 156                           NA # NA Placeh...
R/BlockExpansion.R#L 220       # extract seqs for features one on...
R/BlockExpansion.R#L 241         # if collapsing must take place ...
R/BlockExpansion.R#L 246           NTFeatures01[[m4 + CollapseCou...
R/BlockExpansion.R#L 247           remove[(CollapseCount + 1L):(C...
R/BlockExpansion.R#L 271                                   geneti...
R/BlockExpansion.R#L 272                                         ...
R/BlockExpansion.R#L 273                                         ...
R/BlockExpansion.R#L 311         # if collapsing must take place ...
R/BlockExpansion.R#L 316           NTFeatures02[[m4 + CollapseCou...
R/BlockExpansion.R#L 317           remove[(CollapseCount + 1L):(C...
R/BlockExpansion.R#L 357                                   geneti...
R/BlockExpansion.R#L 358                                         ...
R/BlockExpansion.R#L 359                                         ...
R/BlockExpansion.R#L 404       # you can be in both the diagonal ...
R/BlockExpansion.R#L 568           dr6[[m3]] <- data.frame("f1" =...
R/BlockExpansion.R#L 569                                   "f2" =...
R/BlockExpansion.R#L 655       p1placeholder <- p2placeholder <- ...
R/BlockExpansion.R#L 656                                         ...
R/BlockExpansion.R#L 709             ali <- AlignProfiles(pattern...
R/BlockExpansion.R#L 710                                  subject...
R/BlockExpansion.R#L 719                                         ...
R/BlockReconciliation.R#L 271       # i.e. lines can only be evaluated...
R/BlockReconciliation.R#L 430               # if (any(dr6[(EVALSTART:E...
R/EstimRearrScen.R#L  23                                    Verbo...
R/EstimRearrScen.R#L  25                                   first_...
R/EstimRearrScen.R#L  26     # ERROR CHECKING  ------------------...
R/EstimRearrScen.R#L  28     stopifnot("Error: Incorrect genome i...
R/EstimRearrScen.R#L  36     #case where both genomes are identic...
R/EstimRearrScen.R#L  37     #this calculates the number of uniqu...
R/EstimRearrScen.R#L  61       colnames(block_key) <- c('start1',...
R/EstimRearrScen.R#L  68     # END ERROR CHECKING----------------...
R/EstimRearrScen.R#L  70     # HELPER FUNCTIONS -----------------...
R/EstimRearrScen.R#L 136       #should overestimate slightly, thi...
R/EstimRearrScen.R#L 141       #if we increased the size of the l...
R/EstimRearrScen.R#L 154       start <- nrow(graph) #the last ent...
R/EstimRearrScen.R#L 157       #note here that the genome is repr...
R/EstimRearrScen.R#L 158       #ex. < -3 2 -4 5 1 > becomes < +3 ...
R/EstimRearrScen.R#L 159       #in the graph, instead of represen...
R/EstimRearrScen.R#L 161       #thus is a gene is even -> odd it'...
R/EstimRearrScen.R#L 165         if(cur%%2 == 1){ #if value is od...
R/EstimRearrScen.R#L 166           #we store a direction of 1 in ...
R/EstimRearrScen.R#L 193       rearrangements[[1]] <- paste("Orig...
R/EstimRearrScen.R#L 205           #(as we could sort any vector ...
R/EstimRearrScen.R#L 206           #Thus if we ever get to triple...
R/EstimRearrScen.R#L 209           err_msg <- paste("Infinite Loo...
R/EstimRearrScen.R#L 232             bi_skip_roll <- runif(1) # n...
R/EstimRearrScen.R#L 233             if((bi_skip_roll > bi_skip_p...
R/EstimRearrScen.R#L 256               circular_intermediate <- s...
R/EstimRearrScen.R#L 299                 #then we just do a DCJ o...
R/EstimRearrScen.R#L 301                 rearrangements[[block_co...
R/EstimRearrScen.R#L 316             if ((inv_skip_prob < inv_ski...
R/EstimRearrScen.R#L 331                 rearrangements[[invert_c...
R/EstimRearrScen.R#L 344       return(list("rearrangements"=rearr...
R/EstimRearrScen.R#L 348     # END HELPER FUNCTIONS--------------...
R/EstimRearrScen.R#L 356     block_matrix <- matrix(nrow=nrow(syn...
R/EstimRearrScen.R#L 393     sorted_mat <- sorted_mat[order(sorte...
R/EstimRearrScen.R#L 394     indices <- seq_len(nrow(block_matrix...
R/EstimRearrScen.R#L 395     sorted_mat <- cbind(sorted_mat, indi...
R/EstimRearrScen.R#L 397     sorted_mat <- sorted_mat[order(sorte...
R/EstimRearrScen.R#L 398     sorted_mat <- cbind(sorted_mat, indi...
R/EstimRearrScen.R#L 399     sorted_mat[,6] <- sorted_mat[,4] * s...
R/EstimRearrScen.R#L 401     sorted_mat <- sorted_mat[order(sorte...
R/EstimRearrScen.R#L 403     permutation_order <- cbind(sorted_ma...
R/EstimRearrScen.R#L 406     colnames(block_key) <- c('start1', '...
R/EstimRearrScen.R#L 480     #every iteration we create a black l...
R/EstimRearrScen.R#L 486       if (val < 0){ #if negative, map pe...
R/EstimRearrScen.R#L 491         bpg <- add_connection(bpg, v2, v...
R/EstimRearrScen.R#L 492         bpg <- add_connection(bpg, v1, v...
R/EstimRearrScen.R#L 499         bpg <- add_connection(bpg, v1, v...
R/EstimRearrScen.R#L 500         bpg <- add_connection(bpg, v2, v...
R/EstimRearrScen.R#L 503       bpg <- add_connection(bpg, v1, pre...
R/EstimRearrScen.R#L 553         if((rearr$block_count + rearr$in...
R/EstimRearrScen.R#L 566     # OUTPUT ---------------------------...
R/EstimRearrScen.R#L 567     return(list('counts'=c(invert_count,...
R/EstimRearrScen.R#L 592       p_hits <- (sum(SyntenyObject[[gen2...
R/EstimRearrScen.R#L 609         # if ( class(rows)[1] == "intege...
R/EstimRearrScen.R#L 646             gen1_match <- gen_info[gen_i...
R/EstimRearrScen.R#L 647             gen2_match <- gen_info[gen_i...
R/EstimRearrScen.R#L 688         chrom_results <- rearrange_chrom...
R/EstimRearrScen.R#L 692                                         ...
R/EstimRearrScen.R#L 701         # These aren't fully fleshed out...
R/EstimRearrScen.R#L 702         rearrangements$Gen1Dup <- rearra...
R/EstimRearrScen.R#L 703         if (is.null(rearrangements$Scena...
R/EstimRearrScen.R#L 706       rearrangements <- list("Translocat...
R/EstimRearrScen.R#L 728       else if (is(entry, 'integer')) out...
R/EstimRearrScen.R#L 730         outvec[j] <- paste0(round(entry$...
R/ExtractBy.R#L   8 # extract stringsets from a series of as...
R/ExtractBy.R#L  16   # z does not need to be supplied by th...
R/ExtractBy.R#L  41     # x shot, where x is the number of c...
R/ExtractBy.R#L  80           seqs1[[m1]][[m2 + collapsecoun...
R/ExtractBy.R#L  81           removevector[(collapsecount + ...
R/ExtractBy.R#L 106     # order n, where n is the number of ...
R/ExtractBy.R#L 151     # THIS FORCES THE ASSUMPTION THAT A ...
R/ExtractBy.R#L 152     # When the nucleotide overlap object...
R/ExtractBy.R#L 166                                         ...
R/ExtractBy.R#L 206             seqs1[[m3 + collapsecount]] ...
R/ExtractBy.R#L 207             removevector[(collapsecount ...
R/ExtractBy.R#L 267     # method 3: pull sequences from a SQ...
R/ExtractBy.R#L 269     # order n, where n is the number of ...
R/ExtractBy.R#L 315     # THIS FORCES THE ASSUMPTION THAT A ...
R/ExtractBy.R#L 316     # When the nucleotide overlap object...
R/ExtractBy.R#L 330                                         ...
R/ExtractBy.R#L 370             seqs1[[m3 + collapsecount]] ...
R/ExtractBy.R#L 371             removevector[(collapsecount ...
R/FastDend-class.R#L  45 setGeneric('parentTree', function(fDend,...
R/FastDend-class.R#L  47   stopifnot("leafNode must be type 'char...
R/FastDend-class.R#L  48   stopifnot("'height' must be a non-nega...
R/FastDend-class.R#L  52   stopifnot('Leaf does not exist in tree...
R/FastDend-class.R#L  73   stopifnot("'y' must be type 'character...
R/FastDend-class.R#L  78   stopifnot('Branch does not exist in tr...
R/FastDend-class.R#L 145   colnames(mat) <- c('label', 'isLeaf', ...
R/FindSets.R#L  79   # end first pass, nodes are pointed up...
R/FindSets.R#L  82   # nodes whose pointer is towards anoth...
R/FindSets.R#L  83   # i.e. scroll through nodes and ask if...
R/gffToDataFrame.R#L   5 # 1: deal with other features - mobile g...
R/gffToDataFrame.R#L  79                                         ...
R/gffToDataFrame.R#L  80                                         ...
R/gffToDataFrame.R#L  81                                         ...
R/gffToDataFrame.R#L  82                                         ...
R/gffToDataFrame.R#L  90                                         ...
R/gffToDataFrame.R#L  91                                         ...
R/gffToDataFrame.R#L  93                                         ...
R/gffToDataFrame.R#L  94                                         ...
R/gffToDataFrame.R#L  95                                         ...
R/gffToDataFrame.R#L  96                                         ...
R/gffToDataFrame.R#L  98                                         ...
R/gffToDataFrame.R#L  99                                         ...
R/gffToDataFrame.R#L 100                                         ...
R/gffToDataFrame.R#L 101                                         ...
R/gffToDataFrame.R#L 109                                         ...
R/gffToDataFrame.R#L 110                                         ...
R/gffToDataFrame.R#L 112                                         ...
R/gffToDataFrame.R#L 209       # AllCDSChildrenList[[m1]][, "Star...
R/gffToDataFrame.R#L 210       #                                 ...
R/gffToDataFrame.R#L 211       #                                 ...
R/gffToDataFrame.R#L 212       #                                 ...
R/gffToDataFrame.R#L 213       #                                 ...
R/gffToDataFrame.R#L 214       AllCDSChildrenList[[m1]] <- AllCDS...
R/gffToDataFrame.R#L 215                                         ...
R/gffToDataFrame.R#L 217       if (any(AllCDSChildrenList[[m1]]$S...
R/gffToDataFrame.R#L 218         AllCDSChildrenList[[m1]] <- AllC...
R/gffToDataFrame.R#L 224                         value = (nrow(Ma...
R/gffToDataFrame.R#L 270       } else if (length(unique(CurrentTa...
R/gffToDataFrame.R#L 271         ProductLine[m1] <- unique(Curren...
R/gffToDataFrame.R#L 272       } else if (length(unique(CurrentTa...
R/gffToDataFrame.R#L 273         ProductLine[m1] <- unique(Curren...
R/gffToDataFrame.R#L 282       } else if (length(unique(CurrentTa...
R/gffToDataFrame.R#L 284       } else if (length(unique(CurrentTa...
R/gffToDataFrame.R#L 315       Translation_Table[m1] <- unique(Cu...
R/gffToDataFrame.R#L 319       } else if (length(unique(CurrentTa...
R/gffToDataFrame.R#L 320         ProductLine[m1] <- unique(Curren...
R/gffToDataFrame.R#L 321       } else if (length(unique(CurrentTa...
R/gffToDataFrame.R#L 322         ProductLine[m1] <- unique(Curren...
R/gffToDataFrame.R#L 331       } else if (length(unique(CurrentTa...
R/gffToDataFrame.R#L 333       } else if (length(unique(CurrentTa...
R/gffToDataFrame.R#L 350         MatchLine[[m1]] <- IRanges(start...
R/gffToDataFrame.R#L 351                                    end =...
R/gffToDataFrame.R#L 356         # MatchLine[m1] <- paste(apply(X...
R/gffToDataFrame.R#L 366         # only one CDS bound is has mult...
R/gffToDataFrame.R#L 370         MatchLine[[m1]] <- IRanges(start...
R/gffToDataFrame.R#L 379                         value = ((nrow(M...
R/gffToDataFrame.R#L 409     if (any((MatchLine[[m1]]@start + Mat...
R/gffToDataFrame.R#L 481           B_Starts[(C_Counts + 1L):lengt...
R/gffToDataFrame.R#L 482           B_Ends[(C_Counts + 1L):length(...
R/gffToDataFrame.R#L 501           B_Starts[(C_Counts + 1L):lengt...
R/gffToDataFrame.R#L 502           B_Ends[(C_Counts + 1L):length(...
R/gffToDataFrame.R#L 507           stop("An unmet condition was d...
R/NucleotideOverlap.R#L  12   # Require names for synteny object, DE...
R/NucleotideOverlap.R#L  13   # Parameters Default Filter, FilterOve...
R/NucleotideOverlap.R#L 102       names(ContigNames[[m1]]) <- unique...
R/NucleotideOverlap.R#L 106         stop (paste0("Contig names imply...
R/NucleotideOverlap.R#L 113       StrandConversion <- ifelse(test = ...
R/NucleotideOverlap.R#L 117       StopConversion <- GeneCalls[[m1]]@...
R/NucleotideOverlap.R#L 174                                         ...
R/NucleotideOverlap.R#L 175                                         ...
R/NucleotideOverlap.R#L 180       FeatureRepresentations[[m1]] <- Fe...
R/NucleotideOverlap.R#L 257       # the column "Gene" assigns whethe...
R/NucleotideOverlap.R#L 304         # unless it has been fiddled wit...
R/NucleotideOverlap.R#L 351         stop (paste0("Contig names imply...
R/NucleotideOverlap.R#L 375       # Collect Index Start Stop and Str...
R/NucleotideOverlap.R#L 462         CurrentHitTable <- CurrentHitTab...
R/NucleotideOverlap.R#L 463         CurrentHitTable <- CurrentHitTab...
R/NucleotideOverlap.R#L 471         # If not limiting by index, orde...
R/NucleotideOverlap.R#L 497           S.HitEnds[i] <- CurrentHitTabl...
R/NucleotideOverlap.R#L 499           S.HitStarts[i] <- CurrentHitTa...
R/NucleotideOverlap.R#L 504       # Record a query matrix for every ...
R/NucleotideOverlap.R#L 564               AvailableReRegisters <- QH...
R/NucleotideOverlap.R#L 571               } # else do nothing, no hi...
R/NucleotideOverlap.R#L 608             # Trim hit in subject, overl...
R/NucleotideOverlap.R#L 635             # record the add counter eve...
R/NucleotideOverlap.R#L 670             # record the add counter eve...
R/NucleotideOverlap.R#L 711             # record the add counter eve...
R/NucleotideOverlap.R#L 752             # record the add counter eve...
R/NucleotideOverlap.R#L 762             # If the index of the hits i...
R/NucleotideOverlap.R#L 777       colnames(QueryMatrix) <- c("Curren...
R/NucleotideOverlap.R#L 778                                  "QueryN...
R/NucleotideOverlap.R#L 779                                  "QueryN...
R/NucleotideOverlap.R#L 780                                  "Subjec...
R/NucleotideOverlap.R#L 781                                  "Subjec...
R/NucleotideOverlap.R#L 782                                  "Subjec...
R/NucleotideOverlap.R#L 783                                  "QueryI...
R/NucleotideOverlap.R#L 784                                  "Subjec...
R/NucleotideOverlap.R#L 812                                         ...
R/NucleotideOverlap.R#L 875                                         ...
R/NucleotideOverlap.R#L 887               ExactOverLap <- S.HitEnds[...
R/NucleotideOverlap.R#L 908                                         ...
R/NucleotideOverlap.R#L 944                                         ...
R/NucleotideOverlap.R#L 979                                         ...
R/NucleotideOverlap.R#L 992               # if you have outpaced the...
R/NucleotideOverlap.R#L1010       # If it is not, sum up the overlap...
R/NucleotideOverlap.R#L1103       # QueryStartDisplacement <- ifelse...
R/NucleotideOverlap.R#L1104       #                                 ...
R/NucleotideOverlap.R#L1105       #                                 ...
R/NucleotideOverlap.R#L1106       # QueryStopDisplacement <- ifelse(...
R/NucleotideOverlap.R#L1107       #                                 ...
R/NucleotideOverlap.R#L1108       #                                 ...
R/NucleotideOverlap.R#L1109       # SubjectStartDisplacement <- ifel...
R/NucleotideOverlap.R#L1110       #                                 ...
R/NucleotideOverlap.R#L1111       #                                 ...
R/NucleotideOverlap.R#L1112       # SubjectStopDisplacement <- ifels...
R/NucleotideOverlap.R#L1113       #                                 ...
R/NucleotideOverlap.R#L1114       #                                 ...
R/PairSummaries.R#L 227         # Features01[[Count]][[m3]] <- e...
R/PairSummaries.R#L 229         #                               ...
R/PairSummaries.R#L 230         # Features01[[Count]][[m3]] <- D...
R/PairSummaries.R#L 259           # if collapsing must take plac...
R/PairSummaries.R#L 264             Features01[[Count]][[m3]][[m...
R/PairSummaries.R#L 265             remove[(CollapseCount + 1L):...
R/PairSummaries.R#L 299           Features01[[Count]][[m3]][Flip...
R/PairSummaries.R#L 336       # implementation 3 - shortest poss...
R/PairSummaries.R#L 349           Features01[[Count]][[m4 + Coll...
R/PairSummaries.R#L 350           remove[(CollapseCount + 1L):(C...
R/PairSummaries.R#L 358         Features01[[Count]][FlipMe] <- r...
R/PairSummaries.R#L 362     names(Features01[[Count]]) <- paste(...
R/PairSummaries.R#L 404                                         ...
R/PairSummaries.R#L 426     names(Features02[[Count]]) <- paste(...
R/PairSummaries.R#L 450       cat("Overhead is too large to keep...
R/PairSummaries.R#L 552         p1l <- GeneCalls[[m1]]$Stop[Synt...
R/PairSummaries.R#L 553         p2l <- GeneCalls[[m2]]$Stop[Synt...
R/PairSummaries.R#L 590           diff2[m3] <- 1 - mean(diff1[Sy...
R/PairSummaries.R#L 591                                         ...
R/PairSummaries.R#L 607           CIM <- IMatrix[IndexKey == UIK...
R/PairSummaries.R#L 608           CPM <- PMatrix[IndexKey == UIK...
R/PairSummaries.R#L 616             # be better at assigning nei...
R/PairSummaries.R#L 661             # when p2 left or right is n...
R/PairSummaries.R#L 662             # you can have neighbors on ...
R/PairSummaries.R#L 673             RKey[[m3]] <- as.integer(Nei...
R/PairSummaries.R#L 674             LKey[[m3]] <- as.integer(Nei...
R/PairSummaries.R#L 768                     GapFill[[g1]][[g2]] ...
R/PairSummaries.R#L 769                                         ...
R/PairSummaries.R#L 771                                         ...
R/PairSummaries.R#L 772                                         ...
R/PairSummaries.R#L 806             # ExteriorMissQuery <- c(Syn...
R/PairSummaries.R#L 807             #                        Gen...
R/PairSummaries.R#L 808             # ExteriorMissSubject <- c(S...
R/PairSummaries.R#L 809             #                          G...
R/PairSummaries.R#L 829             QGeneLength <- GeneCalls[[m1...
R/PairSummaries.R#L 830             SGeneLength <- GeneCalls[[m2...
R/PairSummaries.R#L 831             # InteriorMissQuery <- QGene...
R/PairSummaries.R#L 832             # InteriorMissSubject <- SGe...
R/PairSummaries.R#L 845             QGeneLength <- GeneCalls[[m1...
R/PairSummaries.R#L 846             SGeneLength <- GeneCalls[[m2...
R/PairSummaries.R#L 850             # ExteriorMissQuery <- Synte...
R/PairSummaries.R#L 851             # ExteriorMissSubject <- Syn...
R/PairSummaries.R#L 852             # InteriorMissQuery <- QGene...
R/PairSummaries.R#L 853             # InteriorMissSubject <- SGe...
R/PairSummaries.R#L 866           QGeneLength <- GeneCalls[[m1]]...
R/PairSummaries.R#L 867           SGeneLength <- GeneCalls[[m2]]...
R/PairSummaries.R#L 871           # ExteriorMissQuery <- Synteny...
R/PairSummaries.R#L 872           # ExteriorMissSubject <- Synte...
R/PairSummaries.R#L 873           # InteriorMissQuery <- QGeneLe...
R/PairSummaries.R#L 874           # InteriorMissSubject <- SGene...
R/PairSummaries.R#L 895           # in which case only one set o...
R/PairSummaries.R#L 915               Features01[[m1]][[m3]] <- ...
R/PairSummaries.R#L 921                 # if collapsing must tak...
R/PairSummaries.R#L 926                   Features01[[m1]][[m3]]...
R/PairSummaries.R#L 927                   remove[(CollapseCount ...
R/PairSummaries.R#L 935                 Features01[[m1]][[m3]][F...
R/PairSummaries.R#L 954                 Features01[[m1]][[m4 + C...
R/PairSummaries.R#L 955                 remove[(CollapseCount + ...
R/PairSummaries.R#L 962               Features01[[m1]][FlipMe] <...
R/PairSummaries.R#L 965           names(Features01[[m1]]) <- pas...
R/PairSummaries.R#L 998               Features01[[m2]][[m3]] <- ...
R/PairSummaries.R#L1004                 # if collapsing must tak...
R/PairSummaries.R#L1009                   Features01[[m2]][[m3]]...
R/PairSummaries.R#L1010                   remove[(CollapseCount ...
R/PairSummaries.R#L1018                 Features01[[m2]][[m3]][F...
R/PairSummaries.R#L1037                 Features01[[m2]][[m4 + C...
R/PairSummaries.R#L1038                 remove[(CollapseCount + ...
R/PairSummaries.R#L1045               Features01[[m2]][FlipMe] <...
R/PairSummaries.R#L1049           names(Features01[[m2]]) <- pas...
R/PairSummaries.R#L1086         # QuerySeqs[QGeneStrand == 1L] <...
R/PairSummaries.R#L1087         # SubjectSeqs[SGeneStrand == 1L]...
R/PairSummaries.R#L1098           NucDist[m3] <- sqrt(sum((nuc1[...
R/PairSummaries.R#L1144                                         ...
R/PairSummaries.R#L1199                 # print(paste(class(Curr...
R/PairSummaries.R#L1208                                         ...
R/PairSummaries.R#L1209                 # print(paste(class(Curr...
R/PairSummaries.R#L1226                                         ...
R/PairSummaries.R#L1227                                         ...
R/PairSummaries.R#L1228                                         ...
R/PairSummaries.R#L1236                                         ...
R/PairSummaries.R#L1248           # when users specify a storage...
R/PairSummaries.R#L1317                                     "PID...
R/PairSummaries.R#L1318                                         ...
R/ProtWeaver-class.R#L  46   stopifnot('ProtWeaver expects a list o...
R/ProtWeaver-class.R#L  64                   'for MT algorithms. Co...
R/ProtWeaver-class.R#L  77         if (!noWarn) message('Disabling ...
R/ProtWeaver-class.R#L  78                              ' include a...
R/ProtWeaver-class.R#L  79                              ' methods. ...
R/ProtWeaver-class.R#L  93     if (!noWarn) message('Co-localizatio...
R/ProtWeaver-class.R#L  95             '(where ORDER is a numeric)....
R/ProtWeaver-class.R#L 145 predict.ProtWeaver <- function(object, M...
R/ProtWeaver-DMPreds.R#L  47     stopifnot('MySpeciesTree must be a d...
R/ProtWeaver-DMPreds.R#L 144         warning('Matrix is exactly singu...
R/ProtWeaver-DMPreds.R#L 164 ContextTree.ProtWeaver <- function(pw, S...
R/ProtWeaver-PAPreds.R#L 130                                         ...
R/ProtWeaver-PAPreds.R#L 207                                   precal...
R/ProtWeaver-PAPreds.R#L 244   stopifnot("Method 'Behdenna' requires ...
R/ProtWeaver-PAPreds.R#L 254     pap <- PAProfiles(pw, uvals, Verbose...
R/ProtWeaver-PAPreds.R#L 267     glmat[,i] <- abs(generateGainLossVec...
R/ProtWeaver-ResiduePreds.R#L  19   stopifnot('ProtWeaver object must be i...
R/ProtWeaver-ResiduePreds.R#L  21   stopifnot('ProtWeaver dendrograms must...
R/ProtWeaver-utils.R#L  61   stopifnot('ProtWeaver object must be i...
R/ProtWeaver-utils.R#L  80       # This is occasionally throwing er...
R/ProtWeaver-utils.R#L 111                 (is(Subset, 'character')...
R/ProtWeaver-utils.R#L 152 flatdendrapply <- function(dend, NODEFUN...
R/ProtWeaver-utils.R#L 197   rtk <- vapply(seq_len(nrow(AdjDf)), fu...
R/ProtWeaver-utils.R#L 270 DCA_logrise_run <- function(spins, links...
R/ProtWeaver-utils.R#L 272     availableCores <- max(detectCores() ...
R/ProtWeaver-utils.R#L 276       NumCores <- ifelse(NumCores < 0, a...
R/ProtWeaver-utils.R#L 293                                         ...
R/ProtWeaver-utils.R#L 307   if (printProgress) cat('\n  Done.\n  E...
R/ProtWeaver-utils.R#L 327     uthresh <- ifelse(is.na(double_up), ...
R/ProtWeaver-utils.R#L 335     lthresh <- ifelse(is.na(double_down)...
R/ProtWeaver-utils.R#L 437   a <- .Call('trimCovar', fm, as.integer...
R/ProtWeaver-utils.R#L 441 ResidueMIDend <- function(dend1, dend2, ...
R/ProtWeaver-utils.R#L 529   stopifnot('seqSets must be XStringSets...
R/ProtWeaver-utils.R#L 530   stopifnot('seqSetq sequences have diff...
R/ProtWeaver-utils.R#L 532   stopifnot('seqSet2 sequences have diff...
R/ProtWeaver-utils.R#L 536   stopifnot('seqSets must be named'=!is....
R/ProtWeaver-utils.R#L 537   stopifnot('seqSets must be named'=all(...
R/ProtWeb-class.R#L  35         cur_dists[i,j] <- cur_dists[j,i]...
R/ProtWeb-class.R#L 124   rtk <- vapply(seq_len(nrow(AdjDf)), fu...
R/SelectByK.R#L   3 # users select a confidence that is the ...
R/SelectByK.R#L   5 # so you will retain pairs whose PID is ...
R/SelectByK.R#L   7 # users can also move the ClusterScalar ...
R/SelectByK.R#L   9 # cluster number selection if performed ...
R/SelectByK.R#L  10 # to a right hyperbola / one-site bindin...
R/SelectByK.R#L  11 # the scalar argument, when it is left w...
R/SelectByK.R#L  12 # as scalar is adjusted, ceiling(Kd * Cl...
R/SelectByK.R#L  32     stop ("User has requested more max c...
R/SelectByK.R#L  35     warning ("User has requested a numbe...
R/SelectByK.R#L  40   dat1 <- data.frame("RelativeMatch" = P...
R/SelectByK.R#L  89   # fit is offset by -2L to plot and fit...
R/SelectByK.R#L  91   EvalClust <- ceiling((FitASum$coeffici...
R/SelectByK.R#L  93     warning("Evaluated clusters may be i...
R/SelectByK.R#L  97     warning("Scalar selection requested ...
R/SelectByK.R#L 110   # that users input, default is 50%, se...
R/SelectByK.R#L 113   #   warning("Evaluated clusters may be...
R/SelectByK.R#L 116   # EvalClust <- max(which(diff(wss) <= ...
R/SequenceSimilarity.R#L  30       # build a generic DNA Substitution...
R/SequenceSimilarity.R#L  50   PresentCharacters <- PresentCharacters...
R/SequenceSimilarity.R#L  57     stop ("Substitution matrix does not ...
R/simMat-class.R#L  94   format_vals <- function(x) paste0(form...
R/simMat-class.R#L 320       warning("number of items to replac...
R/simMat-class.R#L 334     warning("number of items to replace ...
R/simMat-class.R#L 385     warning("number of items to replace ...
R/SubSetPairs.R#L  35   # can be a numeric between zero and 1,...
R/SubSetPairs.R#L  45     stop ("RejectCompetitors argument mu...
R/SubSetPairs.R#L  65                                         ...
R/SubSetPairs.R#L  66                                         ...
R/SubSetPairs.R#L  69                                         ...
R/SubSetPairs.R#L  70                                         ...
R/SubSetPairs.R#L  73                                         ...
R/SubSetPairs.R#L  74                                         ...
R/SubSetPairs.R#L  77                                         ...
R/SubSetPairs.R#L  78                                         ...
R/SubSetPairs.R#L  81                                         ...
R/SubSetPairs.R#L  82                                         ...
R/SubSetPairs.R#L  85                                         ...
R/SubSetPairs.R#L  86                                         ...
R/SuperTree.R#L   4       !all(vapply(myDendList, \(x) is(x,...
R/SuperTree.R#L  45   dmat <- countmat <- matrix(0, nrow=len...
R/SuperTree.R#L  92     cat("Done.\nTime difference of", rou...
R/SuperTree.R#L  97 #load('/Users/aidan/Nextcloud/RStudioSyn...
SynExtend/NAMESPACE#L   9 importFrom("utils", "setTxtProgressBar",...
SynExtend/NAMESPACE#L  10 importFrom("stats", "predict", "runif", ...
SynExtend/NAMESPACE#L  12 importFrom("graphics", "hist", "points",...
man/BlastSeqs.Rd#L   7 Wrapper to run \href{https://blast.ncbi....
man/BlastSeqs.Rd#L  11 \href{https://blast.ncbi.nlm.nih.gov/Bla...
man/BlastSeqs.Rd#L  25     the commandline \code{makeblastdb} f...
man/BlastSeqs.Rd#L  26     on building BLAST DBs, see \href{htt...
man/BlastSeqs.Rd#L  29     Type of BLAST query to run. See 'Det...
man/BlastSeqs.Rd#L  43       \code{blastn}: Nucleotide sequence...
man/BlastSeqs.Rd#L  49       \code{tblastn}: Translates nucleot...
man/BlastSeqs.Rd#L  57       \code{tblastx}: Translates nucleot...
man/BlastSeqs.Rd#L  62 Different BLAST queries require differen...
man/BlockExpansion.Rd#L  24 Integer value indicating the \code{diff}...
man/BlockExpansion.Rd#L  27 Ignore solo pairs when planning expansio...
man/BlockExpansion.Rd#L  30 Either ``PID'' or ``Score'', indicating ...
man/BlockExpansion.Rd#L  37 Logical indicating whether or not to ret...
man/BlockExpansion.Rd#L  40 A file or connection pointing to the \co...
man/BlockExpansion.Rd#L  43 Logical indicating whether or not to dis...
man/BlockExpansion.Rd#L  47 \code{BlockExpansion} uses a naive expan...
man/BlockExpansion.Rd#L  57 \code{\link{PairSummaries}}, \code{\link...
man/BlockReconciliation.Rd#L   7 Take in a \code{PairSummaries} object an...
man/BlockReconciliation.Rd#L  22 A logical defaulting to \code{TRUE}. By ...
man/BlockReconciliation.Rd#L  25 A character vector of length 1, defaulti...
man/BlockReconciliation.Rd#L  28 Defaults to \code{NULL}, a numeric of le...
man/BlockReconciliation.Rd#L  31 Defaults to \code{NULL}, a numeric of le...
man/BlockReconciliation.Rd#L  34 Logical indicating whether or not to dis...
man/BlockReconciliation.Rd#L  38 If a given \code{PairSummaries} object c...
man/BlockReconciliation.Rd#L  41 A data.frame of class ``data.frame'' and...
man/BlockReconciliation.Rd#L  48 \code{\link{FindSynteny}}, \code{\link{S...
man/DisjointSet.Rd#L   7 Takes in a \code{PairSummaries} object a...
man/DisjointSet.Rd#L  18 Logical indicating whether to print prog...
man/DisjointSet.Rd#L  22 Takes in a \code{PairSummaries} object a...
man/DisjointSet.Rd#L  25 Returns a list of character vectors repr...
man/DisjointSet.Rd#L  32 \code{\link{FindSynteny}}, \code{\link{S...
man/Endosymbionts_Pairs03.Rd#L   8 An object of class \code{PairSummaries} ...
man/EstimRearrScen.Rd#L   9 Take in a \code{\link[=Synteny-class]{Sy...
man/EstimRearrScen.Rd#L  20   \code{\link[=Synteny-class]{Synteny}} ...
man/EstimRearrScen.Rd#L  21   Expected input is unichromosomal seque...
man/EstimRearrScen.Rd#L  24   Numeric; Number of times to simulate s...
man/EstimRearrScen.Rd#L  25   values) runs each analysis for \eqn{\s...
man/EstimRearrScen.Rd#L  29   Logical; If TRUE, returns the mean num...
man/EstimRearrScen.Rd#L  32   transpositions reported; the specific ...
man/EstimRearrScen.Rd#L  36   Numeric; Minimum size of syntenic bloc...
man/EstimRearrScen.Rd#L  41   Logical; indicates whether or not to d...
man/EstimRearrScen.Rd#L  48 The DCJ model is commonly used to model ...
man/EstimRearrScen.Rd#L  49 we can create a connected graph encoding...
man/EstimRearrScen.Rd#L  50 Each syntenic region is split into two n...
man/EstimRearrScen.Rd#L  51 (beginning and end defined relative to t...
man/EstimRearrScen.Rd#L  54 For example, given a genome with 3 synte...
man/EstimRearrScen.Rd#L  55 is transcribed in the opposite direction...
man/EstimRearrScen.Rd#L  58 Given two genomes, we derive syntenic re...
man/EstimRearrScen.Rd#L  60 of a common color and creates two new ed...
man/EstimRearrScen.Rd#L  65 It can be easily shown that inversions c...
man/EstimRearrScen.Rd#L  70 However, DCJ distance inherently incenti...
man/EstimRearrScen.Rd#L  71 due to the former requiring half as many...
man/EstimRearrScen.Rd#L  72 and there is no evidence to support gene...
man/EstimRearrScen.Rd#L  75 This implementation incentivizes minimum...
man/EstimRearrScen.Rd#L  76 As the search space is large and multipl...
man/EstimRearrScen.Rd#L  77 this algorithm computes multiple scenari...
man/EstimRearrScen.Rd#L  78 try to find the minimum amount of events...
man/EstimRearrScen.Rd#L  82 An \emph{NxN} matrix of lists with the s...
man/EstimRearrScen.Rd#L  88 \code{[i,j]} corresponds to the percent ...
man/EstimRearrScen.Rd#L  89 In the lower triangle, entry \code{[i,j]...
man/EstimRearrScen.Rd#L  91 \item \code{$Inversions} and \code{$Tran...
man/EstimRearrScen.Rd#L  95 \item \code{$Scenario} shows the sequenc...
man/EstimRearrScen.Rd#L  97 \item \code{$Key} provides a mapping bet...
man/EstimRearrScen.Rd#L 101 The \code{print.GenRearr} method prints ...
man/EstimRearrScen.Rd#L 102 showing the number of chromosomes and th...
man/EstimRearrScen.Rd#L 106 The \code{$Scenario} entry describes a s...
man/EstimRearrScen.Rd#L 107 into another, as found by this algorithm...
man/EstimRearrScen.Rd#L 108 the second genome into the first. Thus, ...
man/EstimRearrScen.Rd#L 109 arbitrarily choose the syntenic blocks i...
man/EstimRearrScen.Rd#L 112 As an example, suppose genome 1 has elem...
man/EstimRearrScen.Rd#L 113 \code{E B(r) A(r) G}, with X(r) denoting...
man/EstimRearrScen.Rd#L 114 We can then arbitrarily assign blocks to...
man/EstimRearrScen.Rd#L 115 and genome 2 is \code{(3 -2 -1 4)}, wher...
man/EstimRearrScen.Rd#L 118 Each entry in \code{$Scenario} details a...
man/EstimRearrScen.Rd#L 119 and the number of blocks involved in the...
man/EstimRearrScen.Rd#L 124 Here we inverted the whole block \code{(...
man/EstimRearrScen.Rd#L 134 Step 1 is the original state of genome 2...
man/EstimRearrScen.Rd#L 135 \code{(3 1 2 4)}, and then step 3 moves ...
man/EstimRearrScen.Rd#L 137 It is important to note that the numbere...
man/EstimRearrScen.Rd#L 138 they are blocks of conserved syntenic re...
man/EstimRearrScen.Rd#L 139 up with the original blocks from the Syn...
man/EstimRearrScen.Rd#L 142 \code{$Key} is a mapping between these n...
man/EstimRearrScen.Rd#L 145   \item \code{start1}: Nucleotide positi...
man/EstimRearrScen.Rd#L 149   \item \code{rel_direction_on_2}: 1 if ...
man/EstimRearrScen.Rd#L 151   \item \code{index1}: Label of the gene...
man/EstimRearrScen.Rd#L 155 Friedberg, R., Darling, A. E., & Yancopo...
man/ExampleStreptomycesData.Rd#L  13   a list of presence/absence vectors in ...
man/ExampleStreptomycesData.Rd#L  17 This dataset contains a number of Cluste...
man/ExampleStreptomycesData.Rd#L  18 tree for use with ProtWeaver. This datas...
man/ExampleStreptomycesData.Rd#L  21 \code{a_b_c}, indicating that the gene w...
man/ExampleStreptomycesData.Rd#L  22 \code{b}, and was at the \code{c}'th loc...
man/ExtractBy.Rd#L   7 Return organized \code{DNAStringSet}s ba...
man/ExtractBy.Rd#L  17 A \code{PairSummaries} object, or if \co...
man/ExtractBy.Rd#L  20 A character vector of length 1 indicatin...
man/ExtractBy.Rd#L  23 Optional; a list of identifiers generate...
man/ExtractBy.Rd#L  26 Logical indicating whether to print prog...
man/ExtractBy.Rd#L  30 All sequences are forced into the same d...
man/ExtractBy.Rd#L  33 Return a \code{DNAStringSet}, or list of...
man/ExtractBy.Rd#L  40 \code{\link{FindSynteny}}, \code{\link{S...
man/FindSets.Rd#L   7 Take in a pair of vectors representing t...
man/FindSets.Rd#L  22 Logical indicating whether or not to dis...
man/FindSets.Rd#L  26 \code{FindSets} uses a version of the un...
man/FindSets.Rd#L  29 A two column matrix with the first colum...
man/flatdendrapply.Rd#L  31   Defaults to \code{NODEFUN}, meaning \c...
man/flatdendrapply.Rd#L  54 values are guaranteed to be a list with ...
man/flatdendrapply.Rd#L  61 atomic value with length 1, then the ret...
man/Generic.Rd#L   8 Though the function PairSummaries provid...
man/Generic.Rd#L  15 A model for predicting the PID of a pair...
man/gffToDataFrame.Rd#L  22 A vector of character strings to designa...
man/gffToDataFrame.Rd#L  25 A vector of character strings to query f...
man/gffToDataFrame.Rd#L  28 Logical specifying whether to return the...
man/gffToDataFrame.Rd#L  46                                         ...
man/LinkedPairs-class.Rd#L   9 Syntenic blocks describe where order is ...
man/LinkedPairs-class.Rd#L  35 Objects of class \code{LinkedPairs} are ...
man/LinkedPairs-class.Rd#L  37 The object serves only as a simple packa...
man/NucleotideOverlap.Rd#L   7 A function for concisely tabulating wher...
man/NucleotideOverlap.Rd#L  18 An object of class ``Synteny'' built fro...
man/NucleotideOverlap.Rd#L  21 A named list of objects of class ``DFram...
man/NucleotideOverlap.Rd#L  24 Logical indicating whether to limit whic...
man/NucleotideOverlap.Rd#L  27 Match names of contigs between gene call...
man/NucleotideOverlap.Rd#L  30 Logical indicating whether or not to dis...
man/NucleotideOverlap.Rd#L  34 Builds a matrix of lists that contain in...
man/NucleotideOverlap.Rd#L  37 An object of class ``LinkedPairs''. ``Li...
man/PairSummaries.Rd#L   7 Takes in a ``LinkedPairs'' object and ge...
man/PairSummaries.Rd#L  25 A \code{LinkedPairs} object. In previous...
man/PairSummaries.Rd#L  28 A SQLite connection object or a characte...
man/PairSummaries.Rd#L  31 Logical indicating whether to provide a ...
man/PairSummaries.Rd#L  34 Logical indicating whether to provide a ...
man/PairSummaries.Rd#L  37 Logical indicating alignment type prefer...
man/PairSummaries.Rd#L  40 Logical indicating whether or not to dis...
man/PairSummaries.Rd#L  43 A character string specifying a model to...
man/PairSummaries.Rd#L  46 A character used to set the default tran...
man/PairSummaries.Rd#L  49 Match names of contigs between gene call...
man/PairSummaries.Rd#L  52 Defaults to \code{NULL}. Supplying an in...
man/PairSummaries.Rd#L  55 Numeric indicating the approximate size ...
man/PairSummaries.Rd#L  62 The \code{LinkedPairs} object generated ...
man/PairSummaries.Rd#L  65 A data.frame of class ``data.frame'' and...
man/PairSummaries.Rd#L  72 \code{\link{FindSynteny}}, \code{\link{S...
man/plot.ProtWeb.Rd#L   9 This function plots the predictions in t...
man/plot.ProtWeb.Rd#L  40     Cutoff value; if \code{abs(val) < Cu...
man/plot.ProtWeb.Rd#L  47     Logical indicating whether to print ...
man/plot.ProtWeb.Rd#L  55   This function plots the \code{ProtWeb}...
man/plot.ProtWeb.Rd#L  60   \item Connective Force: Tries to push ...
man/plot.ProtWeb.Rd#L  63   The parameters in the function are suf...
man/plot.ProtWeb.Rd#L  64   are welcome to try to tune them for a ...
man/plot.ProtWeb.Rd#L  65   to aid with visualization of the adjac...
man/predict.ProtWeaver.Rd#L   7 This S3 method predicts a functional ass...
man/predict.ProtWeaver.Rd#L  26     Subset of data to predict on. This c...
man/predict.ProtWeaver.Rd#L  29     If a vector, prediction proceeds for...
man/predict.ProtWeaver.Rd#L  30     (either by name, for character vecto...
man/predict.ProtWeaver.Rd#L  33     If a matrix, subset is interpreted a...
man/predict.ProtWeaver.Rd#L  34     specifies a pair to evaluate. These ...
man/predict.ProtWeaver.Rd#L  37     \code{subset=cbind(c(1,1,2), c(2,3,3...
man/predict.ProtWeaver.Rd#L  42     Currently only supported for methods...
man/predict.ProtWeaver.Rd#L  43     to a negative value will use one les...
man/predict.ProtWeaver.Rd#L  45     for more information. This parameter...
man/predict.ProtWeaver.Rd#L  49     Phylogenetic tree of all genomes in ...
man/predict.ProtWeaver.Rd#L  51     rooted, bifurcating tree (other valu...
man/predict.ProtWeaver.Rd#L  62     For methods that return z-scores, sh...
man/predict.ProtWeaver.Rd#L  63     returns normalized absolute value of...
man/predict.ProtWeaver.Rd#L  68     For \code{Method='Ensemble'}, should...
man/predict.ProtWeaver.Rd#L  70     If \code{TRUE}, this will instead re...
man/predict.ProtWeaver.Rd#L  71     with predictions from each algorithm...
man/predict.ProtWeaver.Rd#L  74     If \code{FALSE}, ProtWeaver will ret...
man/predict.ProtWeaver.Rd#L  78       Internal parameter used for ensemb...
man/predict.ProtWeaver.Rd#L  83     Logical indicating whether to print ...
man/predict.ProtWeaver.Rd#L  91 \code{predict.ProtWeaver} wraps several ...
man/predict.ProtWeaver.Rd#L  99   \item \code{'Behdenna'}: Analysis of G...
man/predict.ProtWeaver.Rd#L 106 Additional information and references fo...
man/predict.ProtWeaver.Rd#L 116 This returns a \code{ProtWeb} object, an...
man/predict.ProtWeaver.Rd#L 121 runnable with the given data. Note that ...
man/predict.ProtWeaver.Rd#L 122 tree, which must be bifurcating. Method ...
man/predict.ProtWeaver.Rd#L 136   \code{NumCores} uses 1 less core than ...
man/predict.ProtWeaver.Rd#L 137   cannot detect the number of available ...
man/predict.ProtWeaver.Rd#L 139   out of forking processes, with the onl...
man/ProtWeaver-ColocPreds.Rd#L  22 with gene locations using the a three nu...
man/ProtWeaver-ColocPreds.Rd#L  28 instead of number of base pairs avoids b...
man/ProtWeaver-DMPreds.Rd#L  24 with \code{dendrogram} objects. See \cod...
man/ProtWeaver-DMPreds.Rd#L  35 for overall evolutionary rate using a sp...
man/ProtWeaver-DMPreds.Rd#L  45 Pazos, F. and A. Valencia, \emph{Similar...
man/ProtWeaver-DMPreds.Rd#L  47 Pazos, F., et al., \emph{Assessing prote...
man/ProtWeaver-DMPreds.Rd#L  49 Sato, T., et al., \emph{The inference of...
man/ProtWeaver-DMPreds.Rd#L  51 Sato, T., et al., \emph{Partial correlat...
man/ProtWeaver-PAPreds.Rd#L  30 with any input type. See \code{\link{Pro...
man/ProtWeaver-PAPreds.Rd#L  46 though the implementation in \code{ProtW...
man/ProtWeaver-PAPreds.Rd#L  60 Behdenna, A., et al., \emph{Testing for ...
man/ProtWeaver-PAPreds.Rd#L  62 Fukunaga, T. and W. Iwasaki, \emph{Inver...
man/ProtWeaver-PAPreds.Rd#L  64 Lokhov, A.Y., et al., \emph{Optimal stru...
man/ProtWeaver-PAPreds.Rd#L  66 Weigt, M., et al., \emph{Identification ...
man/ProtWeaver-ResiduePreds.Rd#L  22 with \code{dendrogram} objects and ances...
man/ProtWeaver-ResiduePreds.Rd#L  42 Gao, C. Y., et al., \emph{Correlation-co...
man/ProtWeaver-ResiduePreds.Rd#L  45 Pazos, F. and A. Valencia, \emph{In sili...
man/ProtWeaver.Rd#L   9 ProtWeaver is an S3 class with methods f...
man/ProtWeaver.Rd#L  10 protein or gene data. ProtWeaver impleme...
man/ProtWeaver.Rd#L  18 gene. List must contain either dendrogra...
man/ProtWeaver.Rd#L  19 If list is composed of dendrograms, each...
man/ProtWeaver.Rd#L  22 Several algorithms depend on having cert...
man/ProtWeaver.Rd#L  26 ProtWeaver expects input data to be a li...
man/ProtWeaver.Rd#L  38 In (1), each ID#i corresponds to the uni...
man/ProtWeaver.Rd#L  40 Case (2) is the same as (1), just with t...
man/ProtWeaver.Rd#L  42 Case (3) expects gene trees for each gen...
man/ProtWeaver.Rd#L  46 ProtWeaver requires input of scenario (3...
man/ProtWeaver.Rd#L  47 Residue covariation methods require dend...
man/ProtWeaver.Rd#L  50 Note that ALL entries must belong to the...
man/ProtWeaver.Rd#L  52 Prediction of a functional association n...
man/ProtWeb.Rd#L  16 \code{\link{predict.ProtWeaver}} returns...
man/ProtWeb.Rd#L  18 only implements a \code{plot} function, ...
man/SelectByK.Rd#L   7 A relatively simple k-means clustering a...
man/SelectByK.Rd#L  24 A numeric value greater than 0 and less ...
man/SelectByK.Rd#L  27 A numeric value used to scale selection ...
man/SelectByK.Rd#L  30 Integer value indicating the largest num...
man/SelectByK.Rd#L  34 A logical value, if ``TRUE'', function r...
man/SelectByK.Rd#L  37 Logical indicating whether or not to plo...
man/SelectByK.Rd#L  40 Logical indicating whether or not to dis...
man/SelectByK.Rd#L  43 Logical indicating whether to retain the...
man/SelectByK.Rd#L  47 \code{SelectByK} uses a naive k-means ro...
man/SelectByK.Rd#L  48 This function is intended to be used at ...
man/SelectByK.Rd#L  58 \code{\link{PairSummaries}}, \code{\link...
man/SequenceSimilarity.Rd#L   4 Return a numeric value that represents t...
man/SequenceSimilarity.Rd#L   7 Takes in a \code{DNAStringSet} or \code{...
man/SequenceSimilarity.Rd#L  21 A named matrix representing a substituti...
man/SequenceSimilarity.Rd#L  24 A logical indicating whether or not to p...
man/SequenceSimilarity.Rd#L  27 A logical indicating whether or not to p...
man/SequenceSimilarity.Rd#L  30 A logical indicating whether or not allo...
man/SequenceSimilarity.Rd#L  34 Takes in a \code{DNAStringSet} or \code{...
man/SequenceSimilarity.Rd#L  45 \code{\link{AlignSeqs}}, \code{\link{Ali...
man/simMat.Rd#L  45 Numeric (or \code{NA_real_}) indicating ...
man/simMat.Rd#L  61 \item{x}{Various; for \code{print} and \...
man/simMat.Rd#L  62 \item{n}{Integer (Optional); maximum num...
man/simMat.Rd#L  71 \item \code{simMat} objects have streaml...
man/simMat.Rd#L  72 \item \code{simMat} objects support matr...
man/simMat.Rd#L  75 \item \code{simMat} objects support conv...
man/simMat.Rd#L  76 \item \code{simMat} objects implement ge...
man/simMat.Rd#L  82 \code{simMat} and \code{as.simMat} retur...
man/simMat.Rd#L  86 The object has the following attributes ...
man/SubSetPairs.Rd#L   7 For a given object of class ``PairSummar...
man/SubSetPairs.Rd#L  19 An object of class ``PairSummaries''. Ca...
man/SubSetPairs.Rd#L  22 A named vector where values indicate a t...
man/SubSetPairs.Rd#L  25 A logical that defaults to ``TRUE''. All...
man/SubSetPairs.Rd#L  28 A character indicating which column valu...
man/SubSetPairs.Rd#L  31 A logical indicating whether or not to r...
man/SubSetPairs.Rd#L  34 Logical indicating whether or not to dis...
man/SubSetPairs.Rd#L  38 \code{SubSetPairs} uses a naive competit...
man/SubSetPairs.Rd#L  41 An object of class ``PairSummaries'', or...
man/SuperTree.Rd#L  20   Optional input specifying a function t...
man/SuperTree.Rd#L  21   labels into species names. This functi...
man/SuperTree.Rd#L  22   and return a character vector of the s...
man/SuperTree.Rd#L  38 identical species sets, as the algorithm...
man/SuperTree.Rd#L  43 \code{SynExtend} (ex. \code{\link{Disjoi...
man/SuperTree.Rd#L  46 which species/genome each leaf is from. ...
man/SuperTree.Rd#L  54 Vachaspati, P., Warnow, T. \emph{ASTRID:...
man/SuperTreeEx.Rd#L  13   A list with 20 elements, where each is...
man/SuperTreeEx.Rd#L  14   corresponding to a gene tree construct...
vignettes/UsingSynExtend.Rmd#L  17 `SynExtend` is a package of tools for wo...
vignettes/UsingSynExtend.Rmd#L  19 Synteny maps provide a powerful tool for...
vignettes/UsingSynExtend.Rmd#L  21 `FindSynteny` takes a different approach...
vignettes/UsingSynExtend.Rmd#L  25 Currently `SynExtend` contains one set o...
vignettes/UsingSynExtend.Rmd#L  42 Using the `FindSynteny` function in `DEC...
vignettes/UsingSynExtend.Rmd#L  54 Synteny maps represent where genomes sha...
vignettes/UsingSynExtend.Rmd#L  61 Data present inside objects of class `Sy...
vignettes/UsingSynExtend.Rmd#L  68 The above printed objects show the data ...
vignettes/UsingSynExtend.Rmd#L  70 To take advantage of these synteny maps,...
vignettes/UsingSynExtend.Rmd#L  72 Next, GFF annotations for the associated...
vignettes/UsingSynExtend.Rmd#L  77                                        "...
vignettes/UsingSynExtend.Rmd#L  81 # in an effort to be space conscious, no...
vignettes/UsingSynExtend.Rmd#L  85 `SynExtend`'s `gffToDataFrame` function ...
vignettes/UsingSynExtend.Rmd#L  91 Raw GFF imports are also acceptable, but...
vignettes/UsingSynExtend.Rmd#L  95                                        "...
vignettes/UsingSynExtend.Rmd#L 101 `SynExtend`'s primary functions provide ...
vignettes/UsingSynExtend.Rmd#L 109 The `Links` object generated by Nucleoti...
vignettes/UsingSynExtend.Rmd#L 116 This raw data can be processed to provid...
vignettes/UsingSynExtend.Rmd#L 125 The object `LinkedPairs1` is a data.fram...
vignettes/UsingSynExtend.Rmd#L 131 PairSummaries includes arguments that al...
vignettes/UsingSynExtend.Rmd#L 133 As of SynExtend v 1.3.13, the functions ...
* NOTE: Consider multiples of 4 spaces for line indents; 5868 lines (50%) are not.
First few lines:
R/BlastSeqs.R#L   6                       blastType=c('blast...
R/BlastSeqs.R#L   7                       extraArgs='', verb...
R/BlastSeqs.R#L   8   if (length(blastType) > 1) blastType <...
R/BlastSeqs.R#L   9   stopifnot("'seqs' must be XStringSet o...
R/BlastSeqs.R#L  10               any(is(seqs, 'DNAStringSet...
R/BlastSeqs.R#L  14   ...
R/BlastSeqs.R#L  15   stopifnot("'BlastDB' file does not exi...
R/BlastSeqs.R#L  16   ...
R/BlastSeqs.R#L  17   stopifnot('blastType must be a single ...
R/BlastSeqs.R#L  18   stopifnot('Undefined blast type'=(blas...
R/BlastSeqs.R#L  19   bcheck <- pipe(paste0('which ', blastT...
R/BlastSeqs.R#L  20   stopifnot('Requested blast not found. ...
R/BlastSeqs.R#L  21               length(readLines(bcheck)) ...
R/BlastSeqs.R#L  22   close(bcheck)...
R/BlastSeqs.R#L  23   if (verbose) cat(blastType, 'installat...
R/BlastSeqs.R#L  24          ...
R/BlastSeqs.R#L  25   if (!is(seqs, 'character')){...
R/BlastSeqs.R#L  27       stop("'", blastType, "'expects nuc...
R/BlastSeqs.R#L  29       stop("'", blastType, "' expects pr...
R/BlastSeqs.R#L  33   } else {...
R/BlastSeqs.R#L  38   }...
R/BlastSeqs.R#L  39   ...
R/BlastSeqs.R#L  40   query <- paste0(blastType, ' -query ',...
R/BlastSeqs.R#L  41   if (verbose) {...
R/BlastSeqs.R#L  44   }...
R/BlastSeqs.R#L  45   blastres <- pipe(query)...
R/BlastSeqs.R#L  46   blastResults <- tryCatch({...
R/BlastSeqs.R#L  47       b <- read.table( blastres )...
R/BlastSeqs.R#L  48       colnames( b ) <- c( "QueryID",  "S...
R/BlastSeqs.R#L  49                                    "Alig...
R/BlastSeqs.R#L  50                                    "S.st...
R/BlastSeqs.R#L  51       ...
R/BlastSeqs.R#L  52       if (verbose) {...
R/BlastSeqs.R#L  56       }...
R/BlastSeqs.R#L  57       return(b)...
R/BlastSeqs.R#L  61   ...
R/BlastSeqs.R#L  62   if (!is.null(blastResults)) return(bla...
R/BlastSeqs.R#L  63   else invisible(blastResults)...
R/BlockExpansion.R#L   6                            GapTolerance ...
R/BlockExpansion.R#L   7                            DropSingleton...
R/BlockExpansion.R#L   8                            Criteria = "P...
R/BlockExpansion.R#L   9                            Floor = 0.5,...
R/BlockExpansion.R#L  10                            NewPairsOnly ...
R/BlockExpansion.R#L  11                            DBPATH,...
R/BlockExpansion.R#L  12                            Verbose = FAL...
R/BlockExpansion.R#L  13   ...
R/BlockExpansion.R#L  14   if (!("PID" %in% colnames(Pairs))) {...
R/BlockExpansion.R#L  16   }...
R/BlockExpansion.R#L  17   if ("SCORE" %in% colnames(Pairs)) {...
R/BlockExpansion.R#L  19   } else {...
R/BlockExpansion.R#L  21   }...
R/BlockExpansion.R#L  22   if (missing(DBPATH)) {...
R/BlockExpansion.R#L  24   }...
R/BlockExpansion.R#L  25   if (!(Criteria %in% c("PID",...
R/BlockExpansion.R#L  28   }...
R/BlockExpansion.R#L  29   # given the gap tolerance, split diags...
R/BlockExpansion.R#L  30   if (is.null(GapTolerance)) {...
R/BlockExpansion.R#L  32   }...
R/BlockExpansion.R#L  33   if (GapTolerance <= 1L) {...
R/BlockExpansion.R#L  35   }...
R/BlockExpansion.R#L  36   ...
R/BlockExpansion.R#L  37   if (Verbose) {...
R/BlockExpansion.R#L  39   }...
R/BlockExpansion.R#L  40   ...
R/BlockExpansion.R#L  41   MAT1 <- get(data("HEC_MI1",...
R/BlockExpansion.R#L  42                    package = "DECIPHER",...
R/BlockExpansion.R#L  43                    envir = environment()...
R/BlockExpansion.R#L  44   MAT2 <- get(data("HEC_MI2",...
R/BlockExpansion.R#L  45                    package = "DECIPHER",...
R/BlockExpansion.R#L  46                    envir = environment()...
R/BlockExpansion.R#L  47   structureMatrix <- matrix(c(0.187, -0....
R/BlockExpansion.R#L  48                               -0.8, 0.56...
R/BlockExpansion.R#L  49                               -0.873, -0...
R/BlockExpansion.R#L  53                                         ...
R/BlockExpansion.R#L  54   substitutionMatrix <- matrix(c(1.5, -2...
R/BlockExpansion.R#L  55                                  -2.134,...
R/BlockExpansion.R#L  56                                  -0.739,...
R/BlockExpansion.R#L  57                                  -1.298,...
R/BlockExpansion.R#L  58                                nrow = 4,...
R/BlockExpansion.R#L  59                                dimnames ...
R/BlockExpansion.R#L  60   ...
R/BlockExpansion.R#L  61   # break PairSummaries object down into...
R/BlockExpansion.R#L  62   # build overhead data in a way that ma...
R/BlockExpansion.R#L  63   GeneCalls <- attr(x = Pairs,...
R/BlockExpansion.R#L  65   GCIDs <- as.integer(names(GeneCalls))...
R/BlockExpansion.R#L  66   L <- length(GeneCalls)...
R/BlockExpansion.R#L  67   L2 <- (L * (L - 1L)) / 2L...
R/BlockExpansion.R#L  68   POIDs <- paste(Pairs$p1,...
R/BlockExpansion.R#L  69                  Pairs$p2,...
R/BlockExpansion.R#L  70                  sep = "_")...
R/BlockExpansion.R#L  71   FeaturesMat <- do.call(rbind,...
R/BlockExpansion.R#L  72                          strsplit(x = PO...
R/BlockExpansion.R#L  73                                   split ...
R/BlockExpansion.R#L  74                                   fixed ...
R/BlockExpansion.R#L  75   FeaturesMat <- data.frame("g1" = as.in...
R/BlockExpansion.R#L  81   ...
R/BlockExpansion.R#L  82   GMat <- unique(FeaturesMat[, c(1, 4)])...
R/BlockExpansion.R#L  83   rownames(GMat) <- NULL...
R/BlockExpansion.R#L  84   ...
R/BlockExpansion.R#L  85   Res <- vector(mode = "list",...
R/BlockExpansion.R#L  87   ...
R/BlockExpansion.R#L  88   for (m1 in seq(nrow(GMat))) {...
R/BlockExpansion.R#L 101       cat(paste0("### Genome pair: ",...
R/BlockExpansion.R#L 102                  w1,...
R/BlockExpansion.R#L 103                  " - ",...
R/BlockExpansion.R#L 104                  w2,...
R/BlockExpansion.R#L 105                  " ###\n"))...
R/BlockExpansion.R#L 114                   f = list(CMat$i1,...
R/BlockExpansion.R#L 115                            CMat$i2),...
R/BlockExpansion.R#L 116                   drop = TRUE)...
R/BlockExpansion.R#L 124                  function(x) {...
R/BlockExpansion.R#L 125                    which(GeneCalls[[i1]]...
R/BlockExpansion.R#L 126                  },...
R/BlockExpansion.R#L 127                  simplify = FALSE)...
R/BlockExpansion.R#L 129                  function(x) {...
R/BlockExpansion.R#L 130                    which(GeneCalls[[i2]]...
R/BlockExpansion.R#L 131                  },...
R/BlockExpansion.R#L 132                  simplify = FALSE)...
R/BlockExpansion.R#L 134                       function(x) {...
R/BlockExpansion.R#L 136                           min(x)...
R/BlockExpansion.R#L 138                           NA # NA Placeh...
R/BlockExpansion.R#L 140                       },...
R/BlockExpansion.R#L 141                       simplify = TRUE)...
R/BlockExpansion.R#L 143                       function(x) {...
R/BlockExpansion.R#L 145                           max(x)...
R/BlockExpansion.R#L 147                           NA...
R/BlockExpansion.R#L 149                       },...
R/BlockExpansion.R#L 150                       simplify = TRUE)...
R/BlockExpansion.R#L 152                       function(x) {...
R/BlockExpansion.R#L 154                           min(x)...
R/BlockExpansion.R#L 156                           NA # NA Placeh...
R/BlockExpansion.R#L 158                       },...
R/BlockExpansion.R#L 159                       simplify = TRUE)...
R/BlockExpansion.R#L 161                       function(x) {...
R/BlockExpansion.R#L 163                           max(x)...
R/BlockExpansion.R#L 165                           NA...
R/BlockExpansion.R#L 167                       },...
R/BlockExpansion.R#L 168                       simplify = TRUE)...
R/BlockExpansion.R#L 187       ...
R/BlockExpansion.R#L 188       if (Verbose) {...
R/BlockExpansion.R#L 190                    IMat[[m2]][1L, 2L],...
R/BlockExpansion.R#L 191                    " - ",...
R/BlockExpansion.R#L 192                    IMat[[m2]][1L, 5L],...
R/BlockExpansion.R#L 193                    "\n"))...
R/BlockExpansion.R#L 194       }...
R/BlockExpansion.R#L 195       # current offsets...
R/BlockExpansion.R#L 196       ci1lower <- i1lower[IMat[[m2]][1L,...
R/BlockExpansion.R#L 197       ci1upper <- i1upper[IMat[[m2]][1L,...
R/BlockExpansion.R#L 198       ci2lower <- i2lower[IMat[[m2]][1L,...
R/BlockExpansion.R#L 199       ci2upper <- i2upper[IMat[[m2]][1L,...
R/BlockExpansion.R#L 200       if (Verbose) {...
R/BlockExpansion.R#L 202                    ci1lower,...
R/BlockExpansion.R#L 203                    " - ",...
R/BlockExpansion.R#L 204                    ci1upper,...
R/BlockExpansion.R#L 205                    " and ",...
R/BlockExpansion.R#L 206                    ci2lower,...
R/BlockExpansion.R#L 207                    " - ",...
R/BlockExpansion.R#L 208                    ci2upper,...
R/BlockExpansion.R#L 209                    ":\n"))...
R/BlockExpansion.R#L 210       }...
R/BlockExpansion.R#L 211       # if (IMat[[m2]][1L, 2L] == 1 &...
R/BlockExpansion.R#L 212       #     IMat[[m2]][1L, 5L] == 67) {...
R/BlockExpansion.R#L 213       #   print("a")...
R/BlockExpansion.R#L 214       #   # return(list(GeneCalls,...
R/BlockExpansion.R#L 215       #   #             IMat[[m2]][1L, 2...
R/BlockExpansion.R#L 216       #   #             IMat[[m2]][1L, 5...
R/BlockExpansion.R#L 217       #   #             i1))...
R/BlockExpansion.R#L 218       # }...
R/BlockExpansion.R#L 219       ...
R/BlockExpansion.R#L 220       # extract seqs for features one on...
R/BlockExpansion.R#L 221       w5 <- GeneCalls[[i1]]$Index == IMa...
R/BlockExpansion.R#L 222       w6 <- GeneCalls[[i1]]$Coding[w5] &...
R/BlockExpansion.R#L 223       w7 <- unique(GeneCalls[[i1]]$Trans...
R/BlockExpansion.R#L 224       w7 <- w7[!is.na(w7)]...
R/BlockExpansion.R#L 225       w7 <- w7[1L]...
R/BlockExpansion.R#L 226       z1 <- unname(GeneCalls[[i1]]$Range...
R/BlockExpansion.R#L 227       z2 <- lengths(z1)...
R/BlockExpansion.R#L 228       z1 <- unlist(z1,...
R/BlockExpansion.R#L 229                    recursive = FALSE)...
R/BlockExpansion.R#L 230       NTFeatures01 <- extractAt(x = Geno...
R/BlockExpansion.R#L 232       # if (IMat[[m2]][1L, 2L] == 1 &...
R/BlockExpansion.R#L 233       #     IMat[[m2]][1L, 5L] == 67) {...
R/BlockExpansion.R#L 234       #   print("b")...
R/BlockExpansion.R#L 235       # }...
R/BlockExpansion.R#L 236       ...
R/BlockExpansion.R#L 237       CollapseCount <- 0L...
R/BlockExpansion.R#L 238       w <- which(z2 > 1L)...
R/BlockExpansion.R#L 239       # if no collapsing needs to occur,...
R/BlockExpansion.R#L 240       if (length(w) > 0L) {...
R/BlockExpansion.R#L 244                          length = sum(z2...
R/BlockExpansion.R#L 246           NTFeatures01[[m4 + CollapseCou...
R/BlockExpansion.R#L 247           remove[(CollapseCount + 1L):(C...
R/BlockExpansion.R#L 248           CollapseCount <- CollapseCount...
R/BlockExpansion.R#L 254       }...
R/BlockExpansion.R#L 255       ...
R/BlockExpansion.R#L 256       FlipMe <- GeneCalls[[i1]]$Strand[w...
R/BlockExpansion.R#L 257       if (any(FlipMe)) {...
R/BlockExpansion.R#L 259       }...
R/BlockExpansion.R#L 260       ...
R/BlockExpansion.R#L 261       names(NTFeatures01) <- paste(rep(w...
R/BlockExpansion.R#L 262                                        s...
R/BlockExpansion.R#L 263                                    rep(I...
R/BlockExpansion.R#L 264                                        s...
R/BlockExpansion.R#L 265                                    seq(f...
R/BlockExpansion.R#L 266                                        t...
R/BlockExpansion.R#L 267                                        b...
R/BlockExpansion.R#L 268                                    sep =...
R/BlockExpansion.R#L 269       if (!is.na(w7)) {...
R/BlockExpansion.R#L 271                                   geneti...
R/BlockExpansion.R#L 274                                   if.fuz...
R/BlockExpansion.R#L 275       } else {...
R/BlockExpansion.R#L 277       }...
R/BlockExpansion.R#L 278       names(AAFeatures01) <- names(NTFea...
R/BlockExpansion.R#L 279       ...
R/BlockExpansion.R#L 280       Features01Match <- match(x = names...
R/BlockExpansion.R#L 281                                table = n...
R/BlockExpansion.R#L 282       Features01Key <- names(NTFeatures0...
R/BlockExpansion.R#L 283       ...
R/BlockExpansion.R#L 284       # if (IMat[[m2]][1L, 2L] == 1 &...
R/BlockExpansion.R#L 285       #     IMat[[m2]][1L, 5L] == 67) {...
R/BlockExpansion.R#L 286       #   print("c")...
R/BlockExpansion.R#L 287       # }...
R/BlockExpansion.R#L 288       ...
R/BlockExpansion.R#L 289       # extract seqs for features one on...
R/BlockExpansion.R#L 290       w5 <- GeneCalls[[i2]]$Index == IMa...
R/BlockExpansion.R#L 291       w6 <- GeneCalls[[i2]]$Coding[w5] &...
R/BlockExpansion.R#L 292       w7 <- unique(GeneCalls[[i2]]$Trans...
R/BlockExpansion.R#L 293       w7 <- w7[!is.na(w7)]...
R/BlockExpansion.R#L 294       w7 <- w7[1L]...
R/BlockExpansion.R#L 295       z1 <- unname(GeneCalls[[i2]]$Range...
R/BlockExpansion.R#L 296       z2 <- lengths(z1)...
R/BlockExpansion.R#L 297       z1 <- unlist(z1,...
R/BlockExpansion.R#L 298                    recursive = FALSE)...
R/BlockExpansion.R#L 299       NTFeatures02 <- extractAt(x = Geno...
R/BlockExpansion.R#L 301       ...
R/BlockExpansion.R#L 302       # if (IMat[[m2]][1L, 2L] == 1 &...
R/BlockExpansion.R#L 303       #     IMat[[m2]][1L, 5L] == 67) {...
R/BlockExpansion.R#L 304       #   print("d")...
R/BlockExpansion.R#L 305       # }...
R/BlockExpansion.R#L 306       ...
R/BlockExpansion.R#L 307       CollapseCount <- 0L...
R/BlockExpansion.R#L 308       w <- which(z2 > 1L)...
R/BlockExpansion.R#L 309       # if no collapsing needs to occur,...
R/BlockExpansion.R#L 310       if (length(w) > 0L) {...
R/BlockExpansion.R#L 314                          length = sum(z2...
R/BlockExpansion.R#L 316           NTFeatures02[[m4 + CollapseCou...
R/BlockExpansion.R#L 317           remove[(CollapseCount + 1L):(C...
R/BlockExpansion.R#L 318           CollapseCount <- CollapseCount...
R/BlockExpansion.R#L 324       }...
R/BlockExpansion.R#L 325       ...
R/BlockExpansion.R#L 326       FlipMe <- GeneCalls[[i2]]$Strand[w...
R/BlockExpansion.R#L 327       if (any(FlipMe)) {...
R/BlockExpansion.R#L 329       }...
R/BlockExpansion.R#L 330       ...
R/BlockExpansion.R#L 331       # if (IMat[[m2]][1L, 2L] == 1 &...
R/BlockExpansion.R#L 332       #     IMat[[m2]][1L, 5L] == 67) {...
R/BlockExpansion.R#L 333       #   print("g")...
R/BlockExpansion.R#L 334       #   return(list(NTFeatures02,...
R/BlockExpansion.R#L 335       #               w2,...
R/BlockExpansion.R#L 336       #               w5,...
R/BlockExpansion.R#L 337       #               IMat[[m2]][1L, 5L]...
R/BlockExpansion.R#L 338       #               ci2lower,...
R/BlockExpansion.R#L 339       #               ci2upper,...
R/BlockExpansion.R#L 340       #               GeneCalls,...
R/BlockExpansion.R#L 341       #               IMat,...
R/BlockExpansion.R#L 342       #               m2,...
R/BlockExpansion.R#L 343       #               i5,...
R/BlockExpansion.R#L 344       #               i6))...
R/BlockExpansion.R#L 345       # }...
R/BlockExpansion.R#L 346       ...
R/BlockExpansion.R#L 347       names(NTFeatures02) <- paste(rep(w...
R/BlockExpansion.R#L 348                                        s...
R/BlockExpansion.R#L 349                                    rep(I...
R/BlockExpansion.R#L 350                                        s...
R/BlockExpansion.R#L 351                                    seq(f...
R/BlockExpansion.R#L 352                                        t...
R/BlockExpansion.R#L 353                                        b...
R/BlockExpansion.R#L 354                                    sep =...
R/BlockExpansion.R#L 355       if (!is.na(w7)) {...
R/BlockExpansion.R#L 357                                   geneti...
R/BlockExpansion.R#L 360                                   if.fuz...
R/BlockExpansion.R#L 361       } else {...
R/BlockExpansion.R#L 363       }...
R/BlockExpansion.R#L 364       ...
R/BlockExpansion.R#L 365       # if (IMat[[m2]][1L, 2L] == 1 &...
R/BlockExpansion.R#L 366       #     IMat[[m2]][1L, 5L] == 67) {...
R/BlockExpansion.R#L 367       #   print("f")...
R/BlockExpansion.R#L 368       #   return(list(AAFeatures02,...
R/BlockExpansion.R#L 369       #               NTFeatures02,...
R/BlockExpansion.R#L 370       #               w5,...
R/BlockExpansion.R#L 371       #               w6,...
R/BlockExpansion.R#L 372       #               w7))...
R/BlockExpansion.R#L 373       # }...
R/BlockExpansion.R#L 374       names(AAFeatures02) <- names(NTFea...
R/BlockExpansion.R#L 375       ...
R/BlockExpansion.R#L 376       Features02Match <- match(x = names...
R/BlockExpansion.R#L 377                                table = n...
R/BlockExpansion.R#L 378       Features02Key <- names(NTFeatures0...
R/BlockExpansion.R#L 379       ...
R/BlockExpansion.R#L 380       # if (IMat[[m2]][1L, 2L] == 1 &...
R/BlockExpansion.R#L 381       #     IMat[[m2]][1L, 5L] == 67) {...
R/BlockExpansion.R#L 382       #   print("e")...
R/BlockExpansion.R#L 383       # }...
R/BlockExpansion.R#L 384       ...
R/BlockExpansion.R#L 385       # return(list(NTFeatures01,...
R/BlockExpansion.R#L 386       #             NTFeatures02,...
R/BlockExpansion.R#L 387       #             AAFeatures01,...
R/BlockExpansion.R#L 388       #             AAFeatures02,...
R/BlockExpansion.R#L 389       #             Features01Key,...
R/BlockExpansion.R#L 390       #             Features01Match,...
R/BlockExpansion.R#L 391       #             Features02Key,...
R/BlockExpansion.R#L 392       #             Features02Match))...
R/BlockExpansion.R#L 393       ...
R/BlockExpansion.R#L 394       dr1 <- IMat[[m2]][, 3L] - IMat[[m2...
R/BlockExpansion.R#L 395       dr2 <- IMat[[m2]][, 3L] + IMat[[m2...
R/BlockExpansion.R#L 396       IMat[[m2]] <- cbind(IMat[[m2]],...
R/BlockExpansion.R#L 397                           "ID" = seq(nro...
R/BlockExpansion.R#L 398                           "rank1" = dr1,...
R/BlockExpansion.R#L 399                           "rank2" = dr2)...
R/BlockExpansion.R#L 400       ...
R/BlockExpansion.R#L 401       # given the diagonal and anti-diag...
R/BlockExpansion.R#L 402       # build 3 ledgers:...
R/BlockExpansion.R#L 403       # one for the diagonal, one for th...
R/BlockExpansion.R#L 404       # you can be in both the diagonal ...
R/BlockExpansion.R#L 405       # but you cannot be in the singlet...
R/BlockExpansion.R#L 406       ...
R/BlockExpansion.R#L 407       # at this point we have 4 points d...
R/BlockExpansion.R#L 408       # 1: g1 feature ID number...
R/BlockExpansion.R#L 409       # 2: g2 features ID number...
R/BlockExpansion.R#L 410       # 3: diag rank...
R/BlockExpansion.R#L 411       # 4: anti-diag rank...
R/BlockExpansion.R#L 412       ...
R/BlockExpansion.R#L 413       dr3 <- unname(split(x = IMat[[m2]]...
R/BlockExpansion.R#L 414                           f = dr1,...
R/BlockExpansion.R#L 415                           drop = TRUE))...
R/BlockExpansion.R#L 416       dr4 <- unname(split(x = IMat[[m2]]...
R/BlockExpansion.R#L 417                           f = dr2,...
R/BlockExpansion.R#L 418                           drop = TRUE))...
R/BlockExpansion.R#L 419       ...
R/BlockExpansion.R#L 420       for (m3 in seq_along(dr3)) {...
R/BlockExpansion.R#L 423           # build a dummy vector for the...
R/BlockExpansion.R#L 424           sp1 <- vector(mode = "integer"...
R/BlockExpansion.R#L 426           # extract the feature position...
R/BlockExpansion.R#L 427           sp2 <- dr3[[m3]][, 3L]...
R/BlockExpansion.R#L 428           # construct iterators...
R/BlockExpansion.R#L 429           it1 <- 1L...
R/BlockExpansion.R#L 430           it2 <- sp2[1L]...
R/BlockExpansion.R#L 431           # loop through dummy vector, a...
R/BlockExpansion.R#L 432           # updating it when a gap large...
R/BlockExpansion.R#L 433           for (m4 in seq_along(sp1)) {...
R/BlockExpansion.R#L 436               it1 <- it1 + 1L...
R/BlockExpansion.R#L 440           } # end loop through split map...
R/BlockExpansion.R#L 441           ...
R/BlockExpansion.R#L 442           if (it1 > 1L) {...
R/BlockExpansion.R#L 445                                       f ...
R/BlockExpansion.R#L 446           } else {...
R/BlockExpansion.R#L 448           }...
R/BlockExpansion.R#L 449           ...
R/BlockExpansion.R#L 451           dr3[[m3]] <- dr3[m3]...
R/BlockExpansion.R#L 453       }...
R/BlockExpansion.R#L 454       for (m3 in seq_along(dr4)) {...
R/BlockExpansion.R#L 457           # build a dummy vector for the...
R/BlockExpansion.R#L 458           sp1 <- vector(mode = "integer"...
R/BlockExpansion.R#L 460           # extract the feature position...
R/BlockExpansion.R#L 461           sp2 <- dr4[[m3]][, 3L]...
R/BlockExpansion.R#L 462           # construct iterators...
R/BlockExpansion.R#L 463           it1 <- 1L...
R/BlockExpansion.R#L 464           it2 <- sp2[1L]...
R/BlockExpansion.R#L 465           # loop through dummy vector, a...
R/BlockExpansion.R#L 466           # updating it when a gap large...
R/BlockExpansion.R#L 467           for (m4 in seq_along(sp1)) {...
R/BlockExpansion.R#L 470               it1 <- it1 + 1L...
R/BlockExpansion.R#L 474           } # end loop through split map...
R/BlockExpansion.R#L 475           ...
R/BlockExpansion.R#L 476           if (it1 > 1L) {...
R/BlockExpansion.R#L 479                                       f ...
R/BlockExpansion.R#L 480           } else {...
R/BlockExpansion.R#L 482           }...
R/BlockExpansion.R#L 483           ...
R/BlockExpansion.R#L 485           dr4[[m3]] <- dr4[m3]...
R/BlockExpansion.R#L 487       }...
R/BlockExpansion.R#L 488       ...
R/BlockExpansion.R#L 489       # return(list(IMat[[m2]],...
R/BlockExpansion.R#L 490       #             dr3,...
R/BlockExpansion.R#L 491       #             dr4))...
R/BlockExpansion.R#L 492       ...
R/BlockExpansion.R#L 493       dr3 <- unlist(dr3,...
R/BlockExpansion.R#L 495       # dr3 IDs singletons...
R/BlockExpansion.R#L 496       dr3a <- unlist(sapply(dr3,...
R/BlockExpansion.R#L 498                               if (nrow(x...
R/BlockExpansion.R#L 500                               } else {...
R/BlockExpansion.R#L 502                               }...
R/BlockExpansion.R#L 505       # dr3 IDs blocks...
R/BlockExpansion.R#L 506       dr3b <- unlist(sapply(dr3,...
R/BlockExpansion.R#L 508                               if (nrow(x...
R/BlockExpansion.R#L 510                               }...
R/BlockExpansion.R#L 513       dr4 <- unlist(dr4,...
R/BlockExpansion.R#L 515       # dr4 IDs singletons...
R/BlockExpansion.R#L 516       dr4a <- unlist(sapply(dr4,...
R/BlockExpansion.R#L 518                               if (nrow(x...
R/BlockExpansion.R#L 520                               } else {...
R/BlockExpansion.R#L 522                               }...
R/BlockExpansion.R#L 525       # dr4 IDs blocks...
R/BlockExpansion.R#L 526       dr4b <- unlist(sapply(dr4,...
R/BlockExpansion.R#L 528                               if (nrow(x...
R/BlockExpansion.R#L 530                               }...
R/BlockExpansion.R#L 533       ...
R/BlockExpansion.R#L 534       # drop dr3 singleton positions tha...
R/BlockExpansion.R#L 535       dr3c <- dr3a %in% dr4b...
R/BlockExpansion.R#L 536       # drop dr4 singleton positions tha...
R/BlockExpansion.R#L 537       dr4c <- dr4a %in% dr3b...
R/BlockExpansion.R#L 538       # drop singletons from one rank se...
R/BlockExpansion.R#L 539       # other set...
R/BlockExpansion.R#L 540       ...
R/BlockExpansion.R#L 541       dr3 <- dr3[!dr3c]...
R/BlockExpansion.R#L 542       dr4 <- dr4[!dr4c]...
R/BlockExpansion.R#L 543       ...
R/BlockExpansion.R#L 544       dr5 <- c(dr3, dr4)...
R/BlockExpansion.R#L 545       dr5 <- unique(dr5)...
R/BlockExpansion.R#L 546       if (DropSingletons) {...
R/BlockExpansion.R#L 552           # break out of m2 position wit...
R/BlockExpansion.R#L 553           next...
R/BlockExpansion.R#L 555       }...
R/BlockExpansion.R#L 556       ...
R/BlockExpansion.R#L 557       # loop through dr5...
R/BlockExpansion.R#L 558       # if the position is a singleton p...
R/BlockExpansion.R#L 559       # if the position is a blocked set...
R/BlockExpansion.R#L 560       ...
R/BlockExpansion.R#L 561       dr6 <- vector(mode = "list",...
R/BlockExpansion.R#L 563       for (m3 in seq_along(dr6)) {...
R/BlockExpansion.R#L 567           # singleton pair...
R/BlockExpansion.R#L 568           dr6[[m3]] <- data.frame("f1" =...
R/BlockExpansion.R#L 569                                   "f2" =...
R/BlockExpansion.R#L 570                                   "direc...
R/BlockExpansion.R#L 572           # a contiguous block of pairs...
R/BlockExpansion.R#L 573           if (length(unique(dr5[[m3]][, ...
R/BlockExpansion.R#L 578                        to = max(f1s) + 1...
R/BlockExpansion.R#L 579                        by = 1L)...
R/BlockExpansion.R#L 581                        to = max(f2s) + 1...
R/BlockExpansion.R#L 582                        by = 1L)...
R/BlockExpansion.R#L 587               # gaps in the block assign...
R/BlockExpansion.R#L 588               dr6[[m3]] <- data.frame("f...
R/BlockExpansion.R#L 589                                       "f...
R/BlockExpansion.R#L 590                                       "d...
R/BlockExpansion.R#L 591                                         ...
R/BlockExpansion.R#L 592                                         ...
R/BlockExpansion.R#L 593                                         ...
R/BlockExpansion.R#L 595               # no gaps in the block...
R/BlockExpansion.R#L 596               dr6[[m3]] <- data.frame("f...
R/BlockExpansion.R#L 597                                       "f...
R/BlockExpansion.R#L 598                                       "d...
R/BlockExpansion.R#L 599                                         ...
R/BlockExpansion.R#L 601           } else {...
R/BlockExpansion.R#L 606                        to = max(f1s) + 1...
R/BlockExpansion.R#L 607                        by = 1L)...
R/BlockExpansion.R#L 609                        to = min(f2s) - 1...
R/BlockExpansion.R#L 610                        by = -1L)...
R/BlockExpansion.R#L 615               # gaps in the block assign...
R/BlockExpansion.R#L 616               dr6[[m3]] <- data.frame("f...
R/BlockExpansion.R#L 617                                       "f...
R/BlockExpansion.R#L 618                                       "d...
R/BlockExpansion.R#L 619                                         ...
R/BlockExpansion.R#L 620                                         ...
R/BlockExpansion.R#L 621                                         ...
R/BlockExpansion.R#L 623               # no gaps in the block...
R/BlockExpansion.R#L 624               dr6[[m3]] <- data.frame("f...
R/BlockExpansion.R#L 625                                       "f...
R/BlockExpansion.R#L 626                                       "d...
R/BlockExpansion.R#L 627                                         ...
R/BlockExpansion.R#L 629           }...
R/BlockExpansion.R#L 631       } # end dr6 loop...
R/BlockExpansion.R#L 632       ...
R/BlockExpansion.R#L 633       dr6 <- do.call(rbind,...
R/BlockExpansion.R#L 634                      dr6)...
R/BlockExpansion.R#L 635       ...
R/BlockExpansion.R#L 636       dr6 <- dr6[dr6[, 1L] >= ci1lower &...
R/BlockExpansion.R#L 637                    dr6[, 1L] <= ci1upper...
R/BlockExpansion.R#L 638                    dr6[, 2L] >= ci2lower...
R/BlockExpansion.R#L 639                    dr6[, 2L] <= ci2upper...
R/BlockExpansion.R#L 640       ...
R/BlockExpansion.R#L 641       if (nrow(dr6) < 1L) {...
R/BlockExpansion.R#L 643       }...
R/BlockExpansion.R#L 644       ...
R/BlockExpansion.R#L 645       dr6 <- dr6[order(dr6[, 1L]), ]...
R/BlockExpansion.R#L 646       ...
R/BlockExpansion.R#L 647       # return(dr6)...
R/BlockExpansion.R#L 648       # for every line in dr6...
R/BlockExpansion.R#L 649       # n + ? alignments will be attempt...
R/BlockExpansion.R#L 650       # for every n alignments that pass...
R/BlockExpansion.R#L 651       # to add to pair summaries...
R/BlockExpansion.R#L 652       L <- nrow(dr6)...
R/BlockExpansion.R#L 653       VSize <- L * 2L...
R/BlockExpansion.R#L 654       ...
R/BlockExpansion.R#L 655       p1placeholder <- p2placeholder <- ...
R/BlockExpansion.R#L 656                                         ...
R/BlockExpansion.R#L 657       PIDVector <- SCOREVector <- rep(NA...
R/BlockExpansion.R#L 658                                       ti...
R/BlockExpansion.R#L 659       AType <- rep(NA_character_,...
R/BlockExpansion.R#L 660                    times = VSize)...
R/BlockExpansion.R#L 661       ...
R/BlockExpansion.R#L 662       # return(list(dr6,...
R/BlockExpansion.R#L 663       #             ci1lower,...
R/BlockExpansion.R#L 664       #             ci1upper,...
R/BlockExpansion.R#L 665       #             ci2lower,...
R/BlockExpansion.R#L 666       #             ci2upper,...
R/BlockExpansion.R#L 667       #             Features01Key,...
R/BlockExpansion.R#L 668       #             Features02Key,...
R/BlockExpansion.R#L 669       #             Features01Match,...
R/BlockExpansion.R#L 670       #             Features02Match,...
R/BlockExpansion.R#L 671       #             NTFeatures01,...
R/BlockExpansion.R#L 672       #             AAFeatures01,...
R/BlockExpansion.R#L 673       #             NTFeatures02,...
R/BlockExpansion.R#L 674       #             AAFeatures02))...
R/BlockExpansion.R#L 675       ...
R/BlockExpansion.R#L 676       Count <- 1L...
R/BlockExpansion.R#L 677       Continue <- TRUE...
R/BlockExpansion.R#L 678       if (Verbose) {...
R/BlockExpansion.R#L 680       }...
R/BlockExpansion.R#L 681       ...
R/BlockExpansion.R#L 682       for (m3 in seq(nrow(dr6))) {...
R/BlockExpansion.R#L 692           # first ask if f1 and f2 are w...
R/BlockExpansion.R#L 693           # if they are, do not attempt ...
R/BlockExpansion.R#L 694           # exit the while loop and move...
R/BlockExpansion.R#L 695           if (f1 > ci1upper |...
R/BlockExpansion.R#L 696               f1 < ci1lower |...
R/BlockExpansion.R#L 697               f2 > ci2upper |...
R/BlockExpansion.R#L 698               f2 < ci2lower) {...
R/BlockExpansion.R#L 701           }...
R/BlockExpansion.R#L 702           # third ask if these sequences...
R/BlockExpansion.R#L 703           # CURRENTLY NOT IMPLEMENTED...
R/BlockExpansion.R#L 704           # third ask if both f1 and f2 ...
R/BlockExpansion.R#L 705           if (Features01Key[f1 - ci1lowe...
R/BlockExpansion.R#L 706               Features02Key[f2 - ci2lowe...
R/BlockExpansion.R#L 710                                  subject...
R/BlockExpansion.R#L 712                                       ty...
R/BlockExpansion.R#L 713                                       in...
R/BlockExpansion.R#L 714                                       ve...
R/BlockExpansion.R#L 717               SCORE <- ScoreAlignment(my...
R/BlockExpansion.R#L 718                                       st...
R/BlockExpansion.R#L 719                                         ...
R/BlockExpansion.R#L 720                                         ...
R/BlockExpansion.R#L 721                                         ...
R/BlockExpansion.R#L 722                                       st...
R/BlockExpansion.R#L 732           } else {...
R/BlockExpansion.R#L 735                                  subject...
R/BlockExpansion.R#L 737                                       ty...
R/BlockExpansion.R#L 738                                       in...
R/BlockExpansion.R#L 739                                       ve...
R/BlockExpansion.R#L 742               SCORE <- ScoreAlignment(my...
R/BlockExpansion.R#L 743                                       su...
R/BlockExpansion.R#L 752           } # end if else statement for ...
R/BlockExpansion.R#L 753           # assign the dist ...
R/BlockExpansion.R#L 754           # update the count...
R/BlockExpansion.R#L 755           if (Criteria == "PID") {...
R/BlockExpansion.R#L 757           } else if (Criteria == "Score"...
R/BlockExpansion.R#L 758                      INCLUDESCORE) {...
R/BlockExpansion.R#L 760           }...
R/BlockExpansion.R#L 761           if (CHECK < Floor) {...
R/BlockExpansion.R#L 765           } else {...
R/BlockExpansion.R#L 774               SCOREVector[Count] <- SCOR...
R/BlockExpansion.R#L 780               # interior alignment, no f...
R/BlockExpansion.R#L 781               Continue <- FALSE...
R/BlockExpansion.R#L 783               # advancing down the diago...
R/BlockExpansion.R#L 784               f1 <- f1 - 1L...
R/BlockExpansion.R#L 785               f2 <- f2 - 1L...
R/BlockExpansion.R#L 787               # advancing up the anti-di...
R/BlockExpansion.R#L 788               f1 <- f1 - 1L...
R/BlockExpansion.R#L 789               f2 <- f2 + 1L...
R/BlockExpansion.R#L 791               # advancing up the diagona...
R/BlockExpansion.R#L 792               f1 <- f1 + 1L...
R/BlockExpansion.R#L 793               f2 <- f2 + 1L...
R/BlockExpansion.R#L 795               # advancing down the anti-...
R/BlockExpansion.R#L 796               f1 <- f1 + 1L...
R/BlockExpansion.R#L 797               f2 <- f2 - 1L...
R/BlockExpansion.R#L 813               # if Count exceeds VSize, ...
R/BlockExpansion.R#L 814               VSize <- VSize * 2L...
R/BlockExpansion.R#L 815               p1placeholder <- c(p1place...
R/BlockExpansion.R#L 816                                  rep(NA_...
R/BlockExpansion.R#L 817                                      tim...
R/BlockExpansion.R#L 818               p2placeholder <- c(p2place...
R/BlockExpansion.R#L 819                                  rep(NA_...
R/BlockExpansion.R#L 820                                      tim...
R/BlockExpansion.R#L 821               p1FeatureLength <- c(p1Fea...
R/BlockExpansion.R#L 822                                    rep(N...
R/BlockExpansion.R#L 823                                        t...
R/BlockExpansion.R#L 824               p2FeatureLength <- c(p2Fea...
R/BlockExpansion.R#L 825                                    rep(N...
R/BlockExpansion.R#L 826                                        t...
R/BlockExpansion.R#L 827               PIDVector <- c(PIDVector,...
R/BlockExpansion.R#L 828                              rep(NA_real...
R/BlockExpansion.R#L 829                                  times =...
R/BlockExpansion.R#L 830               SCOREVector <- c(SCOREVect...
R/BlockExpansion.R#L 831                                rep(NA_re...
R/BlockExpansion.R#L 832                                    times...
R/BlockExpansion.R#L 833               AType <- c(AType,...
R/BlockExpansion.R#L 834                          rep(NA_characte...
R/BlockExpansion.R#L 835                              times = VSi...
R/BlockExpansion.R#L 838           } # end PID check...
R/BlockExpansion.R#L 843           setTxtProgressBar(pb = pBar,...
R/BlockExpansion.R#L 846       } # end of m3 loop through dr6...
R/BlockExpansion.R#L 847       ...
R/BlockExpansion.R#L 848       if (Verbose) {...
R/BlockExpansion.R#L 851       }...
R/BlockExpansion.R#L 852       ...
R/BlockExpansion.R#L 853       if (any(!is.na(PIDVector))) {...
R/BlockExpansion.R#L 879           Res[[m1]][[m2]] <- data.frame(...
R/BlockExpansion.R#L 880                                         ...
R/BlockExpansion.R#L 881                                         ...
R/BlockExpansion.R#L 882                                         ...
R/BlockExpansion.R#L 883                                         ...
R/BlockExpansion.R#L 884                                         ...
R/BlockExpansion.R#L 886                                         ...
R/BlockExpansion.R#L 887                                         ...
R/BlockExpansion.R#L 888                                         ...
R/BlockExpansion.R#L 889                                         ...
R/BlockExpansion.R#L 890                                         ...
R/BlockExpansion.R#L 892                                         ...
R/BlockExpansion.R#L 894                                         ...
R/BlockExpansion.R#L 898                                         ...
R/BlockExpansion.R#L 902                                         ...
R/BlockExpansion.R#L 909                                         ...
R/BlockExpansion.R#L 912           Res[[m1]][[m2]] <- data.frame(...
R/BlockExpansion.R#L 913                                         ...
R/BlockExpansion.R#L 914                                         ...
R/BlockExpansion.R#L 915                                         ...
R/BlockExpansion.R#L 916                                         ...
R/BlockExpansion.R#L 917                                         ...
R/BlockExpansion.R#L 919                                         ...
R/BlockExpansion.R#L 920                                         ...
R/BlockExpansion.R#L 921                                         ...
R/BlockExpansion.R#L 922                                         ...
R/BlockExpansion.R#L 923                                         ...
R/BlockExpansion.R#L 925                                         ...
R/BlockExpansion.R#L 927                                         ...
R/BlockExpansion.R#L 931                                         ...
R/BlockExpansion.R#L 935                                         ...
R/BlockExpansion.R#L 941                                         ...
R/BlockExpansion.R#L 945       } else {...
R/BlockExpansion.R#L 947       }...
R/BlockExpansion.R#L 948       ...
R/BlockExpansion.R#L 952   }...
R/BlockExpansion.R#L 953   ...
R/BlockExpansion.R#L 954   Res <- unlist(Res,...
R/BlockExpansion.R#L 956   Res <- do.call(rbind,...
R/BlockExpansion.R#L 957                  Res)...
R/BlockExpansion.R#L 958   ...
R/BlockExpansion.R#L 959   if (!is.null(Res)) {...
R/BlockExpansion.R#L 963       IDS <- paste(Res$p1,...
R/BlockExpansion.R#L 964                    Res$p2,...
R/BlockExpansion.R#L 965                    sep = "_")...
R/BlockExpansion.R#L 966       check1 <- !duplicated(IDS)...
R/BlockExpansion.R#L 967       Res <- Res[check1, , drop = FALSE]...
R/BlockExpansion.R#L 968       if (nrow(Res) > 0L) {...
R/BlockExpansion.R#L 970                      Res$p2,...
R/BlockExpansion.R#L 971                      sep = "_")...
R/BlockExpansion.R#L 974       }...
R/BlockExpansion.R#L 975       ...
R/BlockExpansion.R#L 977   } else {...
R/BlockExpansion.R#L 980       Res <- data.frame("p1" = character...
R/BlockExpansion.R#L 996       Res <- data.frame("p1" = character...
R/BlockExpansion.R#L1012   }...
R/BlockExpansion.R#L1013   ...
R/BlockExpansion.R#L1014   if (NewPairsOnly) {...
R/BlockExpansion.R#L1016       TimeEnd <- Sys.time()...
R/BlockExpansion.R#L1017       print(TimeEnd - TimeStart)...
R/BlockExpansion.R#L1020   } else {...
R/BlockExpansion.R#L1022       FeaturesMat2 <- do.call(rbind,...
R/BlockExpansion.R#L1023                               strsplit(x...
R/BlockExpansion.R#L1024                                         ...
R/BlockExpansion.R#L1025                                         ...
R/BlockExpansion.R#L1026                                        s...
R/BlockExpansion.R#L1027                                        f...
R/BlockExpansion.R#L1028       FeaturesMat2 <- data.frame("g1" = ...
R/BlockExpansion.R#L1029                                  "i1" = ...
R/BlockExpansion.R#L1030                                  "f1" = ...
R/BlockExpansion.R#L1031                                  "g2" = ...
R/BlockExpansion.R#L1032                                  "i2" = ...
R/BlockExpansion.R#L1033                                  "f2" = ...
R/BlockExpansion.R#L1034       FeaturesMat3 <- rbind(FeaturesMat,...
R/BlockExpansion.R#L1036       ...
R/BlockExpansion.R#L1037       o1 <- order(FeaturesMat3[, 4L],...
R/BlockExpansion.R#L1038                   FeaturesMat3[, 1L],...
R/BlockExpansion.R#L1039                   FeaturesMat3[, 3L])...
R/BlockExpansion.R#L1040       ...
R/BlockExpansion.R#L1041       Res2 <- rbind(Pairs,...
R/BlockExpansion.R#L1043       Res2 <- Res2[o1, ]...
R/BlockExpansion.R#L1044       rownames(Res2) <- NULL...
R/BlockExpansion.R#L1045       if (Verbose) {...
R/BlockExpansion.R#L1048       }...
R/BlockExpansion.R#L1049       return(Res2)...
R/BlockExpansion.R#L1051       if (Verbose) {...
R/BlockExpansion.R#L1054       }...
R/BlockExpansion.R#L1055       return(Pairs)...
R/BlockExpansion.R#L1057   }...
R/BlockExpansion.R#L1058   ...
R/BlockReconciliation.R#L  11   if (Verbose) {...
R/BlockReconciliation.R#L  14   }...
R/BlockReconciliation.R#L  15   ...
R/BlockReconciliation.R#L  16   if (!is(object = Pairs,...
R/BlockReconciliation.R#L  17           class2 = "PairSummaries")) {...
R/BlockReconciliation.R#L  19   }...
R/BlockReconciliation.R#L  20   if (!is.null(PIDThreshold)) {...
R/BlockReconciliation.R#L  22       stop ("PIDThreshold must be a nume...
R/BlockReconciliation.R#L  24   }...
R/BlockReconciliation.R#L  25   if (!is.null(SCOREThreshold)) { ...
R/BlockReconciliation.R#L  27       stop ("SCOREThreshold must be a nu...
R/BlockReconciliation.R#L  29   }...
R/BlockReconciliation.R#L  30   if (!is.null(PIDThreshold)) {...
R/BlockReconciliation.R#L  32       stop ("PIDThreshold cannot be NA."...
R/BlockReconciliation.R#L  34   }...
R/BlockReconciliation.R#L  35   if (!is.null(SCOREThreshold)) {...
R/BlockReconciliation.R#L  37       stop ("SCOREThreshold cannot be NA...
R/BlockReconciliation.R#L  39   }...
R/BlockReconciliation.R#L  40   if (length(Precedent) != 1L) {...
R/BlockReconciliation.R#L  42   }...
R/BlockReconciliation.R#L  43   if (!is.character(Precedent)) {...
R/BlockReconciliation.R#L  45   }...
R/BlockReconciliation.R#L  46   if (!(Precedent %in% c("Size",...
R/BlockReconciliation.R#L  47                          "Metric"))) {...
R/BlockReconciliation.R#L  49   }...
R/BlockReconciliation.R#L  50   # for each genome to genome comparison...
R/BlockReconciliation.R#L  51   # build a matrix in the form:...
R/BlockReconciliation.R#L  52   # rowval | colval | diagval | antidiag...
R/BlockReconciliation.R#L  53   ...
R/BlockReconciliation.R#L  54   POIDs <- paste(Pairs$p1,...
R/BlockReconciliation.R#L  55                  Pairs$p2,...
R/BlockReconciliation.R#L  56                  sep = "_")...
R/BlockReconciliation.R#L  57   FeaturesMat <- do.call(rbind,...
R/BlockReconciliation.R#L  58                          strsplit(x = PO...
R/BlockReconciliation.R#L  59                                   split ...
R/BlockReconciliation.R#L  60                                   fixed ...
R/BlockReconciliation.R#L  61   if (is.null(PIDThreshold) &...
R/BlockReconciliation.R#L  62       is.null(SCOREThreshold)) {...
R/BlockReconciliation.R#L  64                               "i1" = as....
R/BlockReconciliation.R#L  65                               "f1" = as....
R/BlockReconciliation.R#L  66                               "g2" = as....
R/BlockReconciliation.R#L  67                               "i2" = as....
R/BlockReconciliation.R#L  68                               "f2" = as....
R/BlockReconciliation.R#L  69                               "keyval" =...
R/BlockReconciliation.R#L  70   } else if (is.null(PIDThreshold) &...
R/BlockReconciliation.R#L  71              !is.null(SCOREThreshold) &...
R/BlockReconciliation.R#L  72              "SCORE" %in% colnames(Pairs...
R/BlockReconciliation.R#L  74                               "i1" = as....
R/BlockReconciliation.R#L  75                               "f1" = as....
R/BlockReconciliation.R#L  76                               "g2" = as....
R/BlockReconciliation.R#L  77                               "i2" = as....
R/BlockReconciliation.R#L  78                               "f2" = as....
R/BlockReconciliation.R#L  79                               "keyval" =...
R/BlockReconciliation.R#L  80                               "SCORE" = ...
R/BlockReconciliation.R#L  81   } else if (!is.null(PIDThreshold) &...
R/BlockReconciliation.R#L  82              is.null(SCOREThreshold) &...
R/BlockReconciliation.R#L  83              "PID" %in% colnames(Pairs))...
R/BlockReconciliation.R#L  85                               "i1" = as....
R/BlockReconciliation.R#L  86                               "f1" = as....
R/BlockReconciliation.R#L  87                               "g2" = as....
R/BlockReconciliation.R#L  88                               "i2" = as....
R/BlockReconciliation.R#L  89                               "f2" = as....
R/BlockReconciliation.R#L  90                               "keyval" =...
R/BlockReconciliation.R#L  91                               "PID" = Pa...
R/BlockReconciliation.R#L  92   } else if (!is.null(PIDThreshold) &...
R/BlockReconciliation.R#L  93              !is.null(SCOREThreshold) &...
R/BlockReconciliation.R#L  94              "PID" %in% colnames(Pairs) ...
R/BlockReconciliation.R#L  95              "SCORE" %in% colnames(Pairs...
R/BlockReconciliation.R#L  97                               "i1" = as....
R/BlockReconciliation.R#L  98                               "f1" = as....
R/BlockReconciliation.R#L  99                               "g2" = as....
R/BlockReconciliation.R#L 100                               "i2" = as....
R/BlockReconciliation.R#L 101                               "f2" = as....
R/BlockReconciliation.R#L 102                               "keyval" =...
R/BlockReconciliation.R#L 103                               "PID" = Pa...
R/BlockReconciliation.R#L 104                               "SCORE" = ...
R/BlockReconciliation.R#L 105   } else {...
R/BlockReconciliation.R#L 107                               "i1" = as....
R/BlockReconciliation.R#L 108                               "f1" = as....
R/BlockReconciliation.R#L 109                               "g2" = as....
R/BlockReconciliation.R#L 110                               "i2" = as....
R/BlockReconciliation.R#L 111                               "f2" = as....
R/BlockReconciliation.R#L 112                               "keyval" =...
R/BlockReconciliation.R#L 113   }...
R/BlockReconciliation.R#L 114   ...
R/BlockReconciliation.R#L 115   ...
R/BlockReconciliation.R#L 116   GMat <- unique(FeaturesMat[, c(1, 4)])...
R/BlockReconciliation.R#L 117   rownames(GMat) <- NULL...
R/BlockReconciliation.R#L 118   ...
R/BlockReconciliation.R#L 119   Res <- vector(mode = "list",...
R/BlockReconciliation.R#L 121   ...
R/BlockReconciliation.R#L 122   for (m1 in seq(nrow(GMat))) {...
R/BlockReconciliation.R#L 134                   f = list(CMat$i1,...
R/BlockReconciliation.R#L 135                            CMat$i2),...
R/BlockReconciliation.R#L 136                   drop = TRUE)...
R/BlockReconciliation.R#L 140       ...
R/BlockReconciliation.R#L 141       # build in the diagonal ranks...
R/BlockReconciliation.R#L 142       # munge the data such that the mat...
R/BlockReconciliation.R#L 143       # block to smallest block,...
R/BlockReconciliation.R#L 144       # i.e. largest continuous diag ran...
R/BlockReconciliation.R#L 145       dr1 <- IMat[[m2]][, 3L] - IMat[[m2...
R/BlockReconciliation.R#L 146       dr2 <- IMat[[m2]][, 3L] + IMat[[m2...
R/BlockReconciliation.R#L 147       IMat[[m2]] <- cbind(IMat[[m2]],...
R/BlockReconciliation.R#L 148                           "ID" = seq(nro...
R/BlockReconciliation.R#L 149                           "rank1" = dr1,...
R/BlockReconciliation.R#L 150                           "rank2" = dr2)...
R/BlockReconciliation.R#L 151       # go through both rankings and bre...
R/BlockReconciliation.R#L 152       dr3 <- unname(split(x = IMat[[m2]]...
R/BlockReconciliation.R#L 153                           f = dr1,...
R/BlockReconciliation.R#L 154                           drop = TRUE))...
R/BlockReconciliation.R#L 155       dr4 <- unname(split(x = IMat[[m2]]...
R/BlockReconciliation.R#L 156                           f = dr2,...
R/BlockReconciliation.R#L 157                           drop = TRUE))...
R/BlockReconciliation.R#L 158       for (m3 in seq_along(dr3)) {...
R/BlockReconciliation.R#L 161           # build a dummy vector for the...
R/BlockReconciliation.R#L 162           sp1 <- vector(mode = "integer"...
R/BlockReconciliation.R#L 164           # extract the feature position...
R/BlockReconciliation.R#L 165           sp2 <- dr3[[m3]][, "f1"]...
R/BlockReconciliation.R#L 166           # construct iterators...
R/BlockReconciliation.R#L 167           it1 <- 1L...
R/BlockReconciliation.R#L 168           it2 <- sp2[1L]...
R/BlockReconciliation.R#L 169           # loop through dummy vector, a...
R/BlockReconciliation.R#L 170           # updating it when a gap large...
R/BlockReconciliation.R#L 171           for (m4 in seq_along(sp1)) {...
R/BlockReconciliation.R#L 174               it1 <- it1 + 1L...
R/BlockReconciliation.R#L 178           } # end loop through split map...
R/BlockReconciliation.R#L 179           ...
R/BlockReconciliation.R#L 180           if (it1 > 1L) {...
R/BlockReconciliation.R#L 183                                       f ...
R/BlockReconciliation.R#L 184           } else {...
R/BlockReconciliation.R#L 186           }...
R/BlockReconciliation.R#L 187           ...
R/BlockReconciliation.R#L 189           dr3[[m3]] <- dr3[m3]...
R/BlockReconciliation.R#L 191       }...
R/BlockReconciliation.R#L 192       ...
R/BlockReconciliation.R#L 193       for (m3 in seq_along(dr4)) {...
R/BlockReconciliation.R#L 196           # build a dummy vector for the...
R/BlockReconciliation.R#L 197           sp1 <- vector(mode = "integer"...
R/BlockReconciliation.R#L 199           # extract the feature position...
R/BlockReconciliation.R#L 200           sp2 <- dr4[[m3]][, "f1"]...
R/BlockReconciliation.R#L 201           # construct iterators...
R/BlockReconciliation.R#L 202           it1 <- 1L...
R/BlockReconciliation.R#L 203           it2 <- sp2[1L]...
R/BlockReconciliation.R#L 204           # loop through dummy vector, a...
R/BlockReconciliation.R#L 205           # updating it when a gap large...
R/BlockReconciliation.R#L 206           for (m4 in seq_along(sp1)) {...
R/BlockReconciliation.R#L 209               it1 <- it1 + 1L...
R/BlockReconciliation.R#L 213           } # end loop through split map...
R/BlockReconciliation.R#L 214           ...
R/BlockReconciliation.R#L 215           if (it1 > 1L) {...
R/BlockReconciliation.R#L 218                                       f ...
R/BlockReconciliation.R#L 219           } else {...
R/BlockReconciliation.R#L 221           }...
R/BlockReconciliation.R#L 222           ...
R/BlockReconciliation.R#L 224           dr4[[m3]] <- dr4[m3]...
R/BlockReconciliation.R#L 226       }...
R/BlockReconciliation.R#L 227       ...
R/BlockReconciliation.R#L 228       # lists now split into blocks...
R/BlockReconciliation.R#L 229       dr3 <- unlist(dr3,...
R/BlockReconciliation.R#L 231       dr4 <- unlist(dr4,...
R/BlockReconciliation.R#L 233       dr5 <- c(dr3,...
R/BlockReconciliation.R#L 234                dr4)...
R/BlockReconciliation.R#L 235       ...
R/BlockReconciliation.R#L 236       o1 <- sapply(dr5,...
R/BlockReconciliation.R#L 237                    function(x) nrow(x),...
R/BlockReconciliation.R#L 238                    simplify = TRUE)...
R/BlockReconciliation.R#L 239       o2 <- order(o1,...
R/BlockReconciliation.R#L 240                   decreasing = TRUE)...
R/BlockReconciliation.R#L 241       dr5 <- dr5[o2]...
R/BlockReconciliation.R#L 242       # o1 <- sapply(dr3,...
R/BlockReconciliation.R#L 243       #              function(x) nrow(x)...
R/BlockReconciliation.R#L 244       #              simplify = TRUE)...
R/BlockReconciliation.R#L 245       # o2 <- sapply(dr4,...
R/BlockReconciliation.R#L 246       #              function(x) nrow(x)...
R/BlockReconciliation.R#L 247       #              simplify = TRUE)...
R/BlockReconciliation.R#L 248       # o3 <- order(c(o1, o2),...
R/BlockReconciliation.R#L 249       #             decreasing = TRUE)...
R/BlockReconciliation.R#L 250       # dr5 <- c(dr3,...
R/BlockReconciliation.R#L 251       #          dr4)...
R/BlockReconciliation.R#L 252       # ...
R/BlockReconciliation.R#L 253       # # list of matrices that represen...
R/BlockReconciliation.R#L 254       # # sorted by size...
R/BlockReconciliation.R#L 255       # dr5 <- dr5[o3]...
R/BlockReconciliation.R#L 256       # setID <- rep(seq(length(o3)),...
R/BlockReconciliation.R#L 257       #              sapply(dr5,...
R/BlockReconciliation.R#L 258       #                     function(x) ...
R/BlockReconciliation.R#L 259       # setID <- rep(seq(length(o1)),...
R/BlockReconciliation.R#L 260       #              sapply(dr5,...
R/BlockReconciliation.R#L 261       #                     function(x) ...
R/BlockReconciliation.R#L 262       setID <- rep(seq(length(o1)),...
R/BlockReconciliation.R#L 263                    o1[o2])...
R/BlockReconciliation.R#L 264       dr5 <- do.call(rbind,...
R/BlockReconciliation.R#L 265                      dr5)...
R/BlockReconciliation.R#L 266       rownames(dr5) <- NULL...
R/BlockReconciliation.R#L 267       dr5 <- cbind(dr5,...
R/BlockReconciliation.R#L 268                    "SETID" = setID)...
R/BlockReconciliation.R#L 269       # hypothetically dr5 is now set up...
R/BlockReconciliation.R#L 270       # drop duplicated appearances of t...
R/BlockReconciliation.R#L 271       # i.e. lines can only be evaluated...
R/BlockReconciliation.R#L 272       dr5 <- dr5[!duplicated(dr5[, "ID"]...
R/BlockReconciliation.R#L 273       ...
R/BlockReconciliation.R#L 274       # loop through the setIDs that rem...
R/BlockReconciliation.R#L 275       # a block with higher precedence...
R/BlockReconciliation.R#L 276       ...
R/BlockReconciliation.R#L 277       dr6 <- unname(split(x = dr5,...
R/BlockReconciliation.R#L 278                           f = dr5[, "SET...
R/BlockReconciliation.R#L 279                           drop = FALSE))...
R/BlockReconciliation.R#L 280       # reset setID with probable new bl...
R/BlockReconciliation.R#L 281       # from the mean PID / SCORE of the...
R/BlockReconciliation.R#L 282       if ("PID" %in% colnames(dr5)) {...
R/BlockReconciliation.R#L 284                      function(x) nrow(x)...
R/BlockReconciliation.R#L 285                      simplify = TRUE)...
R/BlockReconciliation.R#L 287                      FUN = function(x) {...
R/BlockReconciliation.R#L 288                        mean(x$PID)...
R/BlockReconciliation.R#L 289                      },...
R/BlockReconciliation.R#L 290                      simplify = TRUE)...
R/BlockReconciliation.R#L 292           o3 <- order(o1,...
R/BlockReconciliation.R#L 293                       o2,...
R/BlockReconciliation.R#L 294                       decreasing = TRUE)...
R/BlockReconciliation.R#L 296           o3 <- order(o2,...
R/BlockReconciliation.R#L 297                       o1,...
R/BlockReconciliation.R#L 298                       decreasing = TRUE)...
R/BlockReconciliation.R#L 302                      o1[o3])...
R/BlockReconciliation.R#L 303       } else if ("SCORE" %in% colnames(d...
R/BlockReconciliation.R#L 305                      function(x) nrow(x)...
R/BlockReconciliation.R#L 306                      simplify = TRUE)...
R/BlockReconciliation.R#L 308                      FUN = function(x) {...
R/BlockReconciliation.R#L 309                        mean(x$SCORE)...
R/BlockReconciliation.R#L 310                      },...
R/BlockReconciliation.R#L 311                      simplify = TRUE)...
R/BlockReconciliation.R#L 313           o3 <- order(o1,...
R/BlockReconciliation.R#L 314                       o2,...
R/BlockReconciliation.R#L 315                       decreasing = TRUE)...
R/BlockReconciliation.R#L 317           o3 <- order(o2,...
R/BlockReconciliation.R#L 318                       o1,...
R/BlockReconciliation.R#L 319                       decreasing = TRUE)...
R/BlockReconciliation.R#L 323                      o1[o3])...
R/BlockReconciliation.R#L 324       } else {...
R/BlockReconciliation.R#L 326                      function(x) nrow(x)...
R/BlockReconciliation.R#L 327                      simplify = TRUE)...
R/BlockReconciliation.R#L 332                      o1[o2])...
R/BlockReconciliation.R#L 333       }...
R/BlockReconciliation.R#L 334       ...
R/BlockReconciliation.R#L 335       # if (Precedent == "Metric") {...
R/BlockReconciliation.R#L 336       #   dr6 <- dr6[sapply(X = dr6,...
R/BlockReconciliation.R#L 337       #                     FUN = functi...
R/BlockReconciliation.R#L 338       #                       nrow(x) > ...
R/BlockReconciliation.R#L 339       #                     },...
R/BlockReconciliation.R#L 340       #                     simplify = T...
R/BlockReconciliation.R#L 341       # }...
R/BlockReconciliation.R#L 342       ...
R/BlockReconciliation.R#L 343       dr6 <- do.call(rbind,...
R/BlockReconciliation.R#L 344                      dr6)...
R/BlockReconciliation.R#L 345       dr6[, "SETID"] <- setID...
R/BlockReconciliation.R#L 346       # return(dr6)...
R/BlockReconciliation.R#L 347       # loop through the unique set ids ...
R/BlockReconciliation.R#L 348       SETS <- dr6[, "SETID"]...
R/BlockReconciliation.R#L 349       PRSETS <- unique(SETS)...
R/BlockReconciliation.R#L 350       KEEP <- rep(TRUE,...
R/BlockReconciliation.R#L 351                   nrow(dr6))...
R/BlockReconciliation.R#L 352       F1Vec <- dr6[, "f1"]...
R/BlockReconciliation.R#L 353       F2Vec <- dr6[, "f2"]...
R/BlockReconciliation.R#L 354       if ("SCORE" %in% colnames(dr6)) {...
R/BlockReconciliation.R#L 356       }...
R/BlockReconciliation.R#L 357       if ("PID" %in% colnames(dr6)) {...
R/BlockReconciliation.R#L 359       }...
R/BlockReconciliation.R#L 360       # return(dr6)...
R/BlockReconciliation.R#L 361       if (length(PRSETS) > 1L) {...
R/BlockReconciliation.R#L 365           # which line - call the curren...
R/BlockReconciliation.R#L 366           ph1 <- which(SETS == PRSETS[m3...
R/BlockReconciliation.R#L 367           if (length(ph1) == 1L) {...
R/BlockReconciliation.R#L 370               break...
R/BlockReconciliation.R#L 372               next...
R/BlockReconciliation.R#L 374           }...
R/BlockReconciliation.R#L 375           # evaluate from the lowest row...
R/BlockReconciliation.R#L 376           EVALSTART <- max(ph1) + 1L...
R/BlockReconciliation.R#L 377           EVALEND <- nrow(dr6)...
R/BlockReconciliation.R#L 378           # find bounds of current range...
R/BlockReconciliation.R#L 379           Range1 <- range(F1Vec[ph1])...
R/BlockReconciliation.R#L 380           Range2 <- range(F2Vec[ph1])...
R/BlockReconciliation.R#L 381           if (ConservativeRejection) {...
R/BlockReconciliation.R#L 385               # both PID and SCORE thres...
R/BlockReconciliation.R#L 386               # w1 is the rejection set,...
R/BlockReconciliation.R#L 387               w1 <- which(F1Vec[EVALSTAR...
R/BlockReconciliation.R#L 392                                F4Vec[EVA...
R/BlockReconciliation.R#L 394                        !("PID" %in% coln...
R/BlockReconciliation.R#L 395               # SCORE thresholds only...
R/BlockReconciliation.R#L 396               # w1 is the rejection set,...
R/BlockReconciliation.R#L 397               w1 <- which(F1Vec[EVALSTAR...
R/BlockReconciliation.R#L 403                        "PID" %in% colnam...
R/BlockReconciliation.R#L 404               # PID thresholds only...
R/BlockReconciliation.R#L 405               # w1 is the rejection set,...
R/BlockReconciliation.R#L 406               w1 <- which(F1Vec[EVALSTAR...
R/BlockReconciliation.R#L 412               # no thresholds...
R/BlockReconciliation.R#L 413               w1 <- which(F1Vec[EVALSTAR...
R/BlockReconciliation.R#L 419           } else {...
R/BlockReconciliation.R#L 422               # both PID and SCORE thres...
R/BlockReconciliation.R#L 423               # w1 is the rejection set,...
R/BlockReconciliation.R#L 424               w1 <- which((F3Vec[EVALSTA...
R/BlockReconciliation.R#L 425                              F4Vec[EVALS...
R/BlockReconciliation.R#L 428                                (F2Vec[EV...
R/BlockReconciliation.R#L 429                                   F2Vec[...
R/BlockReconciliation.R#L 430               # if (any(dr6[(EVALSTART:E...
R/BlockReconciliation.R#L 431               #   return(list(dr6,...
R/BlockReconciliation.R#L 432               #               w1,...
R/BlockReconciliation.R#L 433               #               Range1,...
R/BlockReconciliation.R#L 434               #               Range2,...
R/BlockReconciliation.R#L 435               #               F1Vec,...
R/BlockReconciliation.R#L 436               #               F2Vec,...
R/BlockReconciliation.R#L 437               #               F3Vec,...
R/BlockReconciliation.R#L 438               #               F4Vec,...
R/BlockReconciliation.R#L 439               #               EVALSTART,...
R/BlockReconciliation.R#L 440               #               EVALEND))...
R/BlockReconciliation.R#L 441               # }...
R/BlockReconciliation.R#L 442               ...
R/BlockReconciliation.R#L 444                        !("PID" %in% coln...
R/BlockReconciliation.R#L 445               # SCORE thresholds only...
R/BlockReconciliation.R#L 446               # w1 is the rejection set,...
R/BlockReconciliation.R#L 447               w1 <- which(F3Vec[EVALSTAR...
R/BlockReconciliation.R#L 450                                (F2Vec[EV...
R/BlockReconciliation.R#L 451                                   F2Vec[...
R/BlockReconciliation.R#L 453                        "PID" %in% colnam...
R/BlockReconciliation.R#L 454               # PID thresholds only...
R/BlockReconciliation.R#L 455               # w1 is the rejection set,...
R/BlockReconciliation.R#L 456               w1 <- which(F4Vec[EVALSTAR...
R/BlockReconciliation.R#L 459                                (F2Vec[EV...
R/BlockReconciliation.R#L 460                                   F2Vec[...
R/BlockReconciliation.R#L 462               # no thresholds...
R/BlockReconciliation.R#L 463               w1 <- which((F1Vec[EVALSTA...
R/BlockReconciliation.R#L 464                              F1Vec[EVALS...
R/BlockReconciliation.R#L 466                                F2Vec[EVA...
R/BlockReconciliation.R#L 468           }...
R/BlockReconciliation.R#L 469           ...
R/BlockReconciliation.R#L 470           if (length(w1) > 0L) {...
R/BlockReconciliation.R#L 472           }...
R/BlockReconciliation.R#L 474       } else {...
R/BlockReconciliation.R#L 476       }...
R/BlockReconciliation.R#L 477       # return(list(dr6,...
R/BlockReconciliation.R#L 478       #             KEEP))...
R/BlockReconciliation.R#L 479       dr7 <- dr6[KEEP, ]...
R/BlockReconciliation.R#L 480       Res[[m1]][[m2]] <- dr7[, "keyval"]...
R/BlockReconciliation.R#L 481       # return(list(IMat[[m2]],...
R/BlockReconciliation.R#L 482       #             dr3,...
R/BlockReconciliation.R#L 483       #             dr4,...
R/BlockReconciliation.R#L 484       #             dr5,...
R/BlockReconciliation.R#L 485       #             dr6,...
R/BlockReconciliation.R#L 486       #             dr7))...
R/BlockReconciliation.R#L 487       ...
R/BlockReconciliation.R#L 491       setTxtProgressBar(pb = pBar,...
R/BlockReconciliation.R#L 495   } # end loop through genome-genome com...
R/BlockReconciliation.R#L 496   ...
R/BlockReconciliation.R#L 497   if (Verbose) {...
R/BlockReconciliation.R#L 502   }...
R/BlockReconciliation.R#L 503   Res <- unlist(Res,...
R/BlockReconciliation.R#L 505   Res <- Pairs[sort(Res), ]...
R/BlockReconciliation.R#L 506   attr(x = Res,...
R/BlockReconciliation.R#L 507        which = "GeneCalls") <- attr(x = ...
R/BlockReconciliation.R#L 509   class(Res) <- c("data.frame", "PairSum...
R/BlockReconciliation.R#L 510   rownames(Res) <- NULL...
R/BlockReconciliation.R#L 511   return(Res)...
R/DisjointSet.R#L   7   ...
R/DisjointSet.R#L   8   # grab p1 and p2 columns and perform a...
R/DisjointSet.R#L   9   # FindSets() function...
R/DisjointSet.R#L  10   # expect to take in other parameters i...
R/DisjointSet.R#L  11   # of MCL...
R/DisjointSet.R#L  12   ...
R/DisjointSet.R#L  13   if (Verbose) {...
R/DisjointSet.R#L  16   }...
R/DisjointSet.R#L  17   ...
R/DisjointSet.R#L  18   if (is(object = Pairs,...
R/DisjointSet.R#L  19          class2 = "PairSummaries")) {...
R/DisjointSet.R#L  22       stop ("No rows present?")...
R/DisjointSet.R#L  31                        P2Ids))...
R/DisjointSet.R#L  33                  levels = AllIds)...
R/DisjointSet.R#L  35                  levels = AllIds)...
R/DisjointSet.R#L  50                        p2 = FI2,...
R/DisjointSet.R#L  51                        Verbose = TRUE)...
R/DisjointSet.R#L  62       cat("\nAssigning single linkage cl...
R/DisjointSet.R#L  71                            table = Nodes...
R/DisjointSet.R#L  74                      f = Reps)...
R/DisjointSet.R#L  77       cat("Assignments complete.\n")...
R/DisjointSet.R#L  80       cat("\n")...
R/DisjointSet.R#L  81       TimeEnd <- Sys.time()...
R/DisjointSet.R#L  82       print(TimeEnd - TimeStart)...
R/DisjointSet.R#L  87   } else {...
R/DisjointSet.R#L  89   }...
R/DisjointSet.R#L  90   ...
R/DisjointSet.R#L  91   # return a list of character identifie...
R/DisjointSet.R#L  92   ...
R/DisjointSet.R#L  93   return(UClusts)...
R/DisjointSet.R#L  94   ...
R/EstimRearrScen.R#L  12                                         ...
R/EstimRearrScen.R#L  13                                         ...
R/EstimRearrScen.R#L  14                                         ...
R/EstimRearrScen.R#L  15                                         ...
R/EstimRearrScen.R#L  16   if (!is(object = SyntenyObject,...
R/EstimRearrScen.R#L  17           class2 = "Synteny")) {...
R/EstimRearrScen.R#L  19   }...
R/EstimRearrScen.R#L  20   starttime <- Sys.time()...
R/EstimRearrScen.R#L  21   ...
R/EstimRearrScen.R#L  22   rearrange_chromosome <- function(synbl...
R/EstimRearrScen.R#L  23                                    Verbo...
R/EstimRearrScen.R#L  24                                    MinBl...
R/EstimRearrScen.R#L  25                                   first_...
R/EstimRearrScen.R#L  31       temp <- second_gen...
R/EstimRearrScen.R#L  32       second_gen <- first_gen...
R/EstimRearrScen.R#L  33       first_gen <- temp...
R/EstimRearrScen.R#L  40       len_1 <- syn[[1,1]]...
R/EstimRearrScen.R#L  41       len_2 <- syn[[2,2]]...
R/EstimRearrScen.R#L  42       start_1 <- SyntenyObject[[2,1]][,5...
R/EstimRearrScen.R#L  43       start_2 <- SyntenyObject[[2,1]][,6...
R/EstimRearrScen.R#L  44       end_1 <- SyntenyObject[[2,1]][,7]...
R/EstimRearrScen.R#L  45       end_2 <- SyntenyObject[[2,1]][,8]...
R/EstimRearrScen.R#L  46       ...
R/EstimRearrScen.R#L  47       ins_del_trans <- 0...
R/EstimRearrScen.R#L  48       if(start_1 != 1)...
R/EstimRearrScen.R#L  50       if(start_2 != 1)...
R/EstimRearrScen.R#L  52       if(end_1 != len_1)...
R/EstimRearrScen.R#L  54       if(end_2 != len_2)...
R/EstimRearrScen.R#L  56       ...
R/EstimRearrScen.R#L  57       if(EarlyOutput)...
R/EstimRearrScen.R#L  59       rearrangements = c('Original: 1')...
R/EstimRearrScen.R#L  60       block_key <- matrix(c(1,1,1,Synten...
R/EstimRearrScen.R#L  61       colnames(block_key) <- c('start1',...
R/EstimRearrScen.R#L  62       ...
R/EstimRearrScen.R#L  63       return(list('counts'=c(0, 0, ins_d...
R/EstimRearrScen.R#L  64                   'scenario'=rearrangeme...
R/EstimRearrScen.R#L  65                   'block_key'=block_key)...
R/EstimRearrScen.R#L  74       mat[i1, col] <- i2...
R/EstimRearrScen.R#L  75       mat[i2, col] <- i1...
R/EstimRearrScen.R#L  76       return(mat)...
R/EstimRearrScen.R#L  81       ##v1 and v2 are joined by a gray l...
R/EstimRearrScen.R#L  82       v1b <- graph[v1, 1] #black connect...
R/EstimRearrScen.R#L  83       v2b <- graph[v2, 1] #black connect...
R/EstimRearrScen.R#L  84       ...
R/EstimRearrScen.R#L  85       graph <- add_connection(graph, v1,...
R/EstimRearrScen.R#L  86       graph <- add_connection(graph, v1b...
R/EstimRearrScen.R#L  87       ...
R/EstimRearrScen.R#L  88       return(graph)...
R/EstimRearrScen.R#L  93       start <- nrow(graph)...
R/EstimRearrScen.R#L  94       cur <- graph[start, 1]...
R/EstimRearrScen.R#L  95       genome <- c()...
R/EstimRearrScen.R#L  96       ...
R/EstimRearrScen.R#L  97       while (cur != (start - 1)){...
R/EstimRearrScen.R#L 100       }...
R/EstimRearrScen.R#L 101       ...
R/EstimRearrScen.R#L 102       return(genome)...
R/EstimRearrScen.R#L 106       i <- 1...
R/EstimRearrScen.R#L 107       while(i <= length(genome)){...
R/EstimRearrScen.R#L 110           i <- i+1...
R/EstimRearrScen.R#L 111           genome <- genome[-(i)]...
R/EstimRearrScen.R#L 114           i <- i+1...
R/EstimRearrScen.R#L 115       }...
R/EstimRearrScen.R#L 116       return(genome)...
R/EstimRearrScen.R#L 121       ...
R/EstimRearrScen.R#L 122       #find first empty value...
R/EstimRearrScen.R#L 123       first_empty <- length(lst) + 1...
R/EstimRearrScen.R#L 124       for(i in seq_len(length(lst))){...
R/EstimRearrScen.R#L 126           first_empty <- i...
R/EstimRearrScen.R#L 127           break()...
R/EstimRearrScen.R#L 129       }...
R/EstimRearrScen.R#L 130       ...
R/EstimRearrScen.R#L 131       #get current length of list...
R/EstimRearrScen.R#L 132       len <- length(lst)...
R/EstimRearrScen.R#L 133       tmp <- len...
R/EstimRearrScen.R#L 134       ...
R/EstimRearrScen.R#L 135       #find new length to be able to add...
R/EstimRearrScen.R#L 136       #should overestimate slightly, thi...
R/EstimRearrScen.R#L 137       while((tmp - first_empty) < length...
R/EstimRearrScen.R#L 139       }...
R/EstimRearrScen.R#L 140       ...
R/EstimRearrScen.R#L 141       #if we increased the size of the l...
R/EstimRearrScen.R#L 142       if(tmp != len){...
R/EstimRearrScen.R#L 146       }...
R/EstimRearrScen.R#L 147       ...
R/EstimRearrScen.R#L 148       #add new value to list...
R/EstimRearrScen.R#L 149       lst[first_empty:(first_empty+lengt...
R/EstimRearrScen.R#L 150       return(lst)...
R/EstimRearrScen.R#L 154       start <- nrow(graph) #the last ent...
R/EstimRearrScen.R#L 155       cur <- graph[start, 1] #travel to ...
R/EstimRearrScen.R#L 156       ...
R/EstimRearrScen.R#L 157       #note here that the genome is repr...
R/EstimRearrScen.R#L 158       #ex. < -3 2 -4 5 1 > becomes < +3 ...
R/EstimRearrScen.R#L 159       #in the graph, instead of represen...
R/EstimRearrScen.R#L 160       #so the program represents the abo...
R/EstimRearrScen.R#L 161       #thus is a gene is even -> odd it'...
R/EstimRearrScen.R#L 162       ...
R/EstimRearrScen.R#L 163       ...
R/EstimRearrScen.R#L 164       while (cur != (start-1)){...
R/EstimRearrScen.R#L 166           #we store a direction of 1 in ...
R/EstimRearrScen.R#L 167           graph[cur, 3] <- 1 ...
R/EstimRearrScen.R#L 168           cur <- cur + 1...
R/EstimRearrScen.R#L 169           graph[cur, 3] <- 1...
R/EstimRearrScen.R#L 172           #same as above, except setting...
R/EstimRearrScen.R#L 173           graph[cur, 3] <- -1...
R/EstimRearrScen.R#L 174           cur <- cur-1...
R/EstimRearrScen.R#L 175           graph[cur, 3] <- -1...
R/EstimRearrScen.R#L 180       }...
R/EstimRearrScen.R#L 181       ...
R/EstimRearrScen.R#L 182       ...
R/EstimRearrScen.R#L 183       #This may change the end caps' dir...
R/EstimRearrScen.R#L 184       #this fixes it...
R/EstimRearrScen.R#L 185       graph[nrow(graph), 3] <- 1...
R/EstimRearrScen.R#L 186       graph[nrow(graph)-1, 3] <- 1...
R/EstimRearrScen.R#L 187       return(graph)...
R/EstimRearrScen.R#L 192       rearrangements <- vector("list", l...
R/EstimRearrScen.R#L 193       rearrangements[[1]] <- paste("Orig...
R/EstimRearrScen.R#L 194       block_count <- 0...
R/EstimRearrScen.R#L 195       invert_count <- 0...
R/EstimRearrScen.R#L 196       gen <- graph_to_genome(graph)...
R/EstimRearrScen.R#L 197       t <- 0...
R/EstimRearrScen.R#L 198       len <- length(gen) + 1...
R/EstimRearrScen.R#L 199       gen <- c(0, gen, len)...
R/EstimRearrScen.R#L 200       done <- FALSE...
R/EstimRearrScen.R#L 201       while(!identical(as.integer(gen), ...
R/EstimRearrScen.R#L 204           #The number of operations is a...
R/EstimRearrScen.R#L 205           #(as we could sort any vector ...
R/EstimRearrScen.R#L 206           #Thus if we ever get to triple...
R/EstimRearrScen.R#L 207           fname <- "./ERRONEOUS_SYNT_OBJ...
R/EstimRearrScen.R#L 208           save(SyntenyObject, file=fname...
R/EstimRearrScen.R#L 209           err_msg <- paste("Infinite Loo...
R/EstimRearrScen.R#L 210           stop(err_msg)...
R/EstimRearrScen.R#L 219           sign1 <- sign(gen[i])...
R/EstimRearrScen.R#L 220           sign2 <- sign(gen[i+1])...
R/EstimRearrScen.R#L 221           if (sign1==0) sign1 <- 1...
R/EstimRearrScen.R#L 222           ...
R/EstimRearrScen.R#L 223           #block interchange====...
R/EstimRearrScen.R#L 224           for(p in c(1,-1)){...
R/EstimRearrScen.R#L 226               next()...
R/EstimRearrScen.R#L 228               subsec <- gen[i:len]...
R/EstimRearrScen.R#L 230               subsec <- gen[seq_len(i-1)...
R/EstimRearrScen.R#L 234               #no block interchanges to ...
R/EstimRearrScen.R#L 235               #getting length of interch...
R/EstimRearrScen.R#L 236               j <- i+p...
R/EstimRearrScen.R#L 237               len_block <- 0...
R/EstimRearrScen.R#L 238               cont <- FALSE...
R/EstimRearrScen.R#L 239               while(gen[j] != (gen[i]+p)...
R/EstimRearrScen.R#L 242                   cont <- TRUE...
R/EstimRearrScen.R#L 243                   break()...
R/EstimRearrScen.R#L 246               }...
R/EstimRearrScen.R#L 247               if(cont) next()...
R/EstimRearrScen.R#L 248               #ex. 0 1 4 3 2 5, block in...
R/EstimRearrScen.R#L 249               #first cut creates the cir...
R/EstimRearrScen.R#L 250               if((gen[i] < 0 && p==1) ||...
R/EstimRearrScen.R#L 252               else...
R/EstimRearrScen.R#L 254               ...
R/EstimRearrScen.R#L 255               new_graph <- DCJ(graph, v1...
R/EstimRearrScen.R#L 256               circular_intermediate <- s...
R/EstimRearrScen.R#L 257               #we now have 0 1 2 5, with...
R/EstimRearrScen.R#L 258               #take genome as a vector a...
R/EstimRearrScen.R#L 259               cut_vertex <- -1...
R/EstimRearrScen.R#L 260               ...
R/EstimRearrScen.R#L 261               for(vert in circular_inter...
R/EstimRearrScen.R#L 263                   next()...
R/EstimRearrScen.R#L 265                   if (vert < 0){...
R/EstimRearrScen.R#L 268                   }...
R/EstimRearrScen.R#L 269                   else{...
R/EstimRearrScen.R#L 272                   }...
R/EstimRearrScen.R#L 275                   if (vert < 0){...
R/EstimRearrScen.R#L 278                   }...
R/EstimRearrScen.R#L 279                   else{...
R/EstimRearrScen.R#L 282                   }...
R/EstimRearrScen.R#L 286                   if(vert < 0){...
R/EstimRearrScen.R#L 289                   }...
R/EstimRearrScen.R#L 290                   else{...
R/EstimRearrScen.R#L 293                   }...
R/EstimRearrScen.R#L 295               }...
R/EstimRearrScen.R#L 296               ...
R/EstimRearrScen.R#L 297               if(cut_vertex != -1){...
R/EstimRearrScen.R#L 305               }...
R/EstimRearrScen.R#L 306               else {...
R/EstimRearrScen.R#L 309               }...
R/EstimRearrScen.R#L 317               v1 <- -1...
R/EstimRearrScen.R#L 318               if(gen[i]*p > 0)...
R/EstimRearrScen.R#L 320               else ...
R/EstimRearrScen.R#L 322               ...
R/EstimRearrScen.R#L 323               #ex. 0 1 -3 -2 4...
R/EstimRearrScen.R#L 324               i1 <- i...
R/EstimRearrScen.R#L 325               i2 <- match((-1*(gen[i]+p)...
R/EstimRearrScen.R#L 326               len_block <- abs(i1 - i2)...
R/EstimRearrScen.R#L 327               ...
R/EstimRearrScen.R#L 328               if(v1 != -1){...
R/EstimRearrScen.R#L 335               }...
R/EstimRearrScen.R#L 337           }...
R/EstimRearrScen.R#L 338           #end inversion====...
R/EstimRearrScen.R#L 340       }...
R/EstimRearrScen.R#L 341       total_ops <- block_count + invert_...
R/EstimRearrScen.R#L 342       ...
R/EstimRearrScen.R#L 343       rearrangements <- rearrangements[-...
R/EstimRearrScen.R#L 344       return(list("rearrangements"=rearr...
R/EstimRearrScen.R#L 359       row <- synblocks[rowindex,] #grab ...
R/EstimRearrScen.R#L 360       ...
R/EstimRearrScen.R#L 361       start1 <- row[5] #start of block o...
R/EstimRearrScen.R#L 362       blocklength <- row[7] - row[5] #le...
R/EstimRearrScen.R#L 363       ...
R/EstimRearrScen.R#L 364       start2 <- row[6]...
R/EstimRearrScen.R#L 365       #get direction of the block...
R/EstimRearrScen.R#L 366       if(row[3] == 0){ ...
R/EstimRearrScen.R#L 368       }...
R/EstimRearrScen.R#L 369       else{ ...
R/EstimRearrScen.R#L 371       }...
R/EstimRearrScen.R#L 372       if (blocklength > MinBlockLength){...
R/EstimRearrScen.R#L 377       }...
R/EstimRearrScen.R#L 388       return(list('counts'=c(0, 0, 0),...
R/EstimRearrScen.R#L 389                   'scenario'='none',...
R/EstimRearrScen.R#L 390                   'block_key'=as.matrix(...
R/EstimRearrScen.R#L 417       start <- j <- i...
R/EstimRearrScen.R#L 418       while(i < length(genome) && (genom...
R/EstimRearrScen.R#L 424       }...
R/EstimRearrScen.R#L 425       if (start == i)...
R/EstimRearrScen.R#L 431       genome <- genome[-(ind-ctr)]...
R/EstimRearrScen.R#L 432       ctr <- ctr + 1...
R/EstimRearrScen.R#L 442       if(entry < 0)...
R/EstimRearrScen.R#L 444       else...
R/EstimRearrScen.R#L 446       ...
R/EstimRearrScen.R#L 447       new_genome <- c(new_genome, conv[[...
R/EstimRearrScen.R#L 452       block_key <- block_key[-indices_to...
R/EstimRearrScen.R#L 453       if (!is(object = block_key,...
R/EstimRearrScen.R#L 454               class2 = "array")) {...
R/EstimRearrScen.R#L 458       }...
R/EstimRearrScen.R#L 459       # if (!('array' %in% class(block_k...
R/EstimRearrScen.R#L 460       #   return(list('counts'=c(0, 0, 0...
R/EstimRearrScen.R#L 461       #               'scenario'='none',...
R/EstimRearrScen.R#L 462       #               'block_key'=as.mat...
R/EstimRearrScen.R#L 463       # }...
R/EstimRearrScen.R#L 464       block_key[,5] <- seq_len(nrow(bloc...
R/EstimRearrScen.R#L 484       val <- genome[i] #get permutation ...
R/EstimRearrScen.R#L 485       ...
R/EstimRearrScen.R#L 486       if (val < 0){ #if negative, map pe...
R/EstimRearrScen.R#L 493       }...
R/EstimRearrScen.R#L 494       else { #if positive, map permutati...
R/EstimRearrScen.R#L 501       }...
R/EstimRearrScen.R#L 502       ...
R/EstimRearrScen.R#L 503       bpg <- add_connection(bpg, v1, pre...
R/EstimRearrScen.R#L 504       prev_black <- v2 #store right vert...
R/EstimRearrScen.R#L 517       NumRuns <- ceiling(sqrt(length(gra...
R/EstimRearrScen.R#L 520       progress <- txtProgressBar(max = N...
R/EstimRearrScen.R#L 523       invert_count <- 0...
R/EstimRearrScen.R#L 524       block_count <- 0...
R/EstimRearrScen.R#L 525       seq_skip_inv_probs <- seq(0, 0.75,...
R/EstimRearrScen.R#L 526       seq_skip_bi_probs <- seq(0.75, 0, ...
R/EstimRearrScen.R#L 527       min_total_seen <- 6 * length(graph...
R/EstimRearrScen.R#L 528       for(i in seq_len(NumRuns)){...
R/EstimRearrScen.R#L 530                                         ...
R/EstimRearrScen.R#L 531                                         ...
R/EstimRearrScen.R#L 536           min_total_seen <- ctot...
R/EstimRearrScen.R#L 537           rearrangements <- rearr$rearra...
R/EstimRearrScen.R#L 540           setTxtProgressBar(progress, i)...
R/EstimRearrScen.R#L 541       }...
R/EstimRearrScen.R#L 542       invert_count <- invert_count / Num...
R/EstimRearrScen.R#L 543       block_count <- block_count / NumRu...
R/EstimRearrScen.R#L 546       block_count <- invert_count <- 3*l...
R/EstimRearrScen.R#L 547       seq_skip_inv_probs <- seq(0, 0.75,...
R/EstimRearrScen.R#L 548       seq_skip_bi_probs <- seq(0.75, 0, ...
R/EstimRearrScen.R#L 549       for (i in seq_len(NumRuns)){...
R/EstimRearrScen.R#L 551                                         ...
R/EstimRearrScen.R#L 552                                         ...
R/EstimRearrScen.R#L 554           block_count <- rearr$block_cou...
R/EstimRearrScen.R#L 555           invert_count <- rearr$invert_c...
R/EstimRearrScen.R#L 556           rearrangements <- rearr$rearra...
R/EstimRearrScen.R#L 557           graph <- rearr$rearrangements...
R/EstimRearrScen.R#L 560           setTxtProgressBar(progress, i)...
R/EstimRearrScen.R#L 561       }...
R/EstimRearrScen.R#L 570   }...
R/EstimRearrScen.R#L 571   ...
R/EstimRearrScen.R#L 572   num_genomes <- nrow(SyntenyObject)...
R/EstimRearrScen.R#L 573   rearr_mat <- matrix(data=list(), nrow=...
R/EstimRearrScen.R#L 574   rearrangements <- list("Translocations...
R/EstimRearrScen.R#L 575                          "Inversions"=0,...
R/EstimRearrScen.R#L 576                          "pct_hits"=0)...
R/EstimRearrScen.R#L 577   row_names <- rownames(SyntenyObject)...
R/EstimRearrScen.R#L 579   rownames(rearr_mat) <- row_names...
R/EstimRearrScen.R#L 580   colnames(rearr_mat) <- row_names...
R/EstimRearrScen.R#L 581   rates <- vector("list", num_genomes)...
R/EstimRearrScen.R#L 582   for ( i in seq_len(num_genomes) ){...
R/EstimRearrScen.R#L 584       if (j == i){...
R/EstimRearrScen.R#L 587       }...
R/EstimRearrScen.R#L 589       gen1 <- max(i, j)...
R/EstimRearrScen.R#L 590       gen2 <- min(i, j)...
R/EstimRearrScen.R#L 591       ...
R/EstimRearrScen.R#L 592       p_hits <- (sum(SyntenyObject[[gen2...
R/EstimRearrScen.R#L 593       rearrangements$pct_hits <- p_hits...
R/EstimRearrScen.R#L 594       rearr_mat[[gen2, gen1]] <- paste(r...
R/EstimRearrScen.R#L 595       ...
R/EstimRearrScen.R#L 596       gen_info <- SyntenyObject[[gen1, g...
R/EstimRearrScen.R#L 597       ...
R/EstimRearrScen.R#L 598       num_chrom <- max(gen_info[,1],gen_...
R/EstimRearrScen.R#L 599       if(Verbose)...
R/EstimRearrScen.R#L 601       for ( chrom in seq_len(num_chrom) ...
R/EstimRearrScen.R#L 605                class2 = "integer")) {...
R/EstimRearrScen.R#L 606           rows <- matrix(data = rows,...
R/EstimRearrScen.R#L 607                          nrow = 1L)...
R/EstimRearrScen.R#L 614           if (Verbose){...
R/EstimRearrScen.R#L 618           }...
R/EstimRearrScen.R#L 619           next()...
R/EstimRearrScen.R#L 625           if (Verbose){...
R/EstimRearrScen.R#L 629           }...
R/EstimRearrScen.R#L 630           next()...
R/EstimRearrScen.R#L 635           if ( Verbose ) { ...
R/EstimRearrScen.R#L 636            cat("\n\tChromosome ", chrom,...
R/EstimRearrScen.R#L 639           }...
R/EstimRearrScen.R#L 640           next()...
R/EstimRearrScen.R#L 644           if (rows[k, 1] != rows[k, 2]){...
R/EstimRearrScen.R#L 650                    class2 = "matrix")) {...
R/EstimRearrScen.R#L 651               rearrangements$Gen1Dup <- ...
R/EstimRearrScen.R#L 652               found <- TRUE...
R/EstimRearrScen.R#L 659                    class2 = "matrix")) {...
R/EstimRearrScen.R#L 660               rearrangements$Gen2Dup <- ...
R/EstimRearrScen.R#L 661               found <- TRUE...
R/EstimRearrScen.R#L 669               rearrangements$Translocati...
R/EstimRearrScen.R#L 671               ...
R/EstimRearrScen.R#L 672           }...
R/EstimRearrScen.R#L 677           matching <- matrix(data = matc...
R/EstimRearrScen.R#L 678                              nrow = 1L)...
R/EstimRearrScen.R#L 684           next()...
R/EstimRearrScen.R#L 687           cat("\n\tChromosome ", chrom, ...
R/EstimRearrScen.R#L 689                                         ...
R/EstimRearrScen.R#L 690                                         ...
R/EstimRearrScen.R#L 691                                         ...
R/EstimRearrScen.R#L 692                                         ...
R/EstimRearrScen.R#L 700       }...
R/EstimRearrScen.R#L 705       rearr_mat[[gen1, gen2]] <- rearran...
R/EstimRearrScen.R#L 706       rearrangements <- list("Translocat...
R/EstimRearrScen.R#L 708   }...
R/EstimRearrScen.R#L 709   if(Verbose)...
R/EstimRearrScen.R#L 713   class(rearr_mat) <- append('GenRearr',...
R/EstimRearrScen.R#L 714   return(rearr_mat)...
R/EstimRearrScen.R#L 718   to_print <- matrix(character(), nrow=n...
R/EstimRearrScen.R#L 719   to_print[1,] <- c('', colnames(x))...
R/EstimRearrScen.R#L 720   nc <- ncol(x)...
R/EstimRearrScen.R#L 721   rnames <- rownames(x)...
R/EstimRearrScen.R#L 722   for (i in seq_len(nrow(x))){...
R/EstimRearrScen.R#L 726       entry <- row[[j]]...
R/EstimRearrScen.R#L 727       if (is(entry, 'character')) outvec...
R/EstimRearrScen.R#L 728       else if (is(entry, 'integer')) out...
R/EstimRearrScen.R#L 729       else {...
R/EstimRearrScen.R#L 731       }...
R/EstimRearrScen.R#L 735   }...
R/EstimRearrScen.R#L 736   lines <- format(to_print, justify='cen...
R/EstimRearrScen.R#L 737   for (i in seq_len(nrow(lines))) cat(li...
R/EstimRearrScen.R#L 738   ...
R/EstimRearrScen.R#L 739   return(invisible(x))...
R/ExtractBy.R#L  11                       y,...
R/ExtractBy.R#L  12                       z,...
R/ExtractBy.R#L  13                       Verbose = FALSE) {...
R/ExtractBy.R#L  14   ...
R/ExtractBy.R#L  15   # overhead things:...
R/ExtractBy.R#L  16   # z does not need to be supplied by th...
R/ExtractBy.R#L  17   if (missing(z)) {...
R/ExtractBy.R#L  19   }...
R/ExtractBy.R#L  20   # combinations of x, y, and z that are...
R/ExtractBy.R#L  21   # x as a DFrame of genecalls...
R/ExtractBy.R#L  22   # y as a DNAStringSet...
R/ExtractBy.R#L  23   # ...
R/ExtractBy.R#L  24   # x as a PairSummaries object...
R/ExtractBy.R#L  25   # y as a character string supplying th...
R/ExtractBy.R#L  26   # ...
R/ExtractBy.R#L  27   # x as a PairSummaries object...
R/ExtractBy.R#L  28   # y as a character string supplying th...
R/ExtractBy.R#L  29   # z as a list of COGs in the format:...
R/ExtractBy.R#L  30   # [1] "GenomeID_ContigID_FeatureID" "G...
R/ExtractBy.R#L  31   if (missing(y) |...
R/ExtractBy.R#L  32       missing(x)) {...
R/ExtractBy.R#L  34   }...
R/ExtractBy.R#L  35   ...
R/ExtractBy.R#L  36   if (is(object = x,...
R/ExtractBy.R#L  37          class2 = "DFrame") &...
R/ExtractBy.R#L  38       is(object = y,...
R/ExtractBy.R#L  39          class2 = "DNAStringSet")) {...
R/ExtractBy.R#L  47       TimeStart <- Sys.time()...
R/ExtractBy.R#L  50                                      m =...
R/ExtractBy.R#L  51                                         ...
R/ExtractBy.R#L  57       # identify the string to access...
R/ExtractBy.R#L  58       w1 <- which(AssemblyRef == GCRef[m...
R/ExtractBy.R#L  59       # grab the IRangesList for the cur...
R/ExtractBy.R#L  60       z1 <- unname(x$Range[x$Contig == G...
R/ExtractBy.R#L  61       # create a collapse map...
R/ExtractBy.R#L  62       z2 <- lengths(z1)...
R/ExtractBy.R#L  63       # unlist to an IRanges object...
R/ExtractBy.R#L  64       z1 <- unlist(z1,...
R/ExtractBy.R#L  65                    recursive = FALSE)...
R/ExtractBy.R#L  66       seqs1[[m1]] <- extractAt(x = y[w1]...
R/ExtractBy.R#L  67                                at = z1)...
R/ExtractBy.R#L  68       # figure out where collapses are n...
R/ExtractBy.R#L  69       collapsecount <- 0L...
R/ExtractBy.R#L  70       w2 <- which(z2 > 1L)...
R/ExtractBy.R#L  71       # if collapsing is necessary, coll...
R/ExtractBy.R#L  72       if (length(w2) > 0L) {...
R/ExtractBy.R#L  78                                length = ...
R/ExtractBy.R#L  80           seqs1[[m1]][[m2 + collapsecoun...
R/ExtractBy.R#L  81           removevector[(collapsecount + ...
R/ExtractBy.R#L  82           collapsecount <- collapsecount...
R/ExtractBy.R#L  85       } # end check on collapse operatio...
R/ExtractBy.R#L  86       names(seqs1[[m1]]) <- x$ID[x$Conti...
R/ExtractBy.R#L  89                      seqs1)...
R/ExtractBy.R#L  94       seqs1[flipseqs == 1L] <- reverseCo...
R/ExtractBy.R#L  99   } else if (is(object = x,...
R/ExtractBy.R#L 101              is(object = y,...
R/ExtractBy.R#L 103              !is(object = z,...
R/ExtractBy.R#L 104                  class2 = "list")) {...
R/ExtractBy.R#L 110       TimeStart <- Sys.time()...
R/ExtractBy.R#L 114                    unique(x$p2)))...
R/ExtractBy.R#L 118                           match(x = x$p2...
R/ExtractBy.R#L 120                  nrow = nrow(x))...
R/ExtractBy.R#L 123                   strsplit(x = u1,...
R/ExtractBy.R#L 124                            split = "_",...
R/ExtractBy.R#L 125                            fixed = TRUE)...
R/ExtractBy.R#L 128                  nrow = nrow(u3))...
R/ExtractBy.R#L 136       # pBar target length:...
R/ExtractBy.R#L 137       pBar <- txtProgressBar(style = 1L)...
R/ExtractBy.R#L 138       cat("\nExtracting Sequences:\n")...
R/ExtractBy.R#L 141                    length = L01)...
R/ExtractBy.R#L 154                  which = "GeneCalls")...
R/ExtractBy.R#L 157       # ID contigs...
R/ExtractBy.R#L 158       u6 <- u4[u4[, 1L] == u5[m1], 2L]...
R/ExtractBy.R#L 159       # grab assembly...
R/ExtractBy.R#L 160       CurrentAssembly <- SearchDB(dbFile...
R/ExtractBy.R#L 161                                   identi...
R/ExtractBy.R#L 162                                   verbos...
R/ExtractBy.R#L 163                                   nameBy...
R/ExtractBy.R#L 164       AssemblyRef <- unlist(regmatches(x...
R/ExtractBy.R#L 165                                        m...
R/ExtractBy.R#L 167       CurrentGeneCalls <- GC01[GCN == as...
R/ExtractBy.R#L 168       for (m2 in seq_along(u6)) {...
R/ExtractBy.R#L 180                      recursive = FALSE)...
R/ExtractBy.R#L 193                            at = z1)...
R/ExtractBy.R#L 199           # for a collapse operation of ...
R/ExtractBy.R#L 200           # for an operation of 3, we ne...
R/ExtractBy.R#L 201           # for an operation of 4, we ne...
R/ExtractBy.R#L 202           # etc...
R/ExtractBy.R#L 203           removevector <- vector(mode = ...
R/ExtractBy.R#L 204                                  length ...
R/ExtractBy.R#L 205           for (m3 in w2) {...
R/ExtractBy.R#L 209           } # end m3 loop through collap...
R/ExtractBy.R#L 210           seqs1[removevector] <- NULL...
R/ExtractBy.R#L 216           seqs1[flipseqs == 1L] <- rever...
R/ExtractBy.R#L 220           setTxtProgressBar(pb = pBar,...
R/ExtractBy.R#L 224                               u6[m2],...
R/ExtractBy.R#L 225                               u7,...
R/ExtractBy.R#L 226                               sep = "_")...
R/ExtractBy.R#L 228       } # end m2 loop through contigs...
R/ExtractBy.R#L 233       close(pBar)...
R/ExtractBy.R#L 234       cat("\nArranging Sequences:\n")...
R/ExtractBy.R#L 237                    length = nrow(x))...
R/ExtractBy.R#L 239       L01 <- length(Res2)...
R/ExtractBy.R#L 240       pBar <- txtProgressBar(style = 1L)...
R/ExtractBy.R#L 245       # call remove gaps to ...
R/ExtractBy.R#L 246       Res2[[m1]] <- RemoveGaps(Res1[name...
R/ExtractBy.R#L 247       if (Verbose) {...
R/ExtractBy.R#L 249                           value = m1 / L...
R/ExtractBy.R#L 250       }...
R/ExtractBy.R#L 251       ...
R/ExtractBy.R#L 254       close(pBar)...
R/ExtractBy.R#L 255       cat("\n")...
R/ExtractBy.R#L 256       TimeEnd <- Sys.time()...
R/ExtractBy.R#L 257       print(TimeEnd - TimeStart)...
R/ExtractBy.R#L 261   } else if (is(object = x,...
R/ExtractBy.R#L 263              is(object = y,...
R/ExtractBy.R#L 265              is(object = z,...
R/ExtractBy.R#L 266                  class2 = "list")) {...
R/ExtractBy.R#L 273       TimeStart <- Sys.time()...
R/ExtractBy.R#L 280                           match(x = x,...
R/ExtractBy.R#L 287                   strsplit(x = u1,...
R/ExtractBy.R#L 288                            split = "_",...
R/ExtractBy.R#L 289                            fixed = TRUE)...
R/ExtractBy.R#L 292                  nrow = nrow(u3))...
R/ExtractBy.R#L 300       # pBar target length:...
R/ExtractBy.R#L 301       pBar <- txtProgressBar(style = 1L)...
R/ExtractBy.R#L 302       cat("\nExtracting Sequences:\n")...
R/ExtractBy.R#L 305                    length = L01)...
R/ExtractBy.R#L 318                  which = "GeneCalls")...
R/ExtractBy.R#L 321       # ID contigs...
R/ExtractBy.R#L 322       u6 <- u4[u4[, 1L] == u5[m1], 2L]...
R/ExtractBy.R#L 323       # grab assembly...
R/ExtractBy.R#L 324       CurrentAssembly <- SearchDB(dbFile...
R/ExtractBy.R#L 325                                   identi...
R/ExtractBy.R#L 326                                   verbos...
R/ExtractBy.R#L 327                                   nameBy...
R/ExtractBy.R#L 328       AssemblyRef <- unlist(regmatches(x...
R/ExtractBy.R#L 329                                        m...
R/ExtractBy.R#L 331       CurrentGeneCalls <- GC01[GCN == as...
R/ExtractBy.R#L 332       for (m2 in seq_along(u6)) {...
R/ExtractBy.R#L 344                      recursive = FALSE)...
R/ExtractBy.R#L 357                            at = z1)...
R/ExtractBy.R#L 363           # for a collapse operation of ...
R/ExtractBy.R#L 364           # for an operation of 3, we ne...
R/ExtractBy.R#L 365           # for an operation of 4, we ne...
R/ExtractBy.R#L 366           # etc...
R/ExtractBy.R#L 367           removevector <- vector(mode = ...
R/ExtractBy.R#L 368                                  length ...
R/ExtractBy.R#L 369           for (m3 in w2) {...
R/ExtractBy.R#L 373           } # end m3 loop through collap...
R/ExtractBy.R#L 374           seqs1[removevector] <- NULL...
R/ExtractBy.R#L 380           seqs1[flipseqs == 1L] <- rever...
R/ExtractBy.R#L 384           setTxtProgressBar(pb = pBar,...
R/ExtractBy.R#L 388                               u6[m2],...
R/ExtractBy.R#L 389                               u7,...
R/ExtractBy.R#L 390                               sep = "_")...
R/ExtractBy.R#L 392       } # end m2 loop through contigs...
R/ExtractBy.R#L 397       close(pBar)...
R/ExtractBy.R#L 398       cat("\nArranging Sequences:\n")...
R/ExtractBy.R#L 401                    length = length(z))...
R/ExtractBy.R#L 403       L01 <- length(Res2)...
R/ExtractBy.R#L 404       pBar <- txtProgressBar(style = 1L)...
R/ExtractBy.R#L 409       # call remove gaps to ...
R/ExtractBy.R#L 410       Res2[[m1]] <- RemoveGaps(Res1[name...
R/ExtractBy.R#L 411       if (Verbose) {...
R/ExtractBy.R#L 413                           value = m1 / L...
R/ExtractBy.R#L 414       }...
R/ExtractBy.R#L 415       ...
R/ExtractBy.R#L 418       close(pBar)...
R/ExtractBy.R#L 419       cat("\n")...
R/ExtractBy.R#L 420       TimeEnd <- Sys.time()...
R/ExtractBy.R#L 421       print(TimeEnd - TimeStart)...
R/ExtractBy.R#L 425   } else {...
R/ExtractBy.R#L 427   }...
R/ExtractBy.R#L 428   ...
R/FastDend-class.R#L   6           slots = list(branches = 'matri...
R/FastDend-class.R#L   7                        nleaves = 'numeri...
R/FastDend-class.R#L   8                        root = 'numeric',...
R/FastDend-class.R#L  11   cat("'FastDend' object with", object@n...
R/FastDend-class.R#L  12       object@nbranches, 'branches.\n')...
R/FastDend-class.R#L  20   return(x@branches)...
R/FastDend-class.R#L  25   return(x@leaflabels)...
R/FastDend-class.R#L  30   return(x@root)...
R/FastDend-class.R#L  37   tree <- x@dendrogram...
R/FastDend-class.R#L  38   path <- rootPath(x, y)...
R/FastDend-class.R#L  39   path <- path[-length(path)]...
R/FastDend-class.R#L  40   subtree <- tree...
R/FastDend-class.R#L  41   for (element in path) subtree <- subtr...
R/FastDend-class.R#L  42   return(FastDend(subtree))...
R/FastDend-class.R#L  47   stopifnot("leafNode must be type 'char...
R/FastDend-class.R#L  48   stopifnot("'height' must be a non-nega...
R/FastDend-class.R#L  49   if (is(leafNode, 'character')){...
R/FastDend-class.R#L  51   }...
R/FastDend-class.R#L  52   stopifnot('Leaf does not exist in tree...
R/FastDend-class.R#L  53   ...
R/FastDend-class.R#L  54   b <- fDend@branches...
R/FastDend-class.R#L  55   root <- fDend@root...
R/FastDend-class.R#L  56   curnode <- leafNode...
R/FastDend-class.R#L  57   while(height > 0) {...
R/FastDend-class.R#L  59       warning('Height greater than maxim...
R/FastDend-class.R#L  60       return(fDend@dendrogram)...
R/FastDend-class.R#L  64   }...
R/FastDend-class.R#L  65   ...
R/FastDend-class.R#L  66   return(subtree(fDend, curnode))...
R/FastDend-class.R#L  71   tree <- x@dendrogram...
R/FastDend-class.R#L  72   stopifnot(is(tree, 'dendrogram'))...
R/FastDend-class.R#L  73   stopifnot("'y' must be type 'character...
R/FastDend-class.R#L  74   if (is(y, 'character')) {...
R/FastDend-class.R#L  76   }...
R/FastDend-class.R#L  77   b <- x@branches...
R/FastDend-class.R#L  78   stopifnot('Branch does not exist in tr...
R/FastDend-class.R#L  79   path <- pathnames <- rep(NA, x@nbranch...
R/FastDend-class.R#L  80   root <- x@root...
R/FastDend-class.R#L  81   curpos <- y...
R/FastDend-class.R#L  82   i <- x@nbranches...
R/FastDend-class.R#L  83   path[i] <- 0...
R/FastDend-class.R#L  84   pathnames[i] <- curpos...
R/FastDend-class.R#L  85   i <- i - 1...
R/FastDend-class.R#L  86   ...
R/FastDend-class.R#L  87   while(curpos != root){...
R/FastDend-class.R#L  93   }...
R/FastDend-class.R#L  94   path <- path[!is.na(path)]...
R/FastDend-class.R#L  95   pathnames <- pathnames[!is.na(pathname...
R/FastDend-class.R#L  96   names(path) <- pathnames...
R/FastDend-class.R#L  97   return(path)...
R/FastDend-class.R#L 101   dfs_helper <- function(node, mat, labe...
R/FastDend-class.R#L 108       nextval <- which.min(mat[,'label']...
R/FastDend-class.R#L 109       mat[curval, 'left'] <- nextval...
R/FastDend-class.R#L 110       mat[nextval, 'parent'] <- curval...
R/FastDend-class.R#L 111       mat[nextval, 'label'] <- nextval...
R/FastDend-class.R#L 112       mat[nextval, 'length'] <- leftleng...
R/FastDend-class.R#L 113       mat <- dfs_helper(left, mat, label...
R/FastDend-class.R#L 115       leaflabel <- which(labels == attr(...
R/FastDend-class.R#L 116       mat[curval, 'left'] <- leaflabel...
R/FastDend-class.R#L 117       mat[leaflabel, 'parent'] <- curval...
R/FastDend-class.R#L 118       mat[leaflabel, 'length'] <- leftle...
R/FastDend-class.R#L 122       nextval <- which.min(mat[,'label']...
R/FastDend-class.R#L 123       mat[curval, 'right'] <- nextval...
R/FastDend-class.R#L 124       mat[nextval, 'parent'] <- curval...
R/FastDend-class.R#L 125       mat[nextval, 'label'] <- nextval...
R/FastDend-class.R#L 126       mat[nextval, 'length'] <- rightlen...
R/FastDend-class.R#L 127       mat <- dfs_helper(right, mat, labe...
R/FastDend-class.R#L 129       leaflabel <- which(labels == attr(...
R/FastDend-class.R#L 130       mat[curval, 'right'] <- leaflabel...
R/FastDend-class.R#L 131       mat[leaflabel, 'parent'] <- curval...
R/FastDend-class.R#L 132       mat[leaflabel, 'length'] <- rightl...
R/FastDend-class.R#L 136   }...
R/FastDend-class.R#L 137   ...
R/FastDend-class.R#L 138   ...
R/FastDend-class.R#L 139   labels <- labels(dend)...
R/FastDend-class.R#L 140   nleaves <- length(labels)...
R/FastDend-class.R#L 141   leaflabels <- seq_len(nleaves)...
R/FastDend-class.R#L 142   names(labels) <- leaflabels...
R/FastDend-class.R#L 143   nbranches <- 2*nleaves + 3...
R/FastDend-class.R#L 144   mat <- matrix(c(-1, 0, 0, 0, 0, 0, 1),...
R/FastDend-class.R#L 145   colnames(mat) <- c('label', 'isLeaf', ...
R/FastDend-class.R#L 146   mat[leaflabels, 'isLeaf'] <- 1...
R/FastDend-class.R#L 147   mat[leaflabels, 'label'] <- leaflabels...
R/FastDend-class.R#L 148   rootval <- nleaves + 1...
R/FastDend-class.R#L 149   mat[rootval, 'label'] <- 0...
R/FastDend-class.R#L 150   mat[rootval, 'parent'] <- -1...
R/FastDend-class.R#L 151   mat[rootval, 'length'] <- attr(dend, '...
R/FastDend-class.R#L 152   mat <- dfs_helper(dend, mat, labels, r...
R/FastDend-class.R#L 153   mat <- mat[mat[,'label'] >= 0,]...
R/FastDend-class.R#L 154   ...
R/FastDend-class.R#L 155   d <- new('FastDend', branches = mat, l...
R/FastDend-class.R#L 156            nleaves = nleaves, nbranches ...
R/FastDend-class.R#L 157            root = rootval, dendrogram = ...
R/FastDend-class.R#L 158   return(d)...
R/FastDend-class.R#L 163   ov <- c(ov, rep(-1, nrow(branches(fDen...
R/FastDend-class.R#L 164   helperfunc <- function(branchmat, node...
R/FastDend-class.R#L 167       helperfunc(branchmat, left)...
R/FastDend-class.R#L 171       helperfunc(branchmat, right)...
R/FastDend-class.R#L 178       fillval <- min(lv, rv)...
R/FastDend-class.R#L 180       fillval <- ifelse(xor(lv, rv), 2, ...
R/FastDend-class.R#L 182   }...
R/FastDend-class.R#L 183   helperfunc(branches(fDend), root(fDend...
R/FastDend-class.R#L 184   return(ov)...
R/FastDend-class.R#L 188   helperfunc <- function(branchesmat, no...
R/FastDend-class.R#L 190       if (ov[node] == 2){...
R/FastDend-class.R#L 192           ov[node] <<- rootFill...
R/FastDend-class.R#L 194           pval <- ov[branchesmat[node, '...
R/FastDend-class.R#L 195           ov[node] <<- ifelse(pushUp, ab...
R/FastDend-class.R#L 197       } ...
R/FastDend-class.R#L 198       helperfunc(branchesmat, branchesma...
R/FastDend-class.R#L 199       helperfunc(branchesmat, branchesma...
R/FastDend-class.R#L 201   }...
R/FastDend-class.R#L 202   ...
R/FastDend-class.R#L 203   helperfunc(branches(fDend), root(fDend...
R/FastDend-class.R#L 204   return(ov)...
R/FastDend-class.R#L 208   ovf <- fitch_up(fDend, occurrenceVec)...
R/FastDend-class.R#L 209   ovf <- fitch_down(fDend, ovf, moveEven...
R/FastDend-class.R#L 210   return(ovf)...
R/FastDend-class.R#L 214   glvec <- rep(0, length(occurrenceVec))...
R/FastDend-class.R#L 215   helperfunc <- function(bmat, branch){...
R/FastDend-class.R#L 218       glvec[branch] <<- occurrenceVec[br...
R/FastDend-class.R#L 222       helperfunc(bmat, bmat[branch, 'lef...
R/FastDend-class.R#L 223       helperfunc(bmat, bmat[branch, 'rig...
R/FastDend-class.R#L 225   }...
R/FastDend-class.R#L 226   ...
R/FastDend-class.R#L 227   helperfunc(branches(fDend), root(fDend...
R/FastDend-class.R#L 228   return(glvec)...
R/FastDend-class.R#L 232   fdbranch <- fd@branches...
R/FastDend-class.R#L 233   branchmat <- matrix(0, ncol=nrow(fdbra...
R/FastDend-class.R#L 234   blengths <- numeric(length=nrow(fdbran...
R/FastDend-class.R#L 235   for (i in seq_len(nrow(fdbranch))){...
R/FastDend-class.R#L 240       next...
R/FastDend-class.R#L 242       branchmat[v, r[3]] <- 1...
R/FastDend-class.R#L 244       branchmat[v, r[4]] <- 1...
R/FastDend-class.R#L 245   }...
R/FastDend-class.R#L 246   blengths <- blengths / sum(blengths)...
R/FastDend-class.R#L 247   Cmat <- matrix(0, nrow=length(blengths...
R/FastDend-class.R#L 248   for (i in seq_along(blengths)){...
R/FastDend-class.R#L 250       if (i == j)...
R/FastDend-class.R#L 252       else...
R/FastDend-class.R#L 255   }...
R/FastDend-class.R#L 256   ...
R/FastDend-class.R#L 257   S1 <- branchmat...
R/FastDend-class.R#L 258   Id <- diag(nrow=nrow(S1), ncol=ncol(S1...
R/FastDend-class.R#L 259   S <- S_c <- S1...
R/FastDend-class.R#L 260   if (!IdOnly){...
R/FastDend-class.R#L 262       S_c <- S_c %*% S1...
R/FastDend-class.R#L 263       if (all(S_c == 0))...
R/FastDend-class.R#L 265       S <- S + S_c...
R/FastDend-class.R#L 267   }...
R/FastDend-class.R#L 268   ...
R/FastDend-class.R#L 269   return(list(S=S, Id=Id, blengths=bleng...
R/FastDend-class.R#L 273   stopifnot(is(fDend, 'FastDend'))...
R/FastDend-class.R#L 274   stopifnot(length(leaves(fDend)) == len...
R/FastDend-class.R#L 275   occvec <- fitch_parsimony(fDend, PAvec...
R/FastDend-class.R#L 276   glv <- gain_loss_vec(fDend, occvec)...
R/FastDend-class.R#L 277   return(glv)...
R/FindSets.R#L   6                      p2,...
R/FindSets.R#L   7                      Verbose = FALSE) {...
R/FindSets.R#L   8   ...
R/FindSets.R#L   9   # p1 and p2 here are the integer repre...
R/FindSets.R#L  10   # it is likely these could be converte...
R/FindSets.R#L  11   # Data, but that seems unnecessary for...
R/FindSets.R#L  12   # a constraint based on construction i...
R/FindSets.R#L  13   # though this seems unnecessary from t...
R/FindSets.R#L  14   if (!is.integer(p1) |...
R/FindSets.R#L  15       !is.integer(p2)) {...
R/FindSets.R#L  17   }...
R/FindSets.R#L  18   if (length(p1) != length(p2)) {...
R/FindSets.R#L  20   }...
R/FindSets.R#L  21   ...
R/FindSets.R#L  22   if (Verbose) {...
R/FindSets.R#L  27   }...
R/FindSets.R#L  28   Origins <- sort(unique(c(unique(p1),...
R/FindSets.R#L  29                            unique(p2))))...
R/FindSets.R#L  30   Nodes <- seq(length(Origins))...
R/FindSets.R#L  31   L <- length(Nodes)...
R/FindSets.R#L  32   Rank <- vector(mode = "integer",...
R/FindSets.R#L  33                  length = L)...
R/FindSets.R#L  34   ...
R/FindSets.R#L  35   # a visual map of algo progress:...
R/FindSets.R#L  36   # Res <- matrix(data = 0L,...
R/FindSets.R#L  37   #               nrow = L,...
R/FindSets.R#L  38   #               ncol = (1L + length(p1...
R/FindSets.R#L  39   # Res[, 1L] <- Nodes...
R/FindSets.R#L  40   for (m1 in seq_along(p1)) {...
R/FindSets.R#L  45       x <- Nodes[x]...
R/FindSets.R#L  51       y <- Nodes[y]...
R/FindSets.R#L  55       # do nothing...
R/FindSets.R#L  57       Nodes[x] <- y...
R/FindSets.R#L  59       Nodes[y] <- x...
R/FindSets.R#L  61       Nodes[y] <- x...
R/FindSets.R#L  62       Rank[x] <- Rank[x] + 1L...
R/FindSets.R#L  67       setTxtProgressBar(pb = pBar,...
R/FindSets.R#L  70   }...
R/FindSets.R#L  71   if (Verbose) {...
R/FindSets.R#L  78   }...
R/FindSets.R#L  79   # end first pass, nodes are pointed up...
R/FindSets.R#L  80   # while scrolling through pairs...
R/FindSets.R#L  82   # nodes whose pointer is towards anoth...
R/FindSets.R#L  83   # i.e. scroll through nodes and ask if...
R/FindSets.R#L  84   # the known paths till you get to a ro...
R/FindSets.R#L  85   for (m1 in seq_along(Nodes)) {...
R/FindSets.R#L  87       # node is not it's own root...
R/FindSets.R#L  88       while (Nodes[Nodes[m1]] != Nodes[m...
R/FindSets.R#L  90       }...
R/FindSets.R#L  93       setTxtProgressBar(pb = pBar,...
R/FindSets.R#L  98   }...
R/FindSets.R#L  99   if (Verbose) {...
R/FindSets.R#L 103   }...
R/FindSets.R#L 104   ...
R/FindSets.R#L 105   # return(Res)...
R/FindSets.R#L 106   return(cbind(Origins,...
R/FindSets.R#L 107                Nodes))...
R/flatdendrapply.R#L   2                            INCLUDEROOT=T...
R/flatdendrapply.R#L   3   stopifnot("flatdendrapply only works o...
R/flatdendrapply.R#L   4               is(dend, 'dendrogram'))...
R/flatdendrapply.R#L   5   if (!is(NODEFUN, 'function') && !is(LE...
R/flatdendrapply.R#L   7   ...
R/flatdendrapply.R#L   8   val <- lapply(dend, ...
R/flatdendrapply.R#L  10                   if (is.null(attr(x, 'l...
R/flatdendrapply.R#L  12                       v <- list()...
R/flatdendrapply.R#L  14                       v <- list(NODEFUN(...
R/flatdendrapply.R#L  17                   } ...
R/flatdendrapply.R#L  18                   else if (!is(LEAFFUN, ...
R/flatdendrapply.R#L  20                   else ...
R/flatdendrapply.R#L  23   )...
R/flatdendrapply.R#L  24   retval <- unlist(val, recursive=FALSE)...
R/flatdendrapply.R#L  25   if (!INCLUDEROOT)...
R/flatdendrapply.R#L  27   ...
R/flatdendrapply.R#L  28   lens <- vapply(retval, length, FUN.VAL...
R/flatdendrapply.R#L  29   atom <- vapply(retval, is.atomic, FUN....
R/flatdendrapply.R#L  30   ...
R/flatdendrapply.R#L  31   if(all(lens[1] == 1L) && all(atom))...
R/flatdendrapply.R#L  33   ...
R/flatdendrapply.R#L  34   return(retval)...
R/gffToDataFrame.R#L  10                            AdditionalAtt...
R/gffToDataFrame.R#L  11                            AdditionalTyp...
R/gffToDataFrame.R#L  12                            RawTableOnly ...
R/gffToDataFrame.R#L  13                            Verbose = FAL...
R/gffToDataFrame.R#L  14   ...
R/gffToDataFrame.R#L  15   if (Verbose) {...
R/gffToDataFrame.R#L  18   }...
R/gffToDataFrame.R#L  19   ...
R/gffToDataFrame.R#L  20   if (grepl(pattern = "www.|http:|https:...
R/gffToDataFrame.R#L  25   } else if (grepl(pattern = ".gz$",...
R/gffToDataFrame.R#L  26                    x = GFF)) {...
R/gffToDataFrame.R#L  30   } else if (grepl(pattern = ".gff$",...
R/gffToDataFrame.R#L  31                    x = GFF)) {...
R/gffToDataFrame.R#L  33   } else {...
R/gffToDataFrame.R#L  35   }...
R/gffToDataFrame.R#L  36   ...
R/gffToDataFrame.R#L  37   LinesAsList <- strsplit(InitLines,...
R/gffToDataFrame.R#L  38                           split = "\t",...
R/gffToDataFrame.R#L  39                           fixed = TRUE)...
R/gffToDataFrame.R#L  40   LinesAsList <- LinesAsList[which(lengt...
R/gffToDataFrame.R#L  41   LinesAsList <- do.call(rbind,...
R/gffToDataFrame.R#L  42                          LinesAsList)...
R/gffToDataFrame.R#L  43   RawAttrField <- strsplit(LinesAsList[,...
R/gffToDataFrame.R#L  44                            split = ";",...
R/gffToDataFrame.R#L  45                            fixed = TRUE)...
R/gffToDataFrame.R#L  46   LinesAsList <- LinesAsList[, -9L]...
R/gffToDataFrame.R#L  47   ...
R/gffToDataFrame.R#L  48   # create a DF with the correct raw for...
R/gffToDataFrame.R#L  49   ...
R/gffToDataFrame.R#L  50   StandardizedColumns <- as.data.frame(L...
R/gffToDataFrame.R#L  51                                        s...
R/gffToDataFrame.R#L  52   ...
R/gffToDataFrame.R#L  53   StandardizedColumns[, 4L] <- as.intege...
R/gffToDataFrame.R#L  54   StandardizedColumns[, 5L] <- as.intege...
R/gffToDataFrame.R#L  55   StandardizedColumns[, 7L] <- ifelse(te...
R/gffToDataFrame.R#L  56                                       ye...
R/gffToDataFrame.R#L  57                                       no...
R/gffToDataFrame.R#L  58   ...
R/gffToDataFrame.R#L  59   CollectAttr <- c("ID",...
R/gffToDataFrame.R#L  60                    "Parent",...
R/gffToDataFrame.R#L  61                    "Name",...
R/gffToDataFrame.R#L  62                    "gbkey",...
R/gffToDataFrame.R#L  63                    "gene",...
R/gffToDataFrame.R#L  64                    "product",...
R/gffToDataFrame.R#L  65                    "protein_id",...
R/gffToDataFrame.R#L  66                    "gene_biotype",...
R/gffToDataFrame.R#L  67                    "Note",...
R/gffToDataFrame.R#L  68                    "transl_table")...
R/gffToDataFrame.R#L  69   ...
R/gffToDataFrame.R#L  70   if (!is.null(AdditionalAttrs)) {...
R/gffToDataFrame.R#L  72                      AdditionalAttrs)...
R/gffToDataFrame.R#L  74   }...
R/gffToDataFrame.R#L  75   ...
R/gffToDataFrame.R#L  76   # rectangularize attribute fields...
R/gffToDataFrame.R#L  77   ParsedAttrs <- sapply(RawAttrField,...
R/gffToDataFrame.R#L  79                                         ...
R/gffToDataFrame.R#L  80                                         ...
R/gffToDataFrame.R#L  81                                         ...
R/gffToDataFrame.R#L  82                                         ...
R/gffToDataFrame.R#L  83                                         ...
R/gffToDataFrame.R#L  84                                         ...
R/gffToDataFrame.R#L  85                                         ...
R/gffToDataFrame.R#L  86                                         ...
R/gffToDataFrame.R#L  87                                         ...
R/gffToDataFrame.R#L  88                                         ...
R/gffToDataFrame.R#L  89                                         ...
R/gffToDataFrame.R#L  90                                         ...
R/gffToDataFrame.R#L  91                                         ...
R/gffToDataFrame.R#L  92                                         ...
R/gffToDataFrame.R#L  93                                         ...
R/gffToDataFrame.R#L  94                                         ...
R/gffToDataFrame.R#L  95                                         ...
R/gffToDataFrame.R#L  96                                         ...
R/gffToDataFrame.R#L  97                                         ...
R/gffToDataFrame.R#L  98                                         ...
R/gffToDataFrame.R#L  99                                         ...
R/gffToDataFrame.R#L 100                                         ...
R/gffToDataFrame.R#L 101                                         ...
R/gffToDataFrame.R#L 102                                         ...
R/gffToDataFrame.R#L 103                                         ...
R/gffToDataFrame.R#L 104                                         ...
R/gffToDataFrame.R#L 105                                         ...
R/gffToDataFrame.R#L 106                                         ...
R/gffToDataFrame.R#L 107                                         ...
R/gffToDataFrame.R#L 108                                         ...
R/gffToDataFrame.R#L 109                                         ...
R/gffToDataFrame.R#L 110                                         ...
R/gffToDataFrame.R#L 111                                         ...
R/gffToDataFrame.R#L 112                                         ...
R/gffToDataFrame.R#L 113                                         ...
R/gffToDataFrame.R#L 114   ...
R/gffToDataFrame.R#L 115   ParsedAttrs <- t(ParsedAttrs)...
R/gffToDataFrame.R#L 116   ParsedAttrs <- as.data.frame(ParsedAtt...
R/gffToDataFrame.R#L 117                                stringsAs...
R/gffToDataFrame.R#L 118   ...
R/gffToDataFrame.R#L 119   colnames(StandardizedColumns) <- c("Co...
R/gffToDataFrame.R#L 120                      "Source",...
R/gffToDataFrame.R#L 121                      "Type",...
R/gffToDataFrame.R#L 122                      "Start",...
R/gffToDataFrame.R#L 123                      "Stop",...
R/gffToDataFrame.R#L 124                      "Score",...
R/gffToDataFrame.R#L 125                      "Strand",...
R/gffToDataFrame.R#L 126                      "Phase")...
R/gffToDataFrame.R#L 127   ...
R/gffToDataFrame.R#L 128   CompleteTable <- cbind(StandardizedCol...
R/gffToDataFrame.R#L 129                          ParsedAttrs,...
R/gffToDataFrame.R#L 130                          stringsAsFactor...
R/gffToDataFrame.R#L 131   ...
R/gffToDataFrame.R#L 132   Contigs <- CompleteTable[!duplicated(C...
R/gffToDataFrame.R#L 133   ContigMaxes <- Contigs$Stop[order(Cont...
R/gffToDataFrame.R#L 135   Contigs <- Contigs[order(Contigs$Stop,...
R/gffToDataFrame.R#L 136                            decreasing = ...
R/gffToDataFrame.R#L 137   Contigs <- Contigs$Contig...
R/gffToDataFrame.R#L 138   ...
R/gffToDataFrame.R#L 139   Index <- sapply(CompleteTable$Contig,...
R/gffToDataFrame.R#L 140                   function(x) which(Cont...
R/gffToDataFrame.R#L 141                   USE.NAMES = FALSE,...
R/gffToDataFrame.R#L 142                   simplify = TRUE)...
R/gffToDataFrame.R#L 143   ...
R/gffToDataFrame.R#L 144   CompleteTable <- cbind(CompleteTable,...
R/gffToDataFrame.R#L 145                          "Index" = Index...
R/gffToDataFrame.R#L 146   ...
R/gffToDataFrame.R#L 147   CompleteTable <- CompleteTable[order(C...
R/gffToDataFrame.R#L 148                                        C...
R/gffToDataFrame.R#L 149   ...
R/gffToDataFrame.R#L 150   if (RawTableOnly) {...
R/gffToDataFrame.R#L 152       cat("\n")...
R/gffToDataFrame.R#L 153       FunEndTime <- Sys.time()...
R/gffToDataFrame.R#L 154       print(FunEndTime - FunStartTime)...
R/gffToDataFrame.R#L 157   }...
R/gffToDataFrame.R#L 158   ...
R/gffToDataFrame.R#L 159   if (Verbose) {...
R/gffToDataFrame.R#L 161                       value = 1 / 3)...
R/gffToDataFrame.R#L 162   }...
R/gffToDataFrame.R#L 163   ...
R/gffToDataFrame.R#L 164   MatchTypes <- c("gene",...
R/gffToDataFrame.R#L 165                   "pseudogene")...
R/gffToDataFrame.R#L 166   ...
R/gffToDataFrame.R#L 167   if (!is.null(AdditionalTypes)) {...
R/gffToDataFrame.R#L 171   }...
R/gffToDataFrame.R#L 172   ...
R/gffToDataFrame.R#L 173   MatchTable <- CompleteTable[CompleteTa...
R/gffToDataFrame.R#L 174   MatchTable <- MatchTable[order(MatchTa...
R/gffToDataFrame.R#L 175                                  MatchTa...
R/gffToDataFrame.R#L 176   ...
R/gffToDataFrame.R#L 177   # Match by Parent/ID matching...
R/gffToDataFrame.R#L 178   ...
R/gffToDataFrame.R#L 179   AllChildrenList <- vector(mode = "list...
R/gffToDataFrame.R#L 181   AllCDSChildrenList <- vector(mode = "l...
R/gffToDataFrame.R#L 182                                length = ...
R/gffToDataFrame.R#L 183   ...
R/gffToDataFrame.R#L 184   for (m1 in seq_len(nrow(MatchTable))) ...
R/gffToDataFrame.R#L 188       PrevIter <- length(AllParents)...
R/gffToDataFrame.R#L 189       NewParents <- CompleteTable$ID[Com...
R/gffToDataFrame.R#L 190       NewParents <- NewParents[!is.na(Ne...
R/gffToDataFrame.R#L 191       AllParents <- c(AllParents,...
R/gffToDataFrame.R#L 192                       NewParents)...
R/gffToDataFrame.R#L 193       AllParents <- unique(AllParents)...
R/gffToDataFrame.R#L 194       CurrentIter <- length(AllParents)...
R/gffToDataFrame.R#L 195       ...
R/gffToDataFrame.R#L 196       if (PrevIter == CurrentIter) {...
R/gffToDataFrame.R#L 200       }...
R/gffToDataFrame.R#L 201       # while loop will repeat here unti...
R/gffToDataFrame.R#L 207       # Correct for phase:...
R/gffToDataFrame.R#L 208       # This is not what phase is for .....
R/gffToDataFrame.R#L 209       # AllCDSChildrenList[[m1]][, "Star...
R/gffToDataFrame.R#L 210       #                                 ...
R/gffToDataFrame.R#L 211       #                                 ...
R/gffToDataFrame.R#L 212       #                                 ...
R/gffToDataFrame.R#L 213       #                                 ...
R/gffToDataFrame.R#L 214       AllCDSChildrenList[[m1]] <- AllCDS...
R/gffToDataFrame.R#L 215                                         ...
R/gffToDataFrame.R#L 216       # remove aberant lines # maybe fli...
R/gffToDataFrame.R#L 217       if (any(AllCDSChildrenList[[m1]]$S...
R/gffToDataFrame.R#L 219       }...
R/gffToDataFrame.R#L 223       setTxtProgressBar(pb = pBar,...
R/gffToDataFrame.R#L 226   }...
R/gffToDataFrame.R#L 227   ...
R/gffToDataFrame.R#L 228   # Generate associated character and lo...
R/gffToDataFrame.R#L 229   CodingSelect <- vector(mode = "logical...
R/gffToDataFrame.R#L 230                          length = nrow(M...
R/gffToDataFrame.R#L 231   MatchLine <- vector(mode = "list",...
R/gffToDataFrame.R#L 232                       length = nrow(Matc...
R/gffToDataFrame.R#L 233   ProductLine <- vector(mode = "characte...
R/gffToDataFrame.R#L 235   NoteLine <- vector(mode = "character",...
R/gffToDataFrame.R#L 236                      length = nrow(Match...
R/gffToDataFrame.R#L 237   ParseNote <- vector(mode = "list",...
R/gffToDataFrame.R#L 238                       length = nrow(Matc...
R/gffToDataFrame.R#L 239   Translation_Table <- rep(NA_character_...
R/gffToDataFrame.R#L 240                            nrow(MatchTab...
R/gffToDataFrame.R#L 241   for (m1 in seq_len(nrow(MatchTable))) ...
R/gffToDataFrame.R#L 244       # Case 1...
R/gffToDataFrame.R#L 245       # Generate CodingSelect, MatchLine...
R/gffToDataFrame.R#L 246       CodingSelect[m1] <- FALSE...
R/gffToDataFrame.R#L 247       Translation_Table[m1] <- NA_charac...
R/gffToDataFrame.R#L 248       MatchLine[[m1]] <- IRanges(start =...
R/gffToDataFrame.R#L 249                                  end = M...
R/gffToDataFrame.R#L 250       if (is.na(MatchTable[m1, "product"...
R/gffToDataFrame.R#L 252       } else {...
R/gffToDataFrame.R#L 254       }...
R/gffToDataFrame.R#L 255       if (is.na(MatchTable[m1, "Note"]))...
R/gffToDataFrame.R#L 257       } else {...
R/gffToDataFrame.R#L 259       }...
R/gffToDataFrame.R#L 261                nrow(AllChildrenList[[m1]...
R/gffToDataFrame.R#L 262       # Case 2...
R/gffToDataFrame.R#L 263       CodingSelect[m1] <- FALSE...
R/gffToDataFrame.R#L 264       Translation_Table[m1] <- NA_charac...
R/gffToDataFrame.R#L 265       CurrentTable <- rbind(MatchTable[m...
R/gffToDataFrame.R#L 267       # Parse Product Line...
R/gffToDataFrame.R#L 268       if (all(is.na(CurrentTable$product...
R/gffToDataFrame.R#L 270       } else if (length(unique(CurrentTa...
R/gffToDataFrame.R#L 272       } else if (length(unique(CurrentTa...
R/gffToDataFrame.R#L 275                              paste("Mult...
R/gffToDataFrame.R#L 276                                    m1,...
R/gffToDataFrame.R#L 277                                    ", ta...
R/gffToDataFrame.R#L 278       }...
R/gffToDataFrame.R#L 279       # Parse Note Line...
R/gffToDataFrame.R#L 280       if (all(is.na(CurrentTable$Note)))...
R/gffToDataFrame.R#L 282       } else if (length(unique(CurrentTa...
R/gffToDataFrame.R#L 284       } else if (length(unique(CurrentTa...
R/gffToDataFrame.R#L 287                              paste("Mult...
R/gffToDataFrame.R#L 288                                    m1,...
R/gffToDataFrame.R#L 289                                    ", ta...
R/gffToDataFrame.R#L 290       }...
R/gffToDataFrame.R#L 291       # split into 2A & 2B & 2C...
R/gffToDataFrame.R#L 292       if (length(unique(CurrentTable$Sta...
R/gffToDataFrame.R#L 293           length(unique(CurrentTable$Sto...
R/gffToDataFrame.R#L 296                                    end =...
R/gffToDataFrame.R#L 297       } else if (xor(length(unique(Curre...
R/gffToDataFrame.R#L 298                      length(unique(Curre...
R/gffToDataFrame.R#L 301                                    end =...
R/gffToDataFrame.R#L 302       } else if (length(unique(CurrentTa...
R/gffToDataFrame.R#L 303                  length(unique(CurrentTa...
R/gffToDataFrame.R#L 306                                    end =...
R/gffToDataFrame.R#L 308                              "A discrepa...
R/gffToDataFrame.R#L 309       }...
R/gffToDataFrame.R#L 311       # Case 3...
R/gffToDataFrame.R#L 312       CodingSelect[m1] <- TRUE...
R/gffToDataFrame.R#L 313       CurrentTable <- rbind(MatchTable[m...
R/gffToDataFrame.R#L 315       Translation_Table[m1] <- unique(Cu...
R/gffToDataFrame.R#L 316       # Parse Product Line...
R/gffToDataFrame.R#L 317       if (all(is.na(CurrentTable$product...
R/gffToDataFrame.R#L 319       } else if (length(unique(CurrentTa...
R/gffToDataFrame.R#L 321       } else if (length(unique(CurrentTa...
R/gffToDataFrame.R#L 324                              paste("Mult...
R/gffToDataFrame.R#L 325                                    m1,...
R/gffToDataFrame.R#L 326                                    ", ta...
R/gffToDataFrame.R#L 327       }...
R/gffToDataFrame.R#L 328       # Parse Note Line...
R/gffToDataFrame.R#L 329       if (all(is.na(CurrentTable$Note)))...
R/gffToDataFrame.R#L 331       } else if (length(unique(CurrentTa...
R/gffToDataFrame.R#L 333       } else if (length(unique(CurrentTa...
R/gffToDataFrame.R#L 336                              paste("Mult...
R/gffToDataFrame.R#L 337                                    m1,...
R/gffToDataFrame.R#L 338                                    ", ta...
R/gffToDataFrame.R#L 339       }...
R/gffToDataFrame.R#L 340       ...
R/gffToDataFrame.R#L 341       # split into 3A, 3B, and 3C...
R/gffToDataFrame.R#L 342       if (length(unique(AllCDSChildrenLi...
R/gffToDataFrame.R#L 343           length(unique(AllCDSChildrenLi...
R/gffToDataFrame.R#L 351                                    end =...
R/gffToDataFrame.R#L 353       } else if (length(unique(AllCDSChi...
R/gffToDataFrame.R#L 354                  length(unique(AllCDSChi...
R/gffToDataFrame.R#L 363                                    end =...
R/gffToDataFrame.R#L 364       } else if (xor(length(unique(AllCD...
R/gffToDataFrame.R#L 365                      length(unique(AllCD...
R/gffToDataFrame.R#L 371                                    end =...
R/gffToDataFrame.R#L 373                              "A discrepa...
R/gffToDataFrame.R#L 374       }...
R/gffToDataFrame.R#L 378       setTxtProgressBar(pb = pBar,...
R/gffToDataFrame.R#L 381   }...
R/gffToDataFrame.R#L 382   ...
R/gffToDataFrame.R#L 383   MatchTable <- DataFrame(MatchTable,...
R/gffToDataFrame.R#L 384                           "Range" = IRan...
R/gffToDataFrame.R#L 385                           "Coding" = Cod...
R/gffToDataFrame.R#L 386                           # "AnnotationN...
R/gffToDataFrame.R#L 387                           # "ParseNotes"...
R/gffToDataFrame.R#L 388                           # stringsAsFac...
R/gffToDataFrame.R#L 389                           "Translation_T...
R/gffToDataFrame.R#L 390                           "Product" = Pr...
R/gffToDataFrame.R#L 391   ...
R/gffToDataFrame.R#L 392   MatchTable <- MatchTable[, c("Index",...
R/gffToDataFrame.R#L 393                                "Strand",...
R/gffToDataFrame.R#L 394                                "Start",...
R/gffToDataFrame.R#L 395                                "Stop",...
R/gffToDataFrame.R#L 396                                "Type",...
R/gffToDataFrame.R#L 397                                "ID",...
R/gffToDataFrame.R#L 398                                "Range",...
R/gffToDataFrame.R#L 399                                "Product"...
R/gffToDataFrame.R#L 400                                # "Annota...
R/gffToDataFrame.R#L 401                                # "gene_b...
R/gffToDataFrame.R#L 402                                "Coding",...
R/gffToDataFrame.R#L 403                                "Translat...
R/gffToDataFrame.R#L 404                                "Contig")...
R/gffToDataFrame.R#L 405   rownames(MatchTable) <- NULL...
R/gffToDataFrame.R#L 406   ...
R/gffToDataFrame.R#L 407   # rewrite any ranges where bounds exte...
R/gffToDataFrame.R#L 408   for (m1 in seq_len(nrow(MatchTable))) ...
R/gffToDataFrame.R#L 410       # at least one bound extends over ...
R/gffToDataFrame.R#L 411       B_Starts <- MatchLine[[m1]]@start ...
R/gffToDataFrame.R#L 412       B_Ends <- MatchLine[[m1]]@start + ...
R/gffToDataFrame.R#L 413       F_Break <- ContigMaxes[MatchTable$...
R/gffToDataFrame.R#L 414       # do this with a while loop...
R/gffToDataFrame.R#L 415       RemainingBounds <- TRUE...
R/gffToDataFrame.R#L 416       C_Counts <- 1L...
R/gffToDataFrame.R#L 417       N_Counts <- 1L...
R/gffToDataFrame.R#L 418       N_Starts <- rep(NA_integer_,...
R/gffToDataFrame.R#L 419                       length(B_Starts) *...
R/gffToDataFrame.R#L 420       N_Ends <- rep(NA_integer_,...
R/gffToDataFrame.R#L 422       while(RemainingBounds) {...
R/gffToDataFrame.R#L 425           # print("break after, no furth...
R/gffToDataFrame.R#L 426           # Case 1:...
R/gffToDataFrame.R#L 427           # Break occurs after this boun...
R/gffToDataFrame.R#L 428           # This bound set is the only r...
R/gffToDataFrame.R#L 429           # add bounds to new vectors...
R/gffToDataFrame.R#L 430           # exit...
R/gffToDataFrame.R#L 431           N_Starts[N_Counts] <- B_Starts...
R/gffToDataFrame.R#L 432           N_Ends[N_Counts] <- B_Ends[C_C...
R/gffToDataFrame.R#L 433           RemainingBounds <- FALSE...
R/gffToDataFrame.R#L 435                    C_Counts == length(B_...
R/gffToDataFrame.R#L 436           # print("break prior, no furth...
R/gffToDataFrame.R#L 437           # Case 2:...
R/gffToDataFrame.R#L 438           # Break occurs before this bou...
R/gffToDataFrame.R#L 439           # This bound set is the only r...
R/gffToDataFrame.R#L 440           # adjust current bound set...
R/gffToDataFrame.R#L 441           # exit...
R/gffToDataFrame.R#L 442           N_Starts[N_Counts] <- B_Starts...
R/gffToDataFrame.R#L 443           N_Ends[N_Counts] <- B_Ends[C_C...
R/gffToDataFrame.R#L 444           RemainingBounds <- FALSE...
R/gffToDataFrame.R#L 446                    F_Break < B_Ends[C_Co...
R/gffToDataFrame.R#L 447                    C_Counts == length(B_...
R/gffToDataFrame.R#L 448           # print("break interior, no fu...
R/gffToDataFrame.R#L 449           # Case 3:...
R/gffToDataFrame.R#L 450           # Break occurs inside current ...
R/gffToDataFrame.R#L 451           # this is the only remaining b...
R/gffToDataFrame.R#L 452           # add set with adjusted curren...
R/gffToDataFrame.R#L 453           # add new set...
R/gffToDataFrame.R#L 454           # exit...
R/gffToDataFrame.R#L 455           N_Starts[N_Counts] <- B_Starts...
R/gffToDataFrame.R#L 456           N_Ends[N_Counts] <- F_Break...
R/gffToDataFrame.R#L 457           N_Starts[N_Counts + 1L] <- 1L...
R/gffToDataFrame.R#L 458           N_Ends[N_Counts + 1L] <- B_End...
R/gffToDataFrame.R#L 459           RemainingBounds <- FALSE...
R/gffToDataFrame.R#L 461                    C_Counts < length(B_E...
R/gffToDataFrame.R#L 462           # print("break after, further ...
R/gffToDataFrame.R#L 463           # Case 4:...
R/gffToDataFrame.R#L 464           # Break occurs after this boun...
R/gffToDataFrame.R#L 465           # Bound sets remain to be eval...
R/gffToDataFrame.R#L 466           # add current set whole cloth...
R/gffToDataFrame.R#L 467           # update counters...
R/gffToDataFrame.R#L 468           N_Starts[N_Counts] <- B_Starts...
R/gffToDataFrame.R#L 469           N_Ends[N_Counts] <- B_Ends[C_C...
R/gffToDataFrame.R#L 470           N_Counts <- N_Counts + 1L...
R/gffToDataFrame.R#L 471           C_Counts <- C_Counts + 1L...
R/gffToDataFrame.R#L 473                    C_Counts < length(B_S...
R/gffToDataFrame.R#L 474           # print("break prior, further ...
R/gffToDataFrame.R#L 475           # Case 5:...
R/gffToDataFrame.R#L 476           # Break occurs before this bou...
R/gffToDataFrame.R#L 477           # Bound sets remain to be eval...
R/gffToDataFrame.R#L 478           # Adjust all following bound s...
R/gffToDataFrame.R#L 479           # update counters...
R/gffToDataFrame.R#L 480           # remaining sets will be visit...
R/gffToDataFrame.R#L 481           B_Starts[(C_Counts + 1L):lengt...
R/gffToDataFrame.R#L 482           B_Ends[(C_Counts + 1L):length(...
R/gffToDataFrame.R#L 483           N_Starts[N_Counts] <- B_Starts...
R/gffToDataFrame.R#L 484           N_Ends[N_Counts] <- B_Ends[C_C...
R/gffToDataFrame.R#L 485           N_Counts <- N_Counts + 1L...
R/gffToDataFrame.R#L 486           C_Counts <- C_Counts + 1L...
R/gffToDataFrame.R#L 488                    F_Break < B_Ends[C_Co...
R/gffToDataFrame.R#L 489           # print("break interior, furth...
R/gffToDataFrame.R#L 490           # Case 6:...
R/gffToDataFrame.R#L 491           # Break occurs inside current ...
R/gffToDataFrame.R#L 492           # Bound sets remain to be eval...
R/gffToDataFrame.R#L 493           # Adjust following bound sets...
R/gffToDataFrame.R#L 494           # add set with adjusted curren...
R/gffToDataFrame.R#L 495           # add new set...
R/gffToDataFrame.R#L 496           # update following bounds...
R/gffToDataFrame.R#L 497           N_Starts[N_Counts] <- B_Starts...
R/gffToDataFrame.R#L 498           N_Ends[N_Counts] <- F_Break...
R/gffToDataFrame.R#L 499           N_Starts[N_Counts + 1L] <- 1L...
R/gffToDataFrame.R#L 500           N_Ends[N_Counts + 1L] <- B_End...
R/gffToDataFrame.R#L 501           B_Starts[(C_Counts + 1L):lengt...
R/gffToDataFrame.R#L 502           B_Ends[(C_Counts + 1L):length(...
R/gffToDataFrame.R#L 503           C_Counts <- C_Counts + 1L...
R/gffToDataFrame.R#L 504           N_Counts <- N_Counts + 2L...
R/gffToDataFrame.R#L 506           print("an unmet condition exis...
R/gffToDataFrame.R#L 507           stop("An unmet condition was d...
R/gffToDataFrame.R#L 509       } # while loop...
R/gffToDataFrame.R#L 510       N_Starts <- N_Starts[!is.na(N_Star...
R/gffToDataFrame.R#L 511       N_Ends <- N_Ends[!is.na(N_Ends)]...
R/gffToDataFrame.R#L 512       ...
R/gffToDataFrame.R#L 513       MatchTable$Range[[m1]] <- IRanges(...
R/gffToDataFrame.R#L 516   } # end loop...
R/gffToDataFrame.R#L 517   ...
R/gffToDataFrame.R#L 518   if (Verbose) {...
R/gffToDataFrame.R#L 522   }...
R/gffToDataFrame.R#L 523   return(MatchTable)...
R/LinkedPairs-class.R#L   2   ans <- NextMethod("[", x)...
R/LinkedPairs-class.R#L   3   ...
R/LinkedPairs-class.R#L   4   if (missing(j))...
R/LinkedPairs-class.R#L   6   ...
R/LinkedPairs-class.R#L   7   d <- dim(x)...
R/LinkedPairs-class.R#L   8   I <- seq_len(d[1])...
R/LinkedPairs-class.R#L   9   J <- seq_len(d[1])...
R/LinkedPairs-class.R#L  10   d <- dimnames(x)...
R/LinkedPairs-class.R#L  11   names(I) <- d[[1]]...
R/LinkedPairs-class.R#L  12   names(J) <- d[[1]]...
R/LinkedPairs-class.R#L  13   I <- I[i]...
R/LinkedPairs-class.R#L  14   J <- J[j]...
R/LinkedPairs-class.R#L  15   if (length(I) >= 2 &&...
R/LinkedPairs-class.R#L  16       length(I)==length(J) &&...
R/LinkedPairs-class.R#L  17       all(I==J) &&...
R/LinkedPairs-class.R#L  18       !any(duplicated(I))) {...
R/LinkedPairs-class.R#L  20   }...
R/LinkedPairs-class.R#L  21   attr(ans, "GeneCalls") <- attr(x, "Gen...
R/LinkedPairs-class.R#L  22   return(ans)...
R/LinkedPairs-class.R#L  29   d <- dim(x)...
R/LinkedPairs-class.R#L  30   if (is.null(d)) {...
R/LinkedPairs-class.R#L  32   }...
R/LinkedPairs-class.R#L  33   m <- matrix("",...
R/LinkedPairs-class.R#L  34               nrow = d[1],...
R/LinkedPairs-class.R#L  35               ncol = d[2],...
R/LinkedPairs-class.R#L  36               dimnames = dimnames(x))...
R/LinkedPairs-class.R#L  37   ...
R/LinkedPairs-class.R#L  38   for (m1 in seq_len(d[1])) {...
R/LinkedPairs-class.R#L  40       if (m1 > m2) {...
R/LinkedPairs-class.R#L  46                            ifelse(k == 1...
R/LinkedPairs-class.R#L  47                                   "Kmer"...
R/LinkedPairs-class.R#L  48                                   "Kmers...
R/LinkedPairs-class.R#L  49                            sep = " ")...
R/LinkedPairs-class.R#L  50       } else if (m1 < m2) {...
R/LinkedPairs-class.R#L  56                            ifelse(k == 1...
R/LinkedPairs-class.R#L  57                                   "Pair"...
R/LinkedPairs-class.R#L  58                                   "Pairs...
R/LinkedPairs-class.R#L  59                            sep = " ")...
R/LinkedPairs-class.R#L  60       } else if (m1 == m2 &...
R/LinkedPairs-class.R#L  61                  !is.null(x[m1, m2][[1]]...
R/LinkedPairs-class.R#L  64                            ifelse(k == 1...
R/LinkedPairs-class.R#L  65                                   "Conti...
R/LinkedPairs-class.R#L  66                                   "Conti...
R/LinkedPairs-class.R#L  67                            sep = " ")...
R/LinkedPairs-class.R#L  68       } else if (m1 == m2 &...
R/LinkedPairs-class.R#L  69                  is.null(x[m1, m2][[1]])...
R/LinkedPairs-class.R#L  71       }...
R/LinkedPairs-class.R#L  73   }...
R/LinkedPairs-class.R#L  74   print(m,...
R/LinkedPairs-class.R#L  78   invisible(x)...
R/NucleotideOverlap.R#L   6                               GeneCalls,...
R/NucleotideOverlap.R#L   7                               LimitIndex...
R/NucleotideOverlap.R#L   8                               AcceptCont...
R/NucleotideOverlap.R#L   9                               Verbose = ...
R/NucleotideOverlap.R#L  10   ######...
R/NucleotideOverlap.R#L  11   # Error Checking...
R/NucleotideOverlap.R#L  12   # Require names for synteny object, DE...
R/NucleotideOverlap.R#L  13   # Parameters Default Filter, FilterOve...
R/NucleotideOverlap.R#L  14   # a filtering function is under constr...
R/NucleotideOverlap.R#L  15   ######...
R/NucleotideOverlap.R#L  16   ...
R/NucleotideOverlap.R#L  17   L <- nrow(SyntenyObject)...
R/NucleotideOverlap.R#L  18   if (!("DECIPHER" %in% .packages())) {...
R/NucleotideOverlap.R#L  20   }...
R/NucleotideOverlap.R#L  21   if (!is(SyntenyObject, "Synteny")) {...
R/NucleotideOverlap.R#L  23   }...
R/NucleotideOverlap.R#L  24   if (L != length(GeneCalls)) {...
R/NucleotideOverlap.R#L  26   }...
R/NucleotideOverlap.R#L  27   if (is.null(names(GeneCalls))) {...
R/NucleotideOverlap.R#L  29   }...
R/NucleotideOverlap.R#L  30   if (is.null(rownames(SyntenyObject))) ...
R/NucleotideOverlap.R#L  32   }...
R/NucleotideOverlap.R#L  33   if (any(names(GeneCalls) != rownames(S...
R/NucleotideOverlap.R#L  35   }...
R/NucleotideOverlap.R#L  36   if (L <= 1L) {...
R/NucleotideOverlap.R#L  38   }...
R/NucleotideOverlap.R#L  39   ...
R/NucleotideOverlap.R#L  40   if (Verbose) {...
R/NucleotideOverlap.R#L  43   }...
R/NucleotideOverlap.R#L  44   ResultMatrix <- matrix(data = list(),...
R/NucleotideOverlap.R#L  45                          nrow = L,...
R/NucleotideOverlap.R#L  46                          ncol = L)...
R/NucleotideOverlap.R#L  47   TotalLength <- L^2 - L...
R/NucleotideOverlap.R#L  48   TotalCounter <- 0L...
R/NucleotideOverlap.R#L  49   ######...
R/NucleotideOverlap.R#L  50   # scroll through every hit table in th...
R/NucleotideOverlap.R#L  51   ######...
R/NucleotideOverlap.R#L  52   ...
R/NucleotideOverlap.R#L  53   ###### -- Deal with Different GeneCall...
R/NucleotideOverlap.R#L  54   ...
R/NucleotideOverlap.R#L  55   SynNames <- unname(sapply(diag(Synteny...
R/NucleotideOverlap.R#L  57                                         ...
R/NucleotideOverlap.R#L  58                                         ...
R/NucleotideOverlap.R#L  61   FeatureRepresentations <- vector(mode ...
R/NucleotideOverlap.R#L  62                                    lengt...
R/NucleotideOverlap.R#L  63   names(FeatureRepresentations) <- names...
R/NucleotideOverlap.R#L  64   ContigNames <- vector(mode = "list",...
R/NucleotideOverlap.R#L  66   ...
R/NucleotideOverlap.R#L  67   GCallClasses <- sapply(GeneCalls,...
R/NucleotideOverlap.R#L  68                          function(x) cla...
R/NucleotideOverlap.R#L  69                          USE.NAMES = FAL...
R/NucleotideOverlap.R#L  70                          simplify = TRUE...
R/NucleotideOverlap.R#L  71   if (any(GCallClasses == "GRanges")) {...
R/NucleotideOverlap.R#L  73   }...
R/NucleotideOverlap.R#L  74   IndexMatching <- vector("integer",...
R/NucleotideOverlap.R#L  75                           length = lengt...
R/NucleotideOverlap.R#L  76   ...
R/NucleotideOverlap.R#L  77   if (Verbose) {...
R/NucleotideOverlap.R#L  79   }...
R/NucleotideOverlap.R#L  80   for (m1 in seq_along(GeneCalls)) {...
R/NucleotideOverlap.R#L  83       IndexMatching[m1] <- length(unique...
R/NucleotideOverlap.R#L  85       IndexMatching[m1] <- 1L...
R/NucleotideOverlap.R#L  87   }...
R/NucleotideOverlap.R#L  88   SyntenyIndices <- unname(lengths(diag(...
R/NucleotideOverlap.R#L  89   if (any(IndexMatching > SyntenyIndices...
R/NucleotideOverlap.R#L  92   }...
R/NucleotideOverlap.R#L  93   ...
R/NucleotideOverlap.R#L  94   for (m1 in seq_along(GeneCalls)) {...
R/NucleotideOverlap.R#L  96            "GRanges")) {...
R/NucleotideOverlap.R#L  97       # if GRanges, force contig name ma...
R/NucleotideOverlap.R#L  98       # stop if a contig name exists in ...
R/NucleotideOverlap.R#L  99       # does not exist in the GRanges ob...
R/NucleotideOverlap.R#L 100       ...
R/NucleotideOverlap.R#L 101       ContigNames[[m1]] <- seq(length(Ge...
R/NucleotideOverlap.R#L 102       names(ContigNames[[m1]]) <- unique...
R/NucleotideOverlap.R#L 103       ...
R/NucleotideOverlap.R#L 104       if (any(is.na(match(x = names(Cont...
R/NucleotideOverlap.R#L 105                           table = SynNam...
R/NucleotideOverlap.R#L 107                      names(GeneCalls)[m1...
R/NucleotideOverlap.R#L 108       }...
R/NucleotideOverlap.R#L 109       ...
R/NucleotideOverlap.R#L 110       TypePlaceHolder <- as.character(Ge...
R/NucleotideOverlap.R#L 111       GeneCalls[[m1]] <- GeneCalls[[m1]]...
R/NucleotideOverlap.R#L 113       StrandConversion <- ifelse(test = ...
R/NucleotideOverlap.R#L 114                                  yes = 0...
R/NucleotideOverlap.R#L 115                                  no = 1L...
R/NucleotideOverlap.R#L 116       StartConversion <- GeneCalls[[m1]]...
R/NucleotideOverlap.R#L 117       StopConversion <- GeneCalls[[m1]]@...
R/NucleotideOverlap.R#L 118       # assign integer positions to cont...
R/NucleotideOverlap.R#L 119       IndexConversion <- rep(unname(Cont...
R/NucleotideOverlap.R#L 120                              GeneCalls[[...
R/NucleotideOverlap.R#L 121       ...
R/NucleotideOverlap.R#L 122       LengthsConversion <- StopConversio...
R/NucleotideOverlap.R#L 123       # reorder and reindex lines...
R/NucleotideOverlap.R#L 124       C.Index <- IndexConversion...
R/NucleotideOverlap.R#L 125       ph1 <- unname(ContigNames[[m1]])...
R/NucleotideOverlap.R#L 126       ph2 <- match(x = names(ContigNames...
R/NucleotideOverlap.R#L 127                    table = SynNames[[m1]...
R/NucleotideOverlap.R#L 128       ph3 <- vector(mode = "list",...
R/NucleotideOverlap.R#L 130       for (m3 in seq_along(ph1)) {...
R/NucleotideOverlap.R#L 132       }...
R/NucleotideOverlap.R#L 133       for (m3 in seq_along(ph1)) {...
R/NucleotideOverlap.R#L 135           C.Index <- replace(x = C.Index...
R/NucleotideOverlap.R#L 136                              list = ph3[...
R/NucleotideOverlap.R#L 137                              values = ph...
R/NucleotideOverlap.R#L 139       }...
R/NucleotideOverlap.R#L 140       rm(list = c("ph1",...
R/NucleotideOverlap.R#L 141                   "ph2",...
R/NucleotideOverlap.R#L 142                   "ph3"))...
R/NucleotideOverlap.R#L 143       o <- order(C.Index,...
R/NucleotideOverlap.R#L 144                  StartConversion)...
R/NucleotideOverlap.R#L 145       ...
R/NucleotideOverlap.R#L 146       StrandConversion <- StrandConversi...
R/NucleotideOverlap.R#L 147       IndexConversion <- C.Index[o]...
R/NucleotideOverlap.R#L 148       StartConversion <- StartConversion...
R/NucleotideOverlap.R#L 149       StopConversion <- StopConversion[o...
R/NucleotideOverlap.R#L 150       LengthsConversion <- LengthsConver...
R/NucleotideOverlap.R#L 151       ...
R/NucleotideOverlap.R#L 152       # FeatureRepresentations[[m1]] <- ...
R/NucleotideOverlap.R#L 153       #                                 ...
R/NucleotideOverlap.R#L 154       #                                 ...
R/NucleotideOverlap.R#L 155       #                                 ...
R/NucleotideOverlap.R#L 156       #                                 ...
R/NucleotideOverlap.R#L 157       #                                 ...
R/NucleotideOverlap.R#L 158       #                                 ...
R/NucleotideOverlap.R#L 159       ...
R/NucleotideOverlap.R#L 160       StrandMax <- rep(unname(SyntenyObj...
R/NucleotideOverlap.R#L 161                        table(IndexConver...
R/NucleotideOverlap.R#L 162       R <- mapply(function(x, y) IRanges...
R/NucleotideOverlap.R#L 163                                         ...
R/NucleotideOverlap.R#L 164                   x = StartConversion,...
R/NucleotideOverlap.R#L 165                   y = StopConversion,...
R/NucleotideOverlap.R#L 166                   SIMPLIFY = FALSE)...
R/NucleotideOverlap.R#L 167       FeatureRepresentations[[m1]] <- Da...
R/NucleotideOverlap.R#L 173                                         ...
R/NucleotideOverlap.R#L 175                                         ...
R/NucleotideOverlap.R#L 177                                         ...
R/NucleotideOverlap.R#L 179       ...
R/NucleotideOverlap.R#L 180       FeatureRepresentations[[m1]] <- Fe...
R/NucleotideOverlap.R#L 181       rm(list = c("IndexConversion",...
R/NucleotideOverlap.R#L 182                   "StrandConversion",...
R/NucleotideOverlap.R#L 183                   "StartConversion",...
R/NucleotideOverlap.R#L 184                   "StopConversion",...
R/NucleotideOverlap.R#L 185                   "LengthsConversion"))...
R/NucleotideOverlap.R#L 186       ...
R/NucleotideOverlap.R#L 187       ph <- seq(length(ContigNames[[m1]]...
R/NucleotideOverlap.R#L 188       # ph <- unname(SyntenyObject[[m1, ...
R/NucleotideOverlap.R#L 189       names(ph) <- SynNames[[m1]]...
R/NucleotideOverlap.R#L 190       ContigNames[[m1]] <- ph...
R/NucleotideOverlap.R#L 191       ...
R/NucleotideOverlap.R#L 193                   "DFrame")) {...
R/NucleotideOverlap.R#L 194       ...
R/NucleotideOverlap.R#L 195       ph <- unique(GeneCalls[[m1]][, c("...
R/NucleotideOverlap.R#L 196       ContigNames[[m1]] <- ph$Index...
R/NucleotideOverlap.R#L 197       names(ContigNames[[m1]]) <- ph$Con...
R/NucleotideOverlap.R#L 198       rm(list = c("ph"))...
R/NucleotideOverlap.R#L 199       ...
R/NucleotideOverlap.R#L 200       CurrentIndices <- as.integer(GeneC...
R/NucleotideOverlap.R#L 201       CurrentStarts <- as.integer(GeneCa...
R/NucleotideOverlap.R#L 202       if (AcceptContigNames) {...
R/NucleotideOverlap.R#L 206                      table = SynNames[[m...
R/NucleotideOverlap.R#L 208                       length = length(ph...
R/NucleotideOverlap.R#L 210           ph3[[m3]] <- which(C.Index == ...
R/NucleotideOverlap.R#L 213           if (length(ph3) > 0L) {...
R/NucleotideOverlap.R#L 215                                list = ph...
R/NucleotideOverlap.R#L 216                                values = ...
R/NucleotideOverlap.R#L 217           }...
R/NucleotideOverlap.R#L 223                    CurrentStarts)...
R/NucleotideOverlap.R#L 224       } else {...
R/NucleotideOverlap.R#L 226                    CurrentStarts)...
R/NucleotideOverlap.R#L 227       }...
R/NucleotideOverlap.R#L 228       # CurrentStarts <- CurrentStarts[o...
R/NucleotideOverlap.R#L 229       # CurrentStops <- as.integer(GeneC...
R/NucleotideOverlap.R#L 230       # CurrentStrands <- as.integer(Gen...
R/NucleotideOverlap.R#L 231       if (AcceptContigNames) {...
R/NucleotideOverlap.R#L 234       } else {...
R/NucleotideOverlap.R#L 237       }...
R/NucleotideOverlap.R#L 238       # CurrentLengths <- CurrentStops -...
R/NucleotideOverlap.R#L 239       ...
R/NucleotideOverlap.R#L 240       # FeatureRepresentations[[m1]] <- ...
R/NucleotideOverlap.R#L 241       #                                 ...
R/NucleotideOverlap.R#L 242       #                                 ...
R/NucleotideOverlap.R#L 243       #                                 ...
R/NucleotideOverlap.R#L 244       #                                 ...
R/NucleotideOverlap.R#L 245       #                                 ...
R/NucleotideOverlap.R#L 246       #                                 ...
R/NucleotideOverlap.R#L 247       FeatureRepresentations[[m1]] <- Ge...
R/NucleotideOverlap.R#L 248       # rm(list = c("CurrentIndices",...
R/NucleotideOverlap.R#L 249       #             "CurrentStrands",...
R/NucleotideOverlap.R#L 250       #             "CurrentStarts",...
R/NucleotideOverlap.R#L 251       #             "CurrentStops",...
R/NucleotideOverlap.R#L 252       #             "CurrentLengths"))...
R/NucleotideOverlap.R#L 253       ...
R/NucleotideOverlap.R#L 255                   "Genes")) {...
R/NucleotideOverlap.R#L 256       # convert Erik's gene calls to a t...
R/NucleotideOverlap.R#L 257       # the column "Gene" assigns whethe...
R/NucleotideOverlap.R#L 258       # that the caller actually picked,...
R/NucleotideOverlap.R#L 259       ans <- GeneCalls[[m1]]...
R/NucleotideOverlap.R#L 260       ...
R/NucleotideOverlap.R#L 261       CurrentIndices <- as.integer(ans[,...
R/NucleotideOverlap.R#L 262       CurrentStarts <- as.integer(ans[, ...
R/NucleotideOverlap.R#L 263       CurrentStrand <- as.integer(ans[, ...
R/NucleotideOverlap.R#L 264       CurrentStops <- as.integer(ans[, "...
R/NucleotideOverlap.R#L 265       CurrentType <- rep("gene",...
R/NucleotideOverlap.R#L 266                          nrow(ans))...
R/NucleotideOverlap.R#L 267       CurrentGene <- as.integer(ans[, "G...
R/NucleotideOverlap.R#L 268       CurrentCoding <- ifelse(test = Cur...
R/NucleotideOverlap.R#L 269                               yes = TRUE...
R/NucleotideOverlap.R#L 270                               no = FALSE...
R/NucleotideOverlap.R#L 271       R <- mapply(function(x, y) IRanges...
R/NucleotideOverlap.R#L 272                                         ...
R/NucleotideOverlap.R#L 273                   x = ans[, "Begin"],...
R/NucleotideOverlap.R#L 274                   y = ans[, "End"],...
R/NucleotideOverlap.R#L 275                   SIMPLIFY = FALSE)...
R/NucleotideOverlap.R#L 276       ContigNames[[m1]] <- unique(Curren...
R/NucleotideOverlap.R#L 277       names(ContigNames[[m1]]) <- gsub(x...
R/NucleotideOverlap.R#L 278                                        p...
R/NucleotideOverlap.R#L 279                                        r...
R/NucleotideOverlap.R#L 280       if (AcceptContigNames) {...
R/NucleotideOverlap.R#L 284                      table = SynNames[[m...
R/NucleotideOverlap.R#L 286                       length = length(ph...
R/NucleotideOverlap.R#L 288           ph3[[m3]] <- which(C.Index == ...
R/NucleotideOverlap.R#L 291           if (length(ph3) > 0L) {...
R/NucleotideOverlap.R#L 293                                list = ph...
R/NucleotideOverlap.R#L 294                                values = ...
R/NucleotideOverlap.R#L 295           }...
R/NucleotideOverlap.R#L 301                    CurrentStarts)...
R/NucleotideOverlap.R#L 302       } else {...
R/NucleotideOverlap.R#L 306                    CurrentStarts)...
R/NucleotideOverlap.R#L 307       }...
R/NucleotideOverlap.R#L 308       D <- DataFrame("Index" = CurrentIn...
R/NucleotideOverlap.R#L 309                      "Strand" = CurrentS...
R/NucleotideOverlap.R#L 310                      "Start" = CurrentSt...
R/NucleotideOverlap.R#L 311                      "Stop" = CurrentSto...
R/NucleotideOverlap.R#L 312                      "Type" = CurrentTyp...
R/NucleotideOverlap.R#L 313                      "Range" = IRangesLi...
R/NucleotideOverlap.R#L 314                      "Gene" = CurrentGen...
R/NucleotideOverlap.R#L 315                      "Coding" = CurrentC...
R/NucleotideOverlap.R#L 316                      "Translation_Table"...
R/NucleotideOverlap.R#L 317                                         ...
R/NucleotideOverlap.R#L 318       D <- D[o, ]...
R/NucleotideOverlap.R#L 319       D <- D[as.vector(ans[, "Gene"]) !=...
R/NucleotideOverlap.R#L 320       rownames(D) <- NULL...
R/NucleotideOverlap.R#L 321       FeatureRepresentations[[m1]] <- D...
R/NucleotideOverlap.R#L 322       # ContigNames[[m1]] <- unique(D$In...
R/NucleotideOverlap.R#L 323       # names(ContigNames[[m1]]) <- Cont...
R/NucleotideOverlap.R#L 324       ...
R/NucleotideOverlap.R#L 325       ...
R/NucleotideOverlap.R#L 326       rm(list = c("D",...
R/NucleotideOverlap.R#L 327                   "ans",...
R/NucleotideOverlap.R#L 328                   "R",...
R/NucleotideOverlap.R#L 329                   "CurrentIndices",...
R/NucleotideOverlap.R#L 330                   "CurrentStarts",...
R/NucleotideOverlap.R#L 331                   "CurrentStrand",...
R/NucleotideOverlap.R#L 332                   "CurrentStops",...
R/NucleotideOverlap.R#L 333                   "CurrentType",...
R/NucleotideOverlap.R#L 334                   "CurrentGene",...
R/NucleotideOverlap.R#L 335                   "CurrentCoding"))...
R/NucleotideOverlap.R#L 338       setTxtProgressBar(pb = pBar,...
R/NucleotideOverlap.R#L 341   }...
R/NucleotideOverlap.R#L 342   ...
R/NucleotideOverlap.R#L 343   if (Verbose) {...
R/NucleotideOverlap.R#L 345   }...
R/NucleotideOverlap.R#L 346   ...
R/NucleotideOverlap.R#L 347   if (AcceptContigNames) {...
R/NucleotideOverlap.R#L 349       if (any(is.na(match(x = names(Cont...
R/NucleotideOverlap.R#L 350                           table = SynNam...
R/NucleotideOverlap.R#L 352                      names(GeneCalls)[m1...
R/NucleotideOverlap.R#L 353       } else {...
R/NucleotideOverlap.R#L 358       }...
R/NucleotideOverlap.R#L 360   } else {...
R/NucleotideOverlap.R#L 362       ph <- unname(SyntenyObject[[m1, m1...
R/NucleotideOverlap.R#L 363       names(ph) <- SynNames[[m1]]...
R/NucleotideOverlap.R#L 364       ContigNames[[m1]] <- ph...
R/NucleotideOverlap.R#L 366   }...
R/NucleotideOverlap.R#L 367   diag(ResultMatrix) <- ContigNames...
R/NucleotideOverlap.R#L 368   ...
R/NucleotideOverlap.R#L 369   ###### -- End Gene call stuff --------...
R/NucleotideOverlap.R#L 370   ...
R/NucleotideOverlap.R#L 371   pBar <- txtProgressBar(style = 1L)...
R/NucleotideOverlap.R#L 372   for (m1 in seq_len(L - 1L)) {...
R/NucleotideOverlap.R#L 374       ######...
R/NucleotideOverlap.R#L 375       # Collect Index Start Stop and Str...
R/NucleotideOverlap.R#L 376       # Collect Index Start Stop Strand ...
R/NucleotideOverlap.R#L 377       ######...
R/NucleotideOverlap.R#L 378       ...
R/NucleotideOverlap.R#L 379       Q.Index <- FeatureRepresentations[...
R/NucleotideOverlap.R#L 380       Q.Start <- FeatureRepresentations[...
R/NucleotideOverlap.R#L 381       Q.Stop <- FeatureRepresentations[[...
R/NucleotideOverlap.R#L 382       QG.Strand <- FeatureRepresentation...
R/NucleotideOverlap.R#L 383       ...
R/NucleotideOverlap.R#L 384       S.Index <- FeatureRepresentations[...
R/NucleotideOverlap.R#L 385       S.Start <- FeatureRepresentations[...
R/NucleotideOverlap.R#L 386       S.Stop <- FeatureRepresentations[[...
R/NucleotideOverlap.R#L 387       SG.Strand <- FeatureRepresentation...
R/NucleotideOverlap.R#L 388       ...
R/NucleotideOverlap.R#L 389       # if (AcceptContigNames) {...
R/NucleotideOverlap.R#L 390       #   Q.Index <- FeatureRepresentati...
R/NucleotideOverlap.R#L 391       #   ph1 <- unname(ContigNames[[m1]...
R/NucleotideOverlap.R#L 392       #   ph2 <- match(x = names(ContigN...
R/NucleotideOverlap.R#L 393       #                table = SynNames[...
R/NucleotideOverlap.R#L 394       #   ph3 <- vector(mode = "list",...
R/NucleotideOverlap.R#L 395       #                 length = length(...
R/NucleotideOverlap.R#L 396       #   for (m3 in seq_along(ph1)) {...
R/NucleotideOverlap.R#L 397       #     ph3[[m3]] <- which(Q.Index =...
R/NucleotideOverlap.R#L 398       #   }...
R/NucleotideOverlap.R#L 399       #   for (m3 in seq_along(ph1)) {...
R/NucleotideOverlap.R#L 400       #     if (length(ph3) > 0L) {...
R/NucleotideOverlap.R#L 401       #       Q.Index <- replace(x = Q.I...
R/NucleotideOverlap.R#L 402       #                          list = ...
R/NucleotideOverlap.R#L 403       #                          values ...
R/NucleotideOverlap.R#L 404       #     }...
R/NucleotideOverlap.R#L 405       #   }...
R/NucleotideOverlap.R#L 406       #   rm(list = c("ph1",...
R/NucleotideOverlap.R#L 407       #               "ph2",...
R/NucleotideOverlap.R#L 408       #               "ph3"))...
R/NucleotideOverlap.R#L 409       #   S.Index <- FeatureRepresentati...
R/NucleotideOverlap.R#L 410       #   ph1 <- unname(ContigNames[[m2]...
R/NucleotideOverlap.R#L 411       #   ph2 <- match(x = names(ContigN...
R/NucleotideOverlap.R#L 412       #                table = SynNames[...
R/NucleotideOverlap.R#L 413       #   ph3 <- vector(mode = "list",...
R/NucleotideOverlap.R#L 414       #                 length = length(...
R/NucleotideOverlap.R#L 415       #   for (m3 in seq_along(ph1)) {...
R/NucleotideOverlap.R#L 416       #     ph3[[m3]] <- which(S.Index =...
R/NucleotideOverlap.R#L 417       #   }...
R/NucleotideOverlap.R#L 418       #   for (m3 in seq_along(ph2)) {...
R/NucleotideOverlap.R#L 419       #     if (length(ph3[[m3]]) > 0L) ...
R/NucleotideOverlap.R#L 420       #       S.Index <- replace(x = S.I...
R/NucleotideOverlap.R#L 421       #                          list = ...
R/NucleotideOverlap.R#L 422       #                          values ...
R/NucleotideOverlap.R#L 423       #     }...
R/NucleotideOverlap.R#L 424       #   }...
R/NucleotideOverlap.R#L 425       #   rm(list = c("ph1",...
R/NucleotideOverlap.R#L 426       #               "ph2",...
R/NucleotideOverlap.R#L 427       #               "ph3"))...
R/NucleotideOverlap.R#L 428       #   o <- order(S.Index,...
R/NucleotideOverlap.R#L 429       #              S.Start)...
R/NucleotideOverlap.R#L 430       #   S.Start <- S.Start[o]...
R/NucleotideOverlap.R#L 431       #   S.Stop <- S.Stop[o]...
R/NucleotideOverlap.R#L 432       #   SG.Strand <- SG.Strand[o]...
R/NucleotideOverlap.R#L 433       #   S.Index <- S.Index[o]...
R/NucleotideOverlap.R#L 434       #   o <- order(Q.Index,...
R/NucleotideOverlap.R#L 435       #              Q.Start)...
R/NucleotideOverlap.R#L 436       #   Q.Start <- Q.Start[o]...
R/NucleotideOverlap.R#L 437       #   Q.Stop <- Q.Stop[o]...
R/NucleotideOverlap.R#L 438       #   QG.Strand <- QG.Strand[o]...
R/NucleotideOverlap.R#L 439       #   Q.Index <- Q.Index[o]...
R/NucleotideOverlap.R#L 440       #   rm(list = c("o"))...
R/NucleotideOverlap.R#L 441       # } else {...
R/NucleotideOverlap.R#L 442       #   Q.Index <- FeatureRepresentati...
R/NucleotideOverlap.R#L 443       #   S.Index <- FeatureRepresentati...
R/NucleotideOverlap.R#L 444       # }...
R/NucleotideOverlap.R#L 445       ...
R/NucleotideOverlap.R#L 446       CurrentHitTable <- SyntenyObject[m...
R/NucleotideOverlap.R#L 447       # return(list(unique(CurrentHitTab...
R/NucleotideOverlap.R#L 448       #             FeatureRepresentatio...
R/NucleotideOverlap.R#L 449       #             FeatureRepresentatio...
R/NucleotideOverlap.R#L 450       #             LimitIndex,...
R/NucleotideOverlap.R#L 451       #             diag(ResultMatrix),...
R/NucleotideOverlap.R#L 452       #             SynNames,...
R/NucleotideOverlap.R#L 453       #             FeatureRepresentatio...
R/NucleotideOverlap.R#L 454       #             Q.Index,...
R/NucleotideOverlap.R#L 455       #             FeatureRepresentatio...
R/NucleotideOverlap.R#L 456       #             S.Index,...
R/NucleotideOverlap.R#L 457       #             FeatureRepresentatio...
R/NucleotideOverlap.R#L 458       if (LimitIndex) {...
R/NucleotideOverlap.R#L 465                                         ...
R/NucleotideOverlap.R#L 466                                         ...
R/NucleotideOverlap.R#L 467                                         ...
R/NucleotideOverlap.R#L 468                                         ...
R/NucleotideOverlap.R#L 469       } else {...
R/NucleotideOverlap.R#L 474                                         ...
R/NucleotideOverlap.R#L 475                                         ...
R/NucleotideOverlap.R#L 476                                         ...
R/NucleotideOverlap.R#L 477                                         ...
R/NucleotideOverlap.R#L 478                                         ...
R/NucleotideOverlap.R#L 479                                         ...
R/NucleotideOverlap.R#L 480                                         ...
R/NucleotideOverlap.R#L 481       }...
R/NucleotideOverlap.R#L 482       ######...
R/NucleotideOverlap.R#L 483       # Collect the starts and stops for...
R/NucleotideOverlap.R#L 484       # Collect indices as well...
R/NucleotideOverlap.R#L 485       ######...
R/NucleotideOverlap.R#L 486       HitWidths <- CurrentHitTable[, "wi...
R/NucleotideOverlap.R#L 487       Q.HitStarts <- CurrentHitTable[, "...
R/NucleotideOverlap.R#L 488       S.HitStarts <- CurrentHitTable[, "...
R/NucleotideOverlap.R#L 489       Q.HitEnds <- Q.HitStarts + HitWidt...
R/NucleotideOverlap.R#L 490       S.HitEnds <- S.HitStarts + HitWidt...
R/NucleotideOverlap.R#L 491       Strand <- CurrentHitTable[, "stran...
R/NucleotideOverlap.R#L 492       QHI <- CurrentHitTable[, "index1"]...
R/NucleotideOverlap.R#L 493       SHI <- CurrentHitTable[, "index2"]...
R/NucleotideOverlap.R#L 494       for (i in seq_along(HitWidths)) {...
R/NucleotideOverlap.R#L 496           S.HitStarts[i] <- CurrentHitTa...
R/NucleotideOverlap.R#L 497           S.HitEnds[i] <- CurrentHitTabl...
R/NucleotideOverlap.R#L 499           S.HitStarts[i] <- CurrentHitTa...
R/NucleotideOverlap.R#L 500           S.HitEnds[i] <- CurrentHitTabl...
R/NucleotideOverlap.R#L 502       }...
R/NucleotideOverlap.R#L 503       ######...
R/NucleotideOverlap.R#L 504       # Record a query matrix for every ...
R/NucleotideOverlap.R#L 505       # contains:...
R/NucleotideOverlap.R#L 506       # the gene index and hit index in ...
R/NucleotideOverlap.R#L 507       # modifies the hit boundaries IN T...
R/NucleotideOverlap.R#L 508       # records the distances between th...
R/NucleotideOverlap.R#L 509       # the strand for the gene in the q...
R/NucleotideOverlap.R#L 510       ######...
R/NucleotideOverlap.R#L 511       QueryMatrix <- matrix(NA_integer_,...
R/NucleotideOverlap.R#L 514       # return(list(CurrentHitTable,...
R/NucleotideOverlap.R#L 515       #             FeatureRepresentatio...
R/NucleotideOverlap.R#L 516       #             Q.Index,...
R/NucleotideOverlap.R#L 517       #             S.Index))...
R/NucleotideOverlap.R#L 518       HitCounter <- 1L...
R/NucleotideOverlap.R#L 519       AddCounter <- 1L...
R/NucleotideOverlap.R#L 520       DimLimit <- nrow(CurrentHitTable) ...
R/NucleotideOverlap.R#L 521       DimAdjust <- 2L...
R/NucleotideOverlap.R#L 522       ...
R/NucleotideOverlap.R#L 523       # return(list(Q.Start,...
R/NucleotideOverlap.R#L 524       #             Q.Stop,...
R/NucleotideOverlap.R#L 525       #             QG.Strand,...
R/NucleotideOverlap.R#L 526       #             Q.Index,...
R/NucleotideOverlap.R#L 527       #             S.Start,...
R/NucleotideOverlap.R#L 528       #             S.Stop,...
R/NucleotideOverlap.R#L 529       #             SG.Strand,...
R/NucleotideOverlap.R#L 530       #             S.Index,...
R/NucleotideOverlap.R#L 531       #             SHI))...
R/NucleotideOverlap.R#L 532       ...
R/NucleotideOverlap.R#L 533       for (z1 in seq_along(Q.Start)) {...
R/NucleotideOverlap.R#L 552           # not the first gene...
R/NucleotideOverlap.R#L 553           # not the first hit...
R/NucleotideOverlap.R#L 554           if (Q.Start[z1] < Q.Stop[z1 - ...
R/NucleotideOverlap.R#L 562               # gene and hit are in the ...
R/NucleotideOverlap.R#L 563               # gene and previous gene a...
R/NucleotideOverlap.R#L 564               AvailableReRegisters <- QH...
R/NucleotideOverlap.R#L 565               if (sum(AvailableReRegiste...
R/NucleotideOverlap.R#L 569                   HitCounter <- TempHit...
R/NucleotideOverlap.R#L 571               } # else do nothing, no hi...
R/NucleotideOverlap.R#L 573           } # else do nothing - start of...
R/NucleotideOverlap.R#L 577           ######...
R/NucleotideOverlap.R#L 578           # interrogation loop, dependin...
R/NucleotideOverlap.R#L 579           # and where the current gene i...
R/NucleotideOverlap.R#L 580           # either go to the next hit (H...
R/NucleotideOverlap.R#L 581           # or...
R/NucleotideOverlap.R#L 582           # go to the next gene (break)...
R/NucleotideOverlap.R#L 583           # AddCounter tells the loop wh...
R/NucleotideOverlap.R#L 584           # the initialized QueryMatrix,...
R/NucleotideOverlap.R#L 585           ######...
R/NucleotideOverlap.R#L 586           ...
R/NucleotideOverlap.R#L 587           if (Q.HitEnds[HitCounter] < Q....
R/NucleotideOverlap.R#L 588               QHI[HitCounter] == Q.Index...
R/NucleotideOverlap.R#L 593           } else if (Q.HitStarts[HitCoun...
R/NucleotideOverlap.R#L 594                      Q.HitEnds[HitCounte...
R/NucleotideOverlap.R#L 595                      Q.HitEnds[HitCounte...
R/NucleotideOverlap.R#L 596                      QHI[HitCounter] == ...
R/NucleotideOverlap.R#L 611               S.NucPositionR <- S.HitEnd...
R/NucleotideOverlap.R#L 612               S.NucPositionL <- S.HitEnd...
R/NucleotideOverlap.R#L 614               S.NucPositionL <- S.HitSta...
R/NucleotideOverlap.R#L 615               S.NucPositionR <- S.HitSta...
R/NucleotideOverlap.R#L 620                                         ...
R/NucleotideOverlap.R#L 621                                         ...
R/NucleotideOverlap.R#L 622                                         ...
R/NucleotideOverlap.R#L 623                                         ...
R/NucleotideOverlap.R#L 624                                         ...
R/NucleotideOverlap.R#L 625                                         ...
R/NucleotideOverlap.R#L 626                                         ...
R/NucleotideOverlap.R#L 628               QueryMatrix <- cbind(Query...
R/NucleotideOverlap.R#L 629                                    matri...
R/NucleotideOverlap.R#L 630                                         ...
R/NucleotideOverlap.R#L 631                                         ...
R/NucleotideOverlap.R#L 632               DimLimit <- ncol(QueryMatr...
R/NucleotideOverlap.R#L 633               DimAdjust <- DimAdjust * 2...
R/NucleotideOverlap.R#L 639           } else if (Q.HitStarts[HitCoun...
R/NucleotideOverlap.R#L 640                      Q.HitEnds[HitCounte...
R/NucleotideOverlap.R#L 641                      QHI[HitCounter] == ...
R/NucleotideOverlap.R#L 655                                         ...
R/NucleotideOverlap.R#L 656                                         ...
R/NucleotideOverlap.R#L 657                                         ...
R/NucleotideOverlap.R#L 658                                         ...
R/NucleotideOverlap.R#L 659                                         ...
R/NucleotideOverlap.R#L 660                                         ...
R/NucleotideOverlap.R#L 661                                         ...
R/NucleotideOverlap.R#L 663               QueryMatrix <- cbind(Query...
R/NucleotideOverlap.R#L 664                                    matri...
R/NucleotideOverlap.R#L 665                                         ...
R/NucleotideOverlap.R#L 666                                         ...
R/NucleotideOverlap.R#L 667               DimLimit <- ncol(QueryMatr...
R/NucleotideOverlap.R#L 668               DimAdjust <- DimAdjust * 2...
R/NucleotideOverlap.R#L 674           } else if (Q.HitStarts[HitCoun...
R/NucleotideOverlap.R#L 675                      Q.HitStarts[HitCoun...
R/NucleotideOverlap.R#L 676                      Q.HitEnds[HitCounte...
R/NucleotideOverlap.R#L 677                      QHI[HitCounter] == ...
R/NucleotideOverlap.R#L 688               S.NucPositionL <- S.HitSta...
R/NucleotideOverlap.R#L 689               S.NucPositionR <- S.HitSta...
R/NucleotideOverlap.R#L 691               S.NucPositionR <- S.HitEnd...
R/NucleotideOverlap.R#L 692               S.NucPositionL <- S.HitEnd...
R/NucleotideOverlap.R#L 696                                         ...
R/NucleotideOverlap.R#L 697                                         ...
R/NucleotideOverlap.R#L 698                                         ...
R/NucleotideOverlap.R#L 699                                         ...
R/NucleotideOverlap.R#L 700                                         ...
R/NucleotideOverlap.R#L 701                                         ...
R/NucleotideOverlap.R#L 702                                         ...
R/NucleotideOverlap.R#L 704               QueryMatrix <- cbind(Query...
R/NucleotideOverlap.R#L 705                                    matri...
R/NucleotideOverlap.R#L 706                                         ...
R/NucleotideOverlap.R#L 707                                         ...
R/NucleotideOverlap.R#L 708               DimLimit <- ncol(QueryMatr...
R/NucleotideOverlap.R#L 709               DimAdjust <- DimAdjust * 2...
R/NucleotideOverlap.R#L 714           } else if (Q.HitStarts[HitCoun...
R/NucleotideOverlap.R#L 715                      Q.HitEnds[HitCounte...
R/NucleotideOverlap.R#L 716                      QHI[HitCounter] == ...
R/NucleotideOverlap.R#L 729               S.NucPositionL <- S.HitSta...
R/NucleotideOverlap.R#L 730               S.NucPositionR <- S.NucPos...
R/NucleotideOverlap.R#L 732               S.NucPositionR <- S.HitEnd...
R/NucleotideOverlap.R#L 733               S.NucPositionL <- S.NucPos...
R/NucleotideOverlap.R#L 737                                         ...
R/NucleotideOverlap.R#L 738                                         ...
R/NucleotideOverlap.R#L 739                                         ...
R/NucleotideOverlap.R#L 740                                         ...
R/NucleotideOverlap.R#L 741                                         ...
R/NucleotideOverlap.R#L 742                                         ...
R/NucleotideOverlap.R#L 743                                         ...
R/NucleotideOverlap.R#L 745               QueryMatrix <- cbind(Query...
R/NucleotideOverlap.R#L 746                                    matri...
R/NucleotideOverlap.R#L 747                                         ...
R/NucleotideOverlap.R#L 748                                         ...
R/NucleotideOverlap.R#L 749               DimLimit <- ncol(QueryMatr...
R/NucleotideOverlap.R#L 750               DimAdjust <- DimAdjust * 2...
R/NucleotideOverlap.R#L 755           } else if (Q.HitStarts[HitCoun...
R/NucleotideOverlap.R#L 756                      QHI[HitCounter] == ...
R/NucleotideOverlap.R#L 761           } else if (QHI[HitCounter] > Q...
R/NucleotideOverlap.R#L 764           } else if (QHI[HitCounter] < Q...
R/NucleotideOverlap.R#L 768           } # end of else if conditional...
R/NucleotideOverlap.R#L 770       } # end for loop through genes...
R/NucleotideOverlap.R#L 771       if (Verbose) {...
R/NucleotideOverlap.R#L 774                           value = TotalC...
R/NucleotideOverlap.R#L 775       }...
R/NucleotideOverlap.R#L 776       QueryMatrix <- t(QueryMatrix)...
R/NucleotideOverlap.R#L 777       colnames(QueryMatrix) <- c("Curren...
R/NucleotideOverlap.R#L 778                                  "QueryN...
R/NucleotideOverlap.R#L 779                                  "QueryN...
R/NucleotideOverlap.R#L 780                                  "Subjec...
R/NucleotideOverlap.R#L 781                                  "Subjec...
R/NucleotideOverlap.R#L 782                                  "Subjec...
R/NucleotideOverlap.R#L 783                                  "QueryI...
R/NucleotideOverlap.R#L 784                                  "Subjec...
R/NucleotideOverlap.R#L 785                                  )...
R/NucleotideOverlap.R#L 786       # return(QueryMatrix)...
R/NucleotideOverlap.R#L 787       ######...
R/NucleotideOverlap.R#L 788       # Remove unfilled extra rows...
R/NucleotideOverlap.R#L 789       ######...
R/NucleotideOverlap.R#L 790       QueryMatrix <- QueryMatrix[apply(Q...
R/NucleotideOverlap.R#L 791                                        1...
R/NucleotideOverlap.R#L 792                                        f...
R/NucleotideOverlap.R#L 793                                  ,...
R/NucleotideOverlap.R#L 794                                  drop = ...
R/NucleotideOverlap.R#L 795       if (dim(QueryMatrix)[1] == 0L) {...
R/NucleotideOverlap.R#L 797                                nrow = 1L...
R/NucleotideOverlap.R#L 798                                ncol = 7L...
R/NucleotideOverlap.R#L 802       } else {...
R/NucleotideOverlap.R#L 809                                         ...
R/NucleotideOverlap.R#L 810                                         ...
R/NucleotideOverlap.R#L 811                                         ...
R/NucleotideOverlap.R#L 812                                         ...
R/NucleotideOverlap.R#L 813                                         ...
R/NucleotideOverlap.R#L 814                                    ,...
R/NucleotideOverlap.R#L 815                                    drop ...
R/NucleotideOverlap.R#L 838           ######...
R/NucleotideOverlap.R#L 839           # Loop through the subject gen...
R/NucleotideOverlap.R#L 840           ######...
R/NucleotideOverlap.R#L 841           while (HitCounter <= length(Qu...
R/NucleotideOverlap.R#L 844               # Hit ends before current ...
R/NucleotideOverlap.R#L 845               HitCounter <- HitCounter +...
R/NucleotideOverlap.R#L 847                        S.HitEnds[HitCoun...
R/NucleotideOverlap.R#L 848                        S.HitEnds[HitCoun...
R/NucleotideOverlap.R#L 849                        SubjectHitIndex[H...
R/NucleotideOverlap.R#L 850               # Hit overlaps left bound ...
R/NucleotideOverlap.R#L 851               CurrentGene <- z2...
R/NucleotideOverlap.R#L 852               QueryGenePosition <- Query...
R/NucleotideOverlap.R#L 853               CurrentQueryIndex <- Query...
R/NucleotideOverlap.R#L 854               CurrentSubjectIndex <- Sub...
R/NucleotideOverlap.R#L 855               TrimLeft <- S.Start[z2] - ...
R/NucleotideOverlap.R#L 856               ExactOverLap <- S.HitEnds[...
R/NucleotideOverlap.R#L 857               SubjectHitLeft <- S.HitSta...
R/NucleotideOverlap.R#L 858               SubjectHitRight <- S.HitEn...
R/NucleotideOverlap.R#L 859               QueryHitLeft <- Q.HitStart...
R/NucleotideOverlap.R#L 860               QueryHitRight <- Q.HitEnds...
R/NucleotideOverlap.R#L 861               # Add to vector !...
R/NucleotideOverlap.R#L 862               OverLapMatrix[, AddCounter...
R/NucleotideOverlap.R#L 863                                         ...
R/NucleotideOverlap.R#L 864                                         ...
R/NucleotideOverlap.R#L 865                                         ...
R/NucleotideOverlap.R#L 866                                         ...
R/NucleotideOverlap.R#L 867                                         ...
R/NucleotideOverlap.R#L 868                                         ...
R/NucleotideOverlap.R#L 869                                         ...
R/NucleotideOverlap.R#L 870                                         ...
R/NucleotideOverlap.R#L 871               if (AddCounter >= DimLimit...
R/NucleotideOverlap.R#L 873                                        m...
R/NucleotideOverlap.R#L 874                                         ...
R/NucleotideOverlap.R#L 875                                         ...
R/NucleotideOverlap.R#L 878               }...
R/NucleotideOverlap.R#L 879               AddCounter <- AddCounter +...
R/NucleotideOverlap.R#L 880               HitCounter <- HitCounter +...
R/NucleotideOverlap.R#L 882                        S.HitEnds[HitCoun...
R/NucleotideOverlap.R#L 883                        SubjectHitIndex[H...
R/NucleotideOverlap.R#L 884               # Hit occurs entirely with...
R/NucleotideOverlap.R#L 885               CurrentGene <- z2...
R/NucleotideOverlap.R#L 886               QueryGenePosition <- Query...
R/NucleotideOverlap.R#L 887               ExactOverLap <- S.HitEnds[...
R/NucleotideOverlap.R#L 888               CurrentQueryIndex <- Query...
R/NucleotideOverlap.R#L 889               CurrentSubjectIndex <- Sub...
R/NucleotideOverlap.R#L 890               SubjectHitLeft <- S.HitSta...
R/NucleotideOverlap.R#L 891               SubjectHitRight <- S.HitEn...
R/NucleotideOverlap.R#L 892               QueryHitLeft <- Q.HitStart...
R/NucleotideOverlap.R#L 893               QueryHitRight <- Q.HitEnds...
R/NucleotideOverlap.R#L 894               # Add to vector !...
R/NucleotideOverlap.R#L 895               OverLapMatrix[, AddCounter...
R/NucleotideOverlap.R#L 896                                         ...
R/NucleotideOverlap.R#L 897                                         ...
R/NucleotideOverlap.R#L 898                                         ...
R/NucleotideOverlap.R#L 899                                         ...
R/NucleotideOverlap.R#L 900                                         ...
R/NucleotideOverlap.R#L 901                                         ...
R/NucleotideOverlap.R#L 902                                         ...
R/NucleotideOverlap.R#L 903                                         ...
R/NucleotideOverlap.R#L 904               if (AddCounter >= DimLimit...
R/NucleotideOverlap.R#L 906                                        m...
R/NucleotideOverlap.R#L 907                                         ...
R/NucleotideOverlap.R#L 908                                         ...
R/NucleotideOverlap.R#L 911               }...
R/NucleotideOverlap.R#L 912               AddCounter <- AddCounter +...
R/NucleotideOverlap.R#L 913               HitCounter <- HitCounter +...
R/NucleotideOverlap.R#L 915                        S.HitStarts[HitCo...
R/NucleotideOverlap.R#L 916                        S.HitEnds[HitCoun...
R/NucleotideOverlap.R#L 917                        SubjectHitIndex[H...
R/NucleotideOverlap.R#L 918               # Hit overlaps right bound...
R/NucleotideOverlap.R#L 919               # Stay on the current hit ...
R/NucleotideOverlap.R#L 920               CurrentGene <- z2...
R/NucleotideOverlap.R#L 921               QueryGenePosition <- Query...
R/NucleotideOverlap.R#L 922               ExactOverLap <- S.Stop[z2]...
R/NucleotideOverlap.R#L 923               CurrentQueryIndex <- Query...
R/NucleotideOverlap.R#L 924               CurrentSubjectIndex <- Sub...
R/NucleotideOverlap.R#L 925               TrimRight <- S.HitEnds[Hit...
R/NucleotideOverlap.R#L 926               SubjectHitLeft <- S.HitSta...
R/NucleotideOverlap.R#L 927               SubjectHitRight <- S.HitEn...
R/NucleotideOverlap.R#L 928               QueryHitLeft <- Q.HitStart...
R/NucleotideOverlap.R#L 929               QueryHitRight <- Q.HitEnds...
R/NucleotideOverlap.R#L 930               # Add to vector !...
R/NucleotideOverlap.R#L 931               OverLapMatrix[, AddCounter...
R/NucleotideOverlap.R#L 932                                         ...
R/NucleotideOverlap.R#L 933                                         ...
R/NucleotideOverlap.R#L 934                                         ...
R/NucleotideOverlap.R#L 935                                         ...
R/NucleotideOverlap.R#L 936                                         ...
R/NucleotideOverlap.R#L 937                                         ...
R/NucleotideOverlap.R#L 938                                         ...
R/NucleotideOverlap.R#L 939                                         ...
R/NucleotideOverlap.R#L 940               if (AddCounter >= DimLimit...
R/NucleotideOverlap.R#L 942                                        m...
R/NucleotideOverlap.R#L 943                                         ...
R/NucleotideOverlap.R#L 944                                         ...
R/NucleotideOverlap.R#L 947               }...
R/NucleotideOverlap.R#L 948               AddCounter <- AddCounter +...
R/NucleotideOverlap.R#L 949               break...
R/NucleotideOverlap.R#L 951                        S.HitEnds[HitCoun...
R/NucleotideOverlap.R#L 952                        SubjectHitIndex[H...
R/NucleotideOverlap.R#L 953               # Hit eclipses current sub...
R/NucleotideOverlap.R#L 954               CurrentGene <- z2...
R/NucleotideOverlap.R#L 955               QueryGenePosition <- Query...
R/NucleotideOverlap.R#L 956               ExactOverLap <- S.Stop[z2]...
R/NucleotideOverlap.R#L 957               CurrentQueryIndex <- Query...
R/NucleotideOverlap.R#L 958               CurrentSubjectIndex <- Sub...
R/NucleotideOverlap.R#L 959               TrimLeft <- S.Start[z2] - ...
R/NucleotideOverlap.R#L 960               TrimRight <- S.HitEnds[Hit...
R/NucleotideOverlap.R#L 961               SubjectHitLeft <- S.HitSta...
R/NucleotideOverlap.R#L 962               SubjectHitRight <- S.HitEn...
R/NucleotideOverlap.R#L 963               QueryHitLeft <- Q.HitStart...
R/NucleotideOverlap.R#L 964               QueryHitRight <- Q.HitEnds...
R/NucleotideOverlap.R#L 965               # Add to vector !...
R/NucleotideOverlap.R#L 966               OverLapMatrix[, AddCounter...
R/NucleotideOverlap.R#L 967                                         ...
R/NucleotideOverlap.R#L 968                                         ...
R/NucleotideOverlap.R#L 969                                         ...
R/NucleotideOverlap.R#L 970                                         ...
R/NucleotideOverlap.R#L 971                                         ...
R/NucleotideOverlap.R#L 972                                         ...
R/NucleotideOverlap.R#L 973                                         ...
R/NucleotideOverlap.R#L 974                                         ...
R/NucleotideOverlap.R#L 975               if (AddCounter >= DimLimit...
R/NucleotideOverlap.R#L 977                                        m...
R/NucleotideOverlap.R#L 978                                         ...
R/NucleotideOverlap.R#L 979                                         ...
R/NucleotideOverlap.R#L 982               }...
R/NucleotideOverlap.R#L 983               AddCounter <- AddCounter +...
R/NucleotideOverlap.R#L 984               break...
R/NucleotideOverlap.R#L 986               # Hit occurs after current...
R/NucleotideOverlap.R#L 987               break...
R/NucleotideOverlap.R#L 989               # The indices do not match...
R/NucleotideOverlap.R#L 990               HitCounter <- HitCounter +...
R/NucleotideOverlap.R#L 992               # if you have outpaced the...
R/NucleotideOverlap.R#L 993               break...
R/NucleotideOverlap.R#L 995           }...
R/NucleotideOverlap.R#L 997       }...
R/NucleotideOverlap.R#L 998       ...
R/NucleotideOverlap.R#L 999       OverLapMatrix <- t(OverLapMatrix)...
R/NucleotideOverlap.R#L1000       ######...
R/NucleotideOverlap.R#L1001       # Remove empty extra rows...
R/NucleotideOverlap.R#L1002       ######...
R/NucleotideOverlap.R#L1003       OverLapMatrix <- OverLapMatrix[app...
R/NucleotideOverlap.R#L1004                                         ...
R/NucleotideOverlap.R#L1005                                         ...
R/NucleotideOverlap.R#L1006                                      ,...
R/NucleotideOverlap.R#L1007                                      dro...
R/NucleotideOverlap.R#L1008       ######...
R/NucleotideOverlap.R#L1009       # If the overlap matrix is empty, ...
R/NucleotideOverlap.R#L1010       # If it is not, sum up the overlap...
R/NucleotideOverlap.R#L1011       # Select the smallest distances fo...
R/NucleotideOverlap.R#L1012       ######...
R/NucleotideOverlap.R#L1013       if (dim(OverLapMatrix)[1] == 0L) {...
R/NucleotideOverlap.R#L1018                                nrow = 1L...
R/NucleotideOverlap.R#L1019                                ncol = 11...
R/NucleotideOverlap.R#L1020       } else if (dim(OverLapMatrix)[1] >...
R/NucleotideOverlap.R#L1022                                         ...
R/NucleotideOverlap.R#L1023                                         ...
R/NucleotideOverlap.R#L1024                                         ...
R/NucleotideOverlap.R#L1025                                        ,...
R/NucleotideOverlap.R#L1026                                        d...
R/NucleotideOverlap.R#L1028                                ncol = 11...
R/NucleotideOverlap.R#L1029                                nrow = nr...
R/NucleotideOverlap.R#L1038           while (Row <= nrow(OverLapMatr...
R/NucleotideOverlap.R#L1040               break...
R/NucleotideOverlap.R#L1043               break...
R/NucleotideOverlap.R#L1046               break...
R/NucleotideOverlap.R#L1049               break...
R/NucleotideOverlap.R#L1052           }...
R/NucleotideOverlap.R#L1053           ...
R/NucleotideOverlap.R#L1054           z5 <- CondenseCount:(Row - 1L)...
R/NucleotideOverlap.R#L1055           OutPutMatrix[RowCount, ] <- c(...
R/NucleotideOverlap.R#L1066           RowCount <- RowCount + 1L...
R/NucleotideOverlap.R#L1067           CondenseCount <- CondenseCount...
R/NucleotideOverlap.R#L1070                                         ...
R/NucleotideOverlap.R#L1071                                         ...
R/NucleotideOverlap.R#L1072                                      ,...
R/NucleotideOverlap.R#L1073                                      dro...
R/NucleotideOverlap.R#L1074       }...
R/NucleotideOverlap.R#L1075       OutPutMatrix <- OutPutMatrix[order...
R/NucleotideOverlap.R#L1076                                         ...
R/NucleotideOverlap.R#L1077                                         ...
R/NucleotideOverlap.R#L1078                                    ,...
R/NucleotideOverlap.R#L1079                                    drop ...
R/NucleotideOverlap.R#L1080       ...
R/NucleotideOverlap.R#L1081       colnames(OutPutMatrix) <- c("Query...
R/NucleotideOverlap.R#L1082                                   "Subje...
R/NucleotideOverlap.R#L1083                                   "Exact...
R/NucleotideOverlap.R#L1084                                   "Query...
R/NucleotideOverlap.R#L1085                                   "Subje...
R/NucleotideOverlap.R#L1086                                   "QLeft...
R/NucleotideOverlap.R#L1087                                   "QRigh...
R/NucleotideOverlap.R#L1088                                   "SLeft...
R/NucleotideOverlap.R#L1089                                   "SRigh...
R/NucleotideOverlap.R#L1090                                   "MaxKm...
R/NucleotideOverlap.R#L1091                                   "Total...
R/NucleotideOverlap.R#L1092       colnames(OverLapMatrix) <- c("Quer...
R/NucleotideOverlap.R#L1093                                    "Subj...
R/NucleotideOverlap.R#L1094                                    "Exac...
R/NucleotideOverlap.R#L1095                                    "Quer...
R/NucleotideOverlap.R#L1096                                    "Subj...
R/NucleotideOverlap.R#L1097                                    "QLef...
R/NucleotideOverlap.R#L1098                                    "QRig...
R/NucleotideOverlap.R#L1099                                    "SLef...
R/NucleotideOverlap.R#L1100                                    "SRig...
R/NucleotideOverlap.R#L1101       # return(list(OverLapMatrix,...
R/NucleotideOverlap.R#L1102       #             OutPutMatrix))...
R/NucleotideOverlap.R#L1103       # QueryStartDisplacement <- ifelse...
R/NucleotideOverlap.R#L1104       #                                 ...
R/NucleotideOverlap.R#L1105       #                                 ...
R/NucleotideOverlap.R#L1106       # QueryStopDisplacement <- ifelse(...
R/NucleotideOverlap.R#L1107       #                                 ...
R/NucleotideOverlap.R#L1108       #                                 ...
R/NucleotideOverlap.R#L1109       # SubjectStartDisplacement <- ifel...
R/NucleotideOverlap.R#L1110       #                                 ...
R/NucleotideOverlap.R#L1111       #                                 ...
R/NucleotideOverlap.R#L1112       # SubjectStopDisplacement <- ifels...
R/NucleotideOverlap.R#L1113       #                                 ...
R/NucleotideOverlap.R#L1114       #                                 ...
R/NucleotideOverlap.R#L1115       # DisplacementMatrix <- cbind(Quer...
R/NucleotideOverlap.R#L1116       #                             Quer...
R/NucleotideOverlap.R#L1117       #                             Subj...
R/NucleotideOverlap.R#L1118       #                             Subj...
R/NucleotideOverlap.R#L1119       ...
R/NucleotideOverlap.R#L1120       if (Verbose) {...
R/NucleotideOverlap.R#L1123                           value = TotalC...
R/NucleotideOverlap.R#L1124       }...
R/NucleotideOverlap.R#L1125       if (nrow(OutPutMatrix) == 1L &...
R/NucleotideOverlap.R#L1126           all(is.na(OutPutMatrix))) {...
R/NucleotideOverlap.R#L1130       }...
R/NucleotideOverlap.R#L1131       ResultMatrix[m1, m2] <- list(OutPu...
R/NucleotideOverlap.R#L1132       ResultMatrix[m2, m1] <- list(OverL...
R/NucleotideOverlap.R#L1134   } # end of rows loop...
R/NucleotideOverlap.R#L1135   if (Verbose) {...
R/NucleotideOverlap.R#L1140   }...
R/NucleotideOverlap.R#L1141   dimnames(ResultMatrix) <- dimnames(Syn...
R/NucleotideOverlap.R#L1142   class(ResultMatrix) <- "LinkedPairs"...
R/NucleotideOverlap.R#L1143   attr(ResultMatrix, "GeneCalls") <- Fea...
R/NucleotideOverlap.R#L1144   return(ResultMatrix)...
R/PairSummaries.R#L   6                           DBPATH,...
R/PairSummaries.R#L   7                           PIDs = FALSE,...
R/PairSummaries.R#L   8                           Score = FALSE,...
R/PairSummaries.R#L   9                           IgnoreDefaultS...
R/PairSummaries.R#L  10                           Verbose = FALS...
R/PairSummaries.R#L  11                           Model = "Gener...
R/PairSummaries.R#L  12                           DefaultTransla...
R/PairSummaries.R#L  13                           AcceptContigNa...
R/PairSummaries.R#L  14                           OffSetsAllowed...
R/PairSummaries.R#L  15                           # ExpandBlocks...
R/PairSummaries.R#L  16                           Storage = 1,...
R/PairSummaries.R#L  17                           # AAMat = "BLO...
R/PairSummaries.R#L  18                           ...) {...
R/PairSummaries.R#L  19   if (Verbose) {...
R/PairSummaries.R#L  22   }...
R/PairSummaries.R#L  23   ...
R/PairSummaries.R#L  24   ###### -- Overhead checking ----------...
R/PairSummaries.R#L  25   ...
R/PairSummaries.R#L  26   # if (length(GeneCalls) != ncol(Synten...
R/PairSummaries.R#L  27   #   stop ("LinkedPairs object and gene...
R/PairSummaries.R#L  28   # }...
R/PairSummaries.R#L  29   if (!("DECIPHER" %in% .packages())) {...
R/PairSummaries.R#L  31   }...
R/PairSummaries.R#L  32   if (!is(SyntenyLinks, "LinkedPairs")) ...
R/PairSummaries.R#L  34   }...
R/PairSummaries.R#L  35   if (any(OffSetsAllowed <= 1L)) {...
R/PairSummaries.R#L  37   }...
R/PairSummaries.R#L  38   if (Storage < 0) {...
R/PairSummaries.R#L  40   } else {...
R/PairSummaries.R#L  42   }...
R/PairSummaries.R#L  43   Size <- dim(SyntenyLinks)[1]...
R/PairSummaries.R#L  44   # GCallClasses <- sapply(GeneCalls,...
R/PairSummaries.R#L  45   #                        function(x) c...
R/PairSummaries.R#L  46   #                        simplify = TR...
R/PairSummaries.R#L  47   #                        USE.NAMES = F...
R/PairSummaries.R#L  48   # if (any(GCallClasses == "GRanges")) ...
R/PairSummaries.R#L  49   #   warning("GRanges objects only supp...
R/PairSummaries.R#L  50   # }...
R/PairSummaries.R#L  51   ...
R/PairSummaries.R#L  52   if (length(OffSetsAllowed) > 0L) {...
R/PairSummaries.R#L  54   }...
R/PairSummaries.R#L  55   if (is.null(OffSetsAllowed)) {...
R/PairSummaries.R#L  57   }...
R/PairSummaries.R#L  58   # if (!is.null(ExpandBlocks)) {...
R/PairSummaries.R#L  59   #   # set logical to enter gap fill / ...
R/PairSummaries.R#L  60   #   AttemptExpansion <- TRUE...
R/PairSummaries.R#L  61   #   if (length(ExpandBlocks) > 3L) {...
R/PairSummaries.R#L  62   #     stop ("ExpandBlocks argument req...
R/PairSummaries.R#L  63   #   }...
R/PairSummaries.R#L  64   #   if (!is.numeric(ExpandBlocks)) {...
R/PairSummaries.R#L  65   #     stop ("ExpandBlocks criteria mus...
R/PairSummaries.R#L  66   #   }...
R/PairSummaries.R#L  67   #   if (any(ExpandBlocks[2:3] > 1 |...
R/PairSummaries.R#L  68   #           ExpandBlocks[2:3] < 0)) {...
R/PairSummaries.R#L  69   #     stop ("ExpandBlocks criteria 2 a...
R/PairSummaries.R#L  70   #   }...
R/PairSummaries.R#L  71   #   GapSpan <- as.integer(ExpandBlocks...
R/PairSummaries.R#L  72   #   ExpandTolerance <- ExpandBlocks[2L...
R/PairSummaries.R#L  73   #   ExpandLimit <- ExpandBlocks[3L]...
R/PairSummaries.R#L  74   # } else {...
R/PairSummaries.R#L  75   #   AttemptExpansion <- FALSE...
R/PairSummaries.R#L  76   #   # set logical to not enter gap fil...
R/PairSummaries.R#L  77   # }...
R/PairSummaries.R#L  78   ...
R/PairSummaries.R#L  79   GeneCalls <- attr(SyntenyLinks, "GeneC...
R/PairSummaries.R#L  80   ...
R/PairSummaries.R#L  81   ###### -- argument passing -----------...
R/PairSummaries.R#L  82   # pass arguments through the ellipsis ...
R/PairSummaries.R#L  83   # AlignTranslation,...
R/PairSummaries.R#L  84   # AlignSeqs,...
R/PairSummaries.R#L  85   # or DistanceMatrix...
R/PairSummaries.R#L  86   # if a user supplies an argument that ...
R/PairSummaries.R#L  87   # ignore it...
R/PairSummaries.R#L  88   ...
R/PairSummaries.R#L  89   # print(AAMat)...
R/PairSummaries.R#L  90   # if (!is(object = AAMat,...
R/PairSummaries.R#L  91   #         class2 = "array")) {...
R/PairSummaries.R#L  92   #   AAMat <- get(data(list = AAMat,...
R/PairSummaries.R#L  93   #                                  env...
R/PairSummaries.R#L  94   #                                  pac...
R/PairSummaries.R#L  95   # }...
R/PairSummaries.R#L  96   # NTMat <- diag(length(DNA_ALPHABET))...
R/PairSummaries.R#L  97   # dimnames(NTMat) <- list(DNA_ALPHABET...
R/PairSummaries.R#L  98   #                         DNA_ALPHABET...
R/PairSummaries.R#L  99   ...
R/PairSummaries.R#L 100   # step one, parse to different functio...
R/PairSummaries.R#L 101   Args <- list(...)...
R/PairSummaries.R#L 102   ArgNames <- names(Args)...
R/PairSummaries.R#L 103   ForbiddenArguments <- c("verbose",...
R/PairSummaries.R#L 104                           "includeTermin...
R/PairSummaries.R#L 105                           "type",...
R/PairSummaries.R#L 106                           "pattern",...
R/PairSummaries.R#L 107                           "subject",...
R/PairSummaries.R#L 108                           "myXStringSet"...
R/PairSummaries.R#L 109                           "readingFrame"...
R/PairSummaries.R#L 110                           "sense",...
R/PairSummaries.R#L 111                           "direction",...
R/PairSummaries.R#L 112                           "geneticCode")...
R/PairSummaries.R#L 113   # return(list(Args,...
R/PairSummaries.R#L 114   #             ArgNames))...
R/PairSummaries.R#L 115   ...
R/PairSummaries.R#L 116   if (any(ForbiddenArguments %in% ArgNam...
R/PairSummaries.R#L 120   }...
R/PairSummaries.R#L 121   # align with only align profiles...
R/PairSummaries.R#L 122   PossibleAPArgs <- unique(c(names(forma...
R/PairSummaries.R#L 123   m <- match(x = PossibleAPArgs,...
R/PairSummaries.R#L 124              table = ArgNames)...
R/PairSummaries.R#L 125   m <- m[!is.na(m)]...
R/PairSummaries.R#L 126   if (length(m) > 0L) {...
R/PairSummaries.R#L 129   } else {...
R/PairSummaries.R#L 131   }...
R/PairSummaries.R#L 132   ...
R/PairSummaries.R#L 133   PossibleDMArgs <- names(formals(Distan...
R/PairSummaries.R#L 134   m <- match(x = PossibleDMArgs,...
R/PairSummaries.R#L 135              table = ArgNames)...
R/PairSummaries.R#L 136   m <- m[!is.na(m)]...
R/PairSummaries.R#L 137   if (length(m) > 0L) {...
R/PairSummaries.R#L 140   } else {...
R/PairSummaries.R#L 142   }...
R/PairSummaries.R#L 143   # lifted almost whole cloth from Align...
R/PairSummaries.R#L 144   # args <- list(...)...
R/PairSummaries.R#L 145   # n <- names(args)...
R/PairSummaries.R#L 146   # m <- character(length(n))...
R/PairSummaries.R#L 147   # for (i in seq_along(n)) {...
R/PairSummaries.R#L 148   #   m[i] <- match.arg(n[i],...
R/PairSummaries.R#L 149   #                     names(c(formals(...
R/PairSummaries.R#L 150   #                             formals(...
R/PairSummaries.R#L 151   #                             formals(...
R/PairSummaries.R#L 152   # }...
R/PairSummaries.R#L 153   ...
R/PairSummaries.R#L 154   ###### -- subset gene calls based on t...
R/PairSummaries.R#L 155   ...
R/PairSummaries.R#L 156   if (length(GeneCalls) != nrow(SyntenyL...
R/PairSummaries.R#L 158                                  table =...
R/PairSummaries.R#L 159   }...
R/PairSummaries.R#L 160   ...
R/PairSummaries.R#L 161   ###### -- extract genomes for stuff --...
R/PairSummaries.R#L 162   ...
R/PairSummaries.R#L 163   # load in genomes and ALL extracted fe...
R/PairSummaries.R#L 164   # is hit...
R/PairSummaries.R#L 165   if (Verbose) {...
R/PairSummaries.R#L 167   }...
R/PairSummaries.R#L 168   # load in structure matrices once for ...
R/PairSummaries.R#L 169   MAT1 <- get(data("HEC_MI1",...
R/PairSummaries.R#L 170                    package = "DECIPHER",...
R/PairSummaries.R#L 171                    envir = environment()...
R/PairSummaries.R#L 172   MAT2 <- get(data("HEC_MI2",...
R/PairSummaries.R#L 173                    package = "DECIPHER",...
R/PairSummaries.R#L 174                    envir = environment()...
R/PairSummaries.R#L 175   structureMatrix <- matrix(c(0.187, -0....
R/PairSummaries.R#L 176                               -0.8, 0.56...
R/PairSummaries.R#L 177                               -0.873, -0...
R/PairSummaries.R#L 181                                         ...
R/PairSummaries.R#L 182   substitutionMatrix <- matrix(c(1.5, -2...
R/PairSummaries.R#L 183                                  -2.134,...
R/PairSummaries.R#L 184                                  -0.739,...
R/PairSummaries.R#L 185                                  -1.298,...
R/PairSummaries.R#L 186                                nrow = 4,...
R/PairSummaries.R#L 187                                dimnames ...
R/PairSummaries.R#L 188   Features01 <- Features02 <- AAStruct <...
R/PairSummaries.R#L 189                                         ...
R/PairSummaries.R#L 190   L <- length(GeneCalls)...
R/PairSummaries.R#L 191   ...
R/PairSummaries.R#L 192   Count <- 1L...
R/PairSummaries.R#L 193   while (object.size(Features01) < Stora...
R/PairSummaries.R#L 194          Count <= L) {...
R/PairSummaries.R#L 198                        identifier = name...
R/PairSummaries.R#L 199                        nameBy = "descrip...
R/PairSummaries.R#L 200                        type = "DNAString...
R/PairSummaries.R#L 201                        verbose = FALSE)...
R/PairSummaries.R#L 206       w <- which(is.na(GeneCalls[[Count]...
R/PairSummaries.R#L 207                    GeneCalls[[Count]]$Co...
R/PairSummaries.R#L 208       if (length(w) > 0) {...
R/PairSummaries.R#L 210       }...
R/PairSummaries.R#L 218       # many indices, loop through prese...
R/PairSummaries.R#L 219       # slam together at the end...
R/PairSummaries.R#L 220       Features01[[Count]] <- vector(mode...
R/PairSummaries.R#L 221                                   length...
R/PairSummaries.R#L 222       for (m3 in seq_along(PresentIndice...
R/PairSummaries.R#L 240                      recursive = FALSE)...
R/PairSummaries.R#L 250                                         ...
R/PairSummaries.R#L 259           # if collapsing must take plac...
R/PairSummaries.R#L 260           # once collapsing correct posi...
R/PairSummaries.R#L 261           remove <- vector(mode = "integ...
R/PairSummaries.R#L 262                            length = sum(...
R/PairSummaries.R#L 263           for (m4 in w) {...
R/PairSummaries.R#L 267           }...
R/PairSummaries.R#L 268           # return(list(w,...
R/PairSummaries.R#L 269           #             z2[w],...
R/PairSummaries.R#L 270           #             remove))...
R/PairSummaries.R#L 271           Features01[[Count]][[m3]][remo...
R/PairSummaries.R#L 299           Features01[[Count]][[m3]][Flip...
R/PairSummaries.R#L 301       }...
R/PairSummaries.R#L 302       Features01[[Count]] <- do.call(c,...
R/PairSummaries.R#L 303                                      Fea...
R/PairSummaries.R#L 304       ...
R/PairSummaries.R#L 306       # original implementation - pretty...
R/PairSummaries.R#L 307       # only 1 index present in gene cal...
R/PairSummaries.R#L 308       # Features01[[Count]] <- extractAt...
R/PairSummaries.R#L 309       #                                 ...
R/PairSummaries.R#L 310       #                                a...
R/PairSummaries.R#L 311       # Features01[[Count]] <- DNAString...
R/PairSummaries.R#L 312       #                                 ...
R/PairSummaries.R#L 313       ...
R/PairSummaries.R#L 314       # implementation 2 - faster, but n...
R/PairSummaries.R#L 315       # z1 <- GeneCalls[[Count]]$Range...
R/PairSummaries.R#L 316       # z2 <- unlist(z1, recursive = FAL...
R/PairSummaries.R#L 317       # z3 <- lengths(z1)...
R/PairSummaries.R#L 318       # z4 <- seq(length(z3))...
R/PairSummaries.R#L 319       # z5 <- rep(x = z4,...
R/PairSummaries.R#L 320       #           times = z3)...
R/PairSummaries.R#L 321       # FeaturePlaceHolder <- extractAt(...
R/PairSummaries.R#L 322       #                                 ...
R/PairSummaries.R#L 323       # Features01[[Count]] <- vector(mo...
R/PairSummaries.R#L 324       #                               le...
R/PairSummaries.R#L 325       # for (m4 in seq_along(z4)) {...
R/PairSummaries.R#L 326       #   w <- INITIAL:(INITIAL + z3[m4]...
R/PairSummaries.R#L 327       #   if (length(w) == 1) {...
R/PairSummaries.R#L 328       #     Features01[[Count]][[m4]] <-...
R/PairSummaries.R#L 329       #   } else {...
R/PairSummaries.R#L 330       #     Features01[[Count]][[m4]] <-...
R/PairSummaries.R#L 331       #   }...
R/PairSummaries.R#L 332       #   INITIAL <- INITIAL + z3[m4]...
R/PairSummaries.R#L 333       # }...
R/PairSummaries.R#L 334       # Features01[[Count]] <- DNAString...
R/PairSummaries.R#L 335       ...
R/PairSummaries.R#L 336       # implementation 3 - shortest poss...
R/PairSummaries.R#L 337       z1 <- unname(GeneCalls[[Count]]$Ra...
R/PairSummaries.R#L 338       z2 <- lengths(z1)...
R/PairSummaries.R#L 339       z1 <- unlist(z1,...
R/PairSummaries.R#L 340                    recursive = FALSE)...
R/PairSummaries.R#L 341       Features01[[Count]] <- extractAt(x...
R/PairSummaries.R#L 342                                        a...
R/PairSummaries.R#L 343       CollapseCount <- 0L...
R/PairSummaries.R#L 344       w <- which(z2 > 1)...
R/PairSummaries.R#L 345       if (length(w) > 0) {...
R/PairSummaries.R#L 347                          length = sum(z2...
R/PairSummaries.R#L 349           Features01[[Count]][[m4 + Coll...
R/PairSummaries.R#L 350           remove[(CollapseCount + 1L):(C...
R/PairSummaries.R#L 351           CollapseCount <- CollapseCount...
R/PairSummaries.R#L 354       }...
R/PairSummaries.R#L 355       ...
R/PairSummaries.R#L 356       FlipMe <- GeneCalls[[Count]]$Stran...
R/PairSummaries.R#L 357       if (any(FlipMe)) {...
R/PairSummaries.R#L 359       }...
R/PairSummaries.R#L 360       ...
R/PairSummaries.R#L 372       ph <- DefaultTranslationTable...
R/PairSummaries.R#L 373       phkey <- which(GeneCalls[[Count]]$...
R/PairSummaries.R#L 374                        GeneCalls[[Count]...
R/PairSummaries.R#L 375       CurrentGeneticCode <- getGeneticCo...
R/PairSummaries.R#L 376                                         ...
R/PairSummaries.R#L 377                                         ...
R/PairSummaries.R#L 378       Features02[[Count]] <- translate(x...
R/PairSummaries.R#L 379                                        g...
R/PairSummaries.R#L 380                                        i...
R/PairSummaries.R#L 381       Features02[[Count]] <- Features02[...
R/PairSummaries.R#L 382       # print(length(Features02[[Count]]...
R/PairSummaries.R#L 384       Features02[[Count]] <- vector(mode...
R/PairSummaries.R#L 386       phkey <- vector(mode = "list",...
R/PairSummaries.R#L 387                       length = length(ph...
R/PairSummaries.R#L 388       # if (Count == 2L) {...
R/PairSummaries.R#L 389       #   return(list(Features01[[Count]...
R/PairSummaries.R#L 390       #               Features02[[Count]...
R/PairSummaries.R#L 391       #               GeneCalls[[Count]]...
R/PairSummaries.R#L 392       #               ph,...
R/PairSummaries.R#L 393       #               phkey))...
R/PairSummaries.R#L 394       # }...
R/PairSummaries.R#L 395       for (m4 in seq_along(ph)) {...
R/PairSummaries.R#L 397                            GeneCalls[[Co...
R/PairSummaries.R#L 398                            GeneCalls[[Co...
R/PairSummaries.R#L 401                                         ...
R/PairSummaries.R#L 402                                         ...
R/PairSummaries.R#L 404                                         ...
R/PairSummaries.R#L 405                                         ...
R/PairSummaries.R#L 406       }...
R/PairSummaries.R#L 407       Features02[[Count]] <- do.call(c,...
R/PairSummaries.R#L 408                                      Fea...
R/PairSummaries.R#L 409       phkey <- unlist(phkey)...
R/PairSummaries.R#L 410       Features02[[Count]] <- Features02[...
R/PairSummaries.R#L 411       ...
R/PairSummaries.R#L 433       AAStruct[[Count]] <- PredictHEC(my...
R/PairSummaries.R#L 434                                       ty...
R/PairSummaries.R#L 435                                       HE...
R/PairSummaries.R#L 436                                       HE...
R/PairSummaries.R#L 443   }...
R/PairSummaries.R#L 444   ...
R/PairSummaries.R#L 445   # return(list(Features01,...
R/PairSummaries.R#L 446   #             Features02,...
R/PairSummaries.R#L 447   #             GeneCalls))...
R/PairSummaries.R#L 448   if (Verbose) {...
R/PairSummaries.R#L 450       cat("Overhead is too large to keep...
R/PairSummaries.R#L 451       RemoveWhenAble <- TRUE...
R/PairSummaries.R#L 453       cat("Overhead complete.\n")...
R/PairSummaries.R#L 454       RemoveWhenAble <- FALSE...
R/PairSummaries.R#L 456   }...
R/PairSummaries.R#L 457   ...
R/PairSummaries.R#L 458   ###### -- if a model is specified, loa...
R/PairSummaries.R#L 459   ...
R/PairSummaries.R#L 460   # if (!is.null(Model) &...
R/PairSummaries.R#L 461   #     Model %in% c("Generic")) {...
R/PairSummaries.R#L 462   #   MOD <- get(data(list = "Generic",...
R/PairSummaries.R#L 463   #                   envir = environmen...
R/PairSummaries.R#L 464   #                   package = "SynExte...
R/PairSummaries.R#L 465   #   ...
R/PairSummaries.R#L 466   # } else if (!is.null(Model) &...
R/PairSummaries.R#L 467   #            !(Model %in% c("Generic")...
R/PairSummaries.R#L 468   #   if (file.exists(Model)) {...
R/PairSummaries.R#L 469   #     MOD <- get(load(file = Model,...
R/PairSummaries.R#L 470   #                     verbose = FALSE)...
R/PairSummaries.R#L 471   #     if (!is(object = MOD,...
R/PairSummaries.R#L 472   #             class2 = "glm")) {...
R/PairSummaries.R#L 473   #       stop ("\nUser specified model ...
R/PairSummaries.R#L 474   #     }...
R/PairSummaries.R#L 475   #   } else {...
R/PairSummaries.R#L 476   #     stop ("\nUser specified file doe...
R/PairSummaries.R#L 477   #   }...
R/PairSummaries.R#L 478   # }...
R/PairSummaries.R#L 479   ...
R/PairSummaries.R#L 480   if (!is.null(Model)) {...
R/PairSummaries.R#L 482       MOD <- get(data(list = "Generic",...
R/PairSummaries.R#L 483                       envir = environmen...
R/PairSummaries.R#L 484                       package = "SynExte...
R/PairSummaries.R#L 486       if (file.exists(Model)) {...
R/PairSummaries.R#L 491           stop ("\nUser specified model ...
R/PairSummaries.R#L 493       } else {...
R/PairSummaries.R#L 495       }...
R/PairSummaries.R#L 497   } else {...
R/PairSummaries.R#L 499   }...
R/PairSummaries.R#L 500   ...
R/PairSummaries.R#L 501   ###### -- Summary stuff --------------...
R/PairSummaries.R#L 502   ...
R/PairSummaries.R#L 503   if (PIDs) {...
R/PairSummaries.R#L 506                  length = Total)...
R/PairSummaries.R#L 513   } else {...
R/PairSummaries.R#L 516                  length = Total)...
R/PairSummaries.R#L 518       cat("Collecting pairs.\n")...
R/PairSummaries.R#L 520   }...
R/PairSummaries.R#L 521   ...
R/PairSummaries.R#L 522   Count <- 1L...
R/PairSummaries.R#L 523   ...
R/PairSummaries.R#L 524   ...
R/PairSummaries.R#L 525   # upper key!...
R/PairSummaries.R#L 526   # QueryGene == 1...
R/PairSummaries.R#L 527   # SubjectGene == 2...
R/PairSummaries.R#L 528   # ExactOverlap == 3...
R/PairSummaries.R#L 529   # QueryIndex == 4...
R/PairSummaries.R#L 530   # SubjectIndex == 5...
R/PairSummaries.R#L 531   # QLeft == 6...
R/PairSummaries.R#L 532   # QRight == 7...
R/PairSummaries.R#L 533   # SLeft == 8...
R/PairSummaries.R#L 534   # SRight == 9...
R/PairSummaries.R#L 535   # MaxKmer == 10...
R/PairSummaries.R#L 536   # TotalKmer == 11...
R/PairSummaries.R#L 537   ...
R/PairSummaries.R#L 538   # lower key!...
R/PairSummaries.R#L 539   # same minus max and total, but for in...
R/PairSummaries.R#L 540   # not all linking kmers...
R/PairSummaries.R#L 541   ...
R/PairSummaries.R#L 542   for (m1 in seq_len(Size - 1L)) {...
R/PairSummaries.R#L 544       if (nrow(SyntenyLinks[[m1, m2]]) >...
R/PairSummaries.R#L 547                          SyntenyLinks[[m...
R/PairSummaries.R#L 550                          SyntenyLinks[[m...
R/PairSummaries.R#L 566           if (o == p) {...
R/PairSummaries.R#L 568                    abs((abs(t - x) / q) ...
R/PairSummaries.R#L 569           } else {...
R/PairSummaries.R#L 571                    abs((abs(t - x) / q) ...
R/PairSummaries.R#L 572           }...
R/PairSummaries.R#L 590           diff2[m3] <- 1 - mean(diff1[Sy...
R/PairSummaries.R#L 599                           table = data.f...
R/PairSummaries.R#L 603                                         ...
R/PairSummaries.R#L 606           # don't need to bother with su...
R/PairSummaries.R#L 607           CIM <- IMatrix[IndexKey == UIK...
R/PairSummaries.R#L 608           CPM <- PMatrix[IndexKey == UIK...
R/PairSummaries.R#L 609           ...
R/PairSummaries.R#L 610           if (nrow(CPM) > 1L) {...
R/PairSummaries.R#L 618                                    lengt...
R/PairSummaries.R#L 622               p <- p1[m4 + it1] - p1[m4]...
R/PairSummaries.R#L 623               while (p == 0L) {...
R/PairSummaries.R#L 626                   it1 <- it1 - 1L...
R/PairSummaries.R#L 627                   break...
R/PairSummaries.R#L 630               }...
R/PairSummaries.R#L 631               # p is now the forward loo...
R/PairSummaries.R#L 632               rdp1[m4] <- p...
R/PairSummaries.R#L 633               rdp2[m4] <- p2[m4 + it1] -...
R/PairSummaries.R#L 634               # reset it1...
R/PairSummaries.R#L 635               it1 <- 1L...
R/PairSummaries.R#L 639                                    lengt...
R/PairSummaries.R#L 643               p <- p1[m4 - it1] - p1[m4]...
R/PairSummaries.R#L 644               while (p == 0L) {...
R/PairSummaries.R#L 647                   it1 <- it1 - 1L...
R/PairSummaries.R#L 648                   break...
R/PairSummaries.R#L 651               }...
R/PairSummaries.R#L 652               # p is the backwards looku...
R/PairSummaries.R#L 653               ldp1[m4] <- p...
R/PairSummaries.R#L 654               ldp2[m4] <- p2[m4 - it1] -...
R/PairSummaries.R#L 655               # reset it1...
R/PairSummaries.R#L 656               it1 <- 1L...
R/PairSummaries.R#L 666                                        "...
R/PairSummaries.R#L 667                                        "...
R/PairSummaries.R#L 668                                        "...
R/PairSummaries.R#L 669                                        "...
R/PairSummaries.R#L 670                                        "...
R/PairSummaries.R#L 671                                        "...
R/PairSummaries.R#L 672                                        "...
R/PairSummaries.R#L 676           } else if (nrow(CPM) == 1L) {...
R/PairSummaries.R#L 680                                        "...
R/PairSummaries.R#L 681                                        "...
R/PairSummaries.R#L 682                                        "...
R/PairSummaries.R#L 683                                        "...
R/PairSummaries.R#L 684                                        "...
R/PairSummaries.R#L 685                                        "...
R/PairSummaries.R#L 686                                        "...
R/PairSummaries.R#L 687           }...
R/PairSummaries.R#L 693                                NeighborM...
R/PairSummaries.R#L 711           ...
R/PairSummaries.R#L 712           GapFill <- vector(mode = "list...
R/PairSummaries.R#L 714           ...
R/PairSummaries.R#L 715           # diff gives absolute differen...
R/PairSummaries.R#L 716           # already exists in the neighb...
R/PairSummaries.R#L 717           p1R <- NeighborMat[, 5L]...
R/PairSummaries.R#L 718           p2R <- NeighborMat[, 7L]...
R/PairSummaries.R#L 719           ...
R/PairSummaries.R#L 720           # for each gap size allowed:...
R/PairSummaries.R#L 721           for (g1 in seq_along(OffSetsAl...
R/PairSummaries.R#L 729               # gap to next is the same ...
R/PairSummaries.R#L 730               # at least once...
R/PairSummaries.R#L 731               # build vectors of those g...
R/PairSummaries.R#L 732               # and the opposing positio...
R/PairSummaries.R#L 733               # don't overwrite things y...
R/PairSummaries.R#L 734               GapFill[[g1]] <- vector(mo...
R/PairSummaries.R#L 735                                       le...
R/PairSummaries.R#L 736               w4 <- which(w3) + 1L...
R/PairSummaries.R#L 737               i1l <- NeighborMat[w3, 3L]...
R/PairSummaries.R#L 738               i1r <- NeighborMat[w4, 3L]...
R/PairSummaries.R#L 739               i2l <- NeighborMat[w3, 4L]...
R/PairSummaries.R#L 740               i2r <- NeighborMat[w4, 4L]...
R/PairSummaries.R#L 741               p1l <- NeighborMat[w3, 1L]...
R/PairSummaries.R#L 742               p1r <- NeighborMat[w4, 1L]...
R/PairSummaries.R#L 743               p2l <- NeighborMat[w3, 2L]...
R/PairSummaries.R#L 744               p2r <- NeighborMat[w4, 2L]...
R/PairSummaries.R#L 745               # create new pair partner ...
R/PairSummaries.R#L 746               # if gap does not span ind...
R/PairSummaries.R#L 747               for (g2 in seq_along(p1l))...
R/PairSummaries.R#L 750                   # gap does not span in...
R/PairSummaries.R#L 751                   # this is already chec...
R/PairSummaries.R#L 752                   gp1 <- seq(from = p1l[...
R/PairSummaries.R#L 753                              to = p1r[g2...
R/PairSummaries.R#L 754                              by = if (p1...
R/PairSummaries.R#L 755                                1L...
R/PairSummaries.R#L 756                              } else {...
R/PairSummaries.R#L 757                                -1L...
R/PairSummaries.R#L 758                              })...
R/PairSummaries.R#L 759                   gp2 <- seq(from = p2l[...
R/PairSummaries.R#L 760                              to = p2r[g2...
R/PairSummaries.R#L 761                              by = if (p2...
R/PairSummaries.R#L 762                                1L...
R/PairSummaries.R#L 763                              } else {...
R/PairSummaries.R#L 764                                -1L...
R/PairSummaries.R#L 765                              })...
R/PairSummaries.R#L 766                   ...
R/PairSummaries.R#L 767                   if (length(gp1) == len...
R/PairSummaries.R#L 769                                         ...
R/PairSummaries.R#L 770                                         ...
R/PairSummaries.R#L 771                                         ...
R/PairSummaries.R#L 772                                         ...
R/PairSummaries.R#L 773                                         ...
R/PairSummaries.R#L 774                   }...
R/PairSummaries.R#L 776               }...
R/PairSummaries.R#L 777               # return(GapFill)...
R/PairSummaries.R#L 778               GapFill[[g1]] <- do.call(r...
R/PairSummaries.R#L 779                                        G...
R/PairSummaries.R#L 781               # in this case do ... some...
R/PairSummaries.R#L 782               # leave list position as n...
R/PairSummaries.R#L 783               # GapFill[[g1]]...
R/PairSummaries.R#L 785           }...
R/PairSummaries.R#L 786           # return(GapFill)...
R/PairSummaries.R#L 787           GapFill <- do.call(rbind,...
R/PairSummaries.R#L 788                              GapFill)...
R/PairSummaries.R#L 789           ...
R/PairSummaries.R#L 790           if (!is.null(GapFill)) {...
R/PairSummaries.R#L 795                            GapFill[, c(2...
R/PairSummaries.R#L 797                            GapFill[, c(3...
R/PairSummaries.R#L 799                        rep(0, nrow(GapFi...
R/PairSummaries.R#L 801                               rep(0L, nr...
R/PairSummaries.R#L 805                          rep(0L, nrow(Ga...
R/PairSummaries.R#L 842           } else {...
R/PairSummaries.R#L 862           }...
R/PairSummaries.R#L 864                    nrow(PMatrix) == 1L) ...
R/PairSummaries.R#L 865           # index matching...
R/PairSummaries.R#L 866           QGeneLength <- GeneCalls[[m1]]...
R/PairSummaries.R#L 867           SGeneLength <- GeneCalls[[m2]]...
R/PairSummaries.R#L 868           ExactOverLap <- SyntenyLinks[[...
R/PairSummaries.R#L 869           TotalKmers <- SyntenyLinks[[m1...
R/PairSummaries.R#L 870           MaxKmer <- SyntenyLinks[[m1, m...
R/PairSummaries.R#L 871           # ExteriorMissQuery <- Synteny...
R/PairSummaries.R#L 872           # ExteriorMissSubject <- Synte...
R/PairSummaries.R#L 873           # InteriorMissQuery <- QGeneLe...
R/PairSummaries.R#L 874           # InteriorMissSubject <- SGene...
R/PairSummaries.R#L 875           QGeneStrand <- GeneCalls[[m1]]...
R/PairSummaries.R#L 876           QGeneCoding <- GeneCalls[[m1]]...
R/PairSummaries.R#L 877           QGeneTransl <- GeneCalls[[m1]]...
R/PairSummaries.R#L 878           SGeneStrand <- GeneCalls[[m2]]...
R/PairSummaries.R#L 879           SGeneCoding <- GeneCalls[[m2]]...
R/PairSummaries.R#L 880           SGeneTransl <- GeneCalls[[m2]]...
R/PairSummaries.R#L 881           PairLeft <- LKey...
R/PairSummaries.R#L 882           PairRight <- RKey...
R/PairSummaries.R#L 893           # hypothetically, we shouldn't...
R/PairSummaries.R#L 894           # set of features is pulled in...
R/PairSummaries.R#L 895           # in which case only one set o...
R/PairSummaries.R#L 896           # for every cell in the matrix...
R/PairSummaries.R#L 897           Genome <- SearchDB(dbFile = DB...
R/PairSummaries.R#L 898                              identifier ...
R/PairSummaries.R#L 899                              nameBy = "d...
R/PairSummaries.R#L 900                              verbose = F...
R/PairSummaries.R#L 901           PresentIndices <- unique(GeneC...
R/PairSummaries.R#L 902           if (length(PresentIndices) > 1...
R/PairSummaries.R#L 908               ph <- GeneCalls[[m1]]$Inde...
R/PairSummaries.R#L 909               ...
R/PairSummaries.R#L 910               z1 <- unname(GeneCalls[[m1...
R/PairSummaries.R#L 911               z2 <- lengths(z1)...
R/PairSummaries.R#L 912               # convert IRangesList to I...
R/PairSummaries.R#L 913               z1 <- unlist(z1,...
R/PairSummaries.R#L 914                            recursive = F...
R/PairSummaries.R#L 915               Features01[[m1]][[m3]] <- ...
R/PairSummaries.R#L 916                                         ...
R/PairSummaries.R#L 917               CollapseCount <- 0L...
R/PairSummaries.R#L 918               w <- which(z2 > 1L)...
R/PairSummaries.R#L 919               # if no collapsing needs t...
R/PairSummaries.R#L 920               if (length(w) > 0L) {...
R/PairSummaries.R#L 924                                  length ...
R/PairSummaries.R#L 926                   Features01[[m1]][[m3]]...
R/PairSummaries.R#L 927                   remove[(CollapseCount ...
R/PairSummaries.R#L 928                   CollapseCount <- Colla...
R/PairSummaries.R#L 931               }...
R/PairSummaries.R#L 932               ...
R/PairSummaries.R#L 933               FlipMe <- GeneCalls[[m1]]$...
R/PairSummaries.R#L 934               if (any(FlipMe)) {...
R/PairSummaries.R#L 936               }...
R/PairSummaries.R#L 939                                       Fe...
R/PairSummaries.R#L 940           } else {...
R/PairSummaries.R#L 945                          recursive = FAL...
R/PairSummaries.R#L 947                                         ...
R/PairSummaries.R#L 951               remove <- vector(mode = "i...
R/PairSummaries.R#L 952                                length = ...
R/PairSummaries.R#L 953               for (m4 in w) {...
R/PairSummaries.R#L 957               }...
R/PairSummaries.R#L 958               Features01[[m1]][remove] <...
R/PairSummaries.R#L 962               Features01[[m1]][FlipMe] <...
R/PairSummaries.R#L 964           }...
R/PairSummaries.R#L 965           names(Features01[[m1]]) <- pas...
R/PairSummaries.R#L 966                                         ...
R/PairSummaries.R#L 967                                         ...
R/PairSummaries.R#L 968                                         ...
R/PairSummaries.R#L 969           QuerySeqs <- Features01[[m1]][...
R/PairSummaries.R#L 970           QuerySeqsAA <- Features02[[m1]...
R/PairSummaries.R#L 971           QueryStruct <- AAStruct[[m1]]...
R/PairSummaries.R#L 972           Features01[m1] <- list(NULL)...
R/PairSummaries.R#L 974           QuerySeqs <- Features01[[m1]][...
R/PairSummaries.R#L 975           QuerySeqsAA <- Features02[[m1]...
R/PairSummaries.R#L 976           QueryStruct <- AAStruct[[m1]]...
R/PairSummaries.R#L 980           Genome <- SearchDB(dbFile = DB...
R/PairSummaries.R#L 981                              identifier ...
R/PairSummaries.R#L 982                              nameBy = "d...
R/PairSummaries.R#L 983                              verbose = F...
R/PairSummaries.R#L 984           PresentIndices <- unique(GeneC...
R/PairSummaries.R#L 985           if (length(PresentIndices) > 1...
R/PairSummaries.R#L 989                                      len...
R/PairSummaries.R#L 991               ph <- GeneCalls[[m2]]$Inde...
R/PairSummaries.R#L 992               ...
R/PairSummaries.R#L 993               z1 <- unname(GeneCalls[[m2...
R/PairSummaries.R#L 994               z2 <- lengths(z1)...
R/PairSummaries.R#L 995               # convert IRangesList to I...
R/PairSummaries.R#L 996               z1 <- unlist(z1,...
R/PairSummaries.R#L 997                            recursive = F...
R/PairSummaries.R#L 998               Features01[[m2]][[m3]] <- ...
R/PairSummaries.R#L 999                                         ...
R/PairSummaries.R#L1000               CollapseCount <- 0L...
R/PairSummaries.R#L1001               w <- which(z2 > 1L)...
R/PairSummaries.R#L1002               # if no collapsing needs t...
R/PairSummaries.R#L1003               if (length(w) > 0L) {...
R/PairSummaries.R#L1007                                  length ...
R/PairSummaries.R#L1009                   Features01[[m2]][[m3]]...
R/PairSummaries.R#L1010                   remove[(CollapseCount ...
R/PairSummaries.R#L1011                   CollapseCount <- Colla...
R/PairSummaries.R#L1014               }...
R/PairSummaries.R#L1015               ...
R/PairSummaries.R#L1016               FlipMe <- GeneCalls[[m2]]$...
R/PairSummaries.R#L1017               if (any(FlipMe)) {...
R/PairSummaries.R#L1019               }...
R/PairSummaries.R#L1022                                       Fe...
R/PairSummaries.R#L1023           } else {...
R/PairSummaries.R#L1028                          recursive = FAL...
R/PairSummaries.R#L1030                                         ...
R/PairSummaries.R#L1034               remove <- vector(mode = "i...
R/PairSummaries.R#L1035                                length = ...
R/PairSummaries.R#L1036               for (m4 in w) {...
R/PairSummaries.R#L1040               }...
R/PairSummaries.R#L1041               Features01[[m2]][remove] <...
R/PairSummaries.R#L1045               Features01[[m2]][FlipMe] <...
R/PairSummaries.R#L1048           }...
R/PairSummaries.R#L1049           names(Features01[[m2]]) <- pas...
R/PairSummaries.R#L1050                                         ...
R/PairSummaries.R#L1051                                         ...
R/PairSummaries.R#L1052                                         ...
R/PairSummaries.R#L1053           SubjectSeqs <- Features01[[m2]...
R/PairSummaries.R#L1054           SubjectStruct <- AAStruct[[m2]...
R/PairSummaries.R#L1055           PresentFeatures <- unname(sapp...
R/PairSummaries.R#L1056                                         ...
R/PairSummaries.R#L1057                                         ...
R/PairSummaries.R#L1058                                         ...
R/PairSummaries.R#L1059           if (m1 > 1L) {...
R/PairSummaries.R#L1064               SubjectSeqs <- Features01[...
R/PairSummaries.R#L1065               Features01[min(which(Prese...
R/PairSummaries.R#L1067               SubjectSeqs <- Features01[...
R/PairSummaries.R#L1068               SubjectSeqsAA <- Features0...
R/PairSummaries.R#L1069               SubjectStruct <- AAStruct[...
R/PairSummaries.R#L1070               Features01[m2] <- list(NUL...
R/PairSummaries.R#L1072           } else {...
R/PairSummaries.R#L1077           }...
R/PairSummaries.R#L1078           ...
R/PairSummaries.R#L1080           SubjectSeqs <- Features01[[m2]...
R/PairSummaries.R#L1081           SubjectSeqsAA <- Features02[[m...
R/PairSummaries.R#L1082           SubjectStruct <- AAStruct[[m2]...
R/PairSummaries.R#L1090                           length = lengt...
R/PairSummaries.R#L1092                                         ...
R/PairSummaries.R#L1093                                         ...
R/PairSummaries.R#L1095                                         ...
R/PairSummaries.R#L1096                                         ...
R/PairSummaries.R#L1098           NucDist[m3] <- sqrt(sum((nuc1[...
R/PairSummaries.R#L1102           ...
R/PairSummaries.R#L1103           Pident <- vector(mode = "numer...
R/PairSummaries.R#L1104                            length = leng...
R/PairSummaries.R#L1105           Atype <- vector(mode = "charac...
R/PairSummaries.R#L1106                           length = lengt...
R/PairSummaries.R#L1107           SCORE <- SCORE2 <- vector(mode...
R/PairSummaries.R#L1109           ...
R/PairSummaries.R#L1110           if (IgnoreDefaultStringSet) {...
R/PairSummaries.R#L1113               Atype[m3] <- "NT"...
R/PairSummaries.R#L1114               if ("APArgs" %in% ls()) {...
R/PairSummaries.R#L1117                                    APArg...
R/PairSummaries.R#L1119               } else {...
R/PairSummaries.R#L1121                                       "s...
R/PairSummaries.R#L1122               }...
R/PairSummaries.R#L1123               ph01 <- do.call(what = Ali...
R/PairSummaries.R#L1124                               args = Cur...
R/PairSummaries.R#L1125               if ("DMArgs" %in% ls()) {...
R/PairSummaries.R#L1130                                    DMArg...
R/PairSummaries.R#L1131               } else {...
R/PairSummaries.R#L1133                                       "i...
R/PairSummaries.R#L1134                                       "v...
R/PairSummaries.R#L1135                                       "t...
R/PairSummaries.R#L1136               }...
R/PairSummaries.R#L1137               if (PIDs) {...
R/PairSummaries.R#L1139                                         ...
R/PairSummaries.R#L1140               }...
R/PairSummaries.R#L1141               if (Score) {...
R/PairSummaries.R#L1147               }...
R/PairSummaries.R#L1148               ...
R/PairSummaries.R#L1149               if (Verbose) {...
R/PairSummaries.R#L1151                                   value ...
R/PairSummaries.R#L1153               }...
R/PairSummaries.R#L1155           } else {...
R/PairSummaries.R#L1162               CurrentAPArgs <- c(list("p...
R/PairSummaries.R#L1163                                       "s...
R/PairSummaries.R#L1164                                  APArgs)...
R/PairSummaries.R#L1166               CurrentAPArgs <- c(list("p...
R/PairSummaries.R#L1167                                       "s...
R/PairSummaries.R#L1170               CurrentDMArgs <- c(list("m...
R/PairSummaries.R#L1171                                       "i...
R/PairSummaries.R#L1172                                       "v...
R/PairSummaries.R#L1173                                       "t...
R/PairSummaries.R#L1174                                  DMArgs)...
R/PairSummaries.R#L1176               CurrentDMArgs <- list("myX...
R/PairSummaries.R#L1191               ...
R/PairSummaries.R#L1192               if (is.na(w1[m3]) | is.na(...
R/PairSummaries.R#L1200               } else {...
R/PairSummaries.R#L1207                                         ...
R/PairSummaries.R#L1208                                         ...
R/PairSummaries.R#L1210               }...
R/PairSummaries.R#L1211               ...
R/PairSummaries.R#L1212               CurrentDMArgs$myXStringSet...
R/PairSummaries.R#L1213               if (PIDs) {...
R/PairSummaries.R#L1215                                         ...
R/PairSummaries.R#L1216               }...
R/PairSummaries.R#L1217               if (Score &...
R/PairSummaries.R#L1218                   Atype[m3] == "AA") {...
R/PairSummaries.R#L1232               } else if (Score &...
R/PairSummaries.R#L1233                          Atype[m3] == "N...
R/PairSummaries.R#L1239               }...
R/PairSummaries.R#L1240               if (Verbose) {...
R/PairSummaries.R#L1242                                   value ...
R/PairSummaries.R#L1244               }...
R/PairSummaries.R#L1246           }...
R/PairSummaries.R#L1247           ...
R/PairSummaries.R#L1248           # when users specify a storage...
R/PairSummaries.R#L1249           # initially...
R/PairSummaries.R#L1250           # feature removal when request...
R/PairSummaries.R#L1251           # when it formerly occured abo...
R/PairSummaries.R#L1252           # using the logical assigned a...
R/PairSummaries.R#L1253           ...
R/PairSummaries.R#L1254           if (PIDs & Score) {...
R/PairSummaries.R#L1256                                       "p...
R/PairSummaries.R#L1257                                       "E...
R/PairSummaries.R#L1258                                       "T...
R/PairSummaries.R#L1259                                       "M...
R/PairSummaries.R#L1260                                       "C...
R/PairSummaries.R#L1261                                       "p...
R/PairSummaries.R#L1262                                       "p...
R/PairSummaries.R#L1263                                       "A...
R/PairSummaries.R#L1264                                       "T...
R/PairSummaries.R#L1265                                       "P...
R/PairSummaries.R#L1266                                       "S...
R/PairSummaries.R#L1267                                       # ...
R/PairSummaries.R#L1268                                       "P...
R/PairSummaries.R#L1269                                       st...
R/PairSummaries.R#L1270           } else if (PIDs & !Score) {...
R/PairSummaries.R#L1272                                       "p...
R/PairSummaries.R#L1273                                       "E...
R/PairSummaries.R#L1274                                       "T...
R/PairSummaries.R#L1275                                       "M...
R/PairSummaries.R#L1276                                       "C...
R/PairSummaries.R#L1277                                       "p...
R/PairSummaries.R#L1278                                       "p...
R/PairSummaries.R#L1279                                       "A...
R/PairSummaries.R#L1280                                       "T...
R/PairSummaries.R#L1281                                       "P...
R/PairSummaries.R#L1282                                       "P...
R/PairSummaries.R#L1283                                       st...
R/PairSummaries.R#L1284           } else if (!PIDs & Score) {...
R/PairSummaries.R#L1286                                       "p...
R/PairSummaries.R#L1287                                       "E...
R/PairSummaries.R#L1288                                       "T...
R/PairSummaries.R#L1289                                       "M...
R/PairSummaries.R#L1290                                       "C...
R/PairSummaries.R#L1291                                       "p...
R/PairSummaries.R#L1292                                       "p...
R/PairSummaries.R#L1293                                       "A...
R/PairSummaries.R#L1294                                       "T...
R/PairSummaries.R#L1295                                       "S...
R/PairSummaries.R#L1296                                       # ...
R/PairSummaries.R#L1297                                       "P...
R/PairSummaries.R#L1298                                       st...
R/PairSummaries.R#L1299           }...
R/PairSummaries.R#L1301           PH[[Count]] <- data.frame("p1"...
R/PairSummaries.R#L1302                                         ...
R/PairSummaries.R#L1303                                         ...
R/PairSummaries.R#L1304                                         ...
R/PairSummaries.R#L1306                                         ...
R/PairSummaries.R#L1307                                         ...
R/PairSummaries.R#L1308                                         ...
R/PairSummaries.R#L1318                                         ...
R/PairSummaries.R#L1319                                         ...
R/PairSummaries.R#L1320                                         ...
R/PairSummaries.R#L1323       } else {...
R/PairSummaries.R#L1325       }...
R/PairSummaries.R#L1326       if (Verbose &...
R/PairSummaries.R#L1327           !PIDs) {...
R/PairSummaries.R#L1329                           value = Count ...
R/PairSummaries.R#L1330       }...
R/PairSummaries.R#L1331       Count <- Count + 1L...
R/PairSummaries.R#L1333   }...
R/PairSummaries.R#L1334   ...
R/PairSummaries.R#L1335   DF <- do.call(rbind,...
R/PairSummaries.R#L1337   rownames(DF) <- NULL...
R/PairSummaries.R#L1338   ...
R/PairSummaries.R#L1339   # return(list(DF,...
R/PairSummaries.R#L1340   #             MOD))...
R/PairSummaries.R#L1341   if (!is.null(DF)) {...
R/PairSummaries.R#L1343       # do nothing...
R/PairSummaries.R#L1345       PPids <- predict(object = MOD,...
R/PairSummaries.R#L1346                        DF,...
R/PairSummaries.R#L1347                        type = "response"...
R/PairSummaries.R#L1348       DF <- cbind(DF,...
R/PairSummaries.R#L1349                   "PredictedPID" = PPids...
R/PairSummaries.R#L1351   } else {...
R/PairSummaries.R#L1353   }...
R/PairSummaries.R#L1354   ...
R/PairSummaries.R#L1355   if (Verbose) {...
R/PairSummaries.R#L1359   }...
R/PairSummaries.R#L1360   attr(DF, "GeneCalls") <- GeneCalls...
R/PairSummaries.R#L1361   class(DF) <- c("data.frame", "PairSumm...
R/PairSummaries.R#L1362   return(DF)...
R/ProtWeaver-class.R#L  31   structure(validatedInput$ipt,...
R/ProtWeaver-class.R#L  40   vRes <- validate_ProtWeaver(ListOfData...
R/ProtWeaver-class.R#L  41   new_ProtWeaver(vRes)...
R/ProtWeaver-class.R#L  45   bitflags <- list(usecoloc=FALSE, usemi...
R/ProtWeaver-class.R#L  46   stopifnot('ProtWeaver expects a list o...
R/ProtWeaver-class.R#L  47               is(ipt, 'list'))...
R/ProtWeaver-class.R#L  48   ...
R/ProtWeaver-class.R#L  49   stopifnot('Input has no groups!'=lengt...
R/ProtWeaver-class.R#L  50   checkdend <- vapply(ipt, is, class2='d...
R/ProtWeaver-class.R#L  51   checkchar <- vapply(ipt, is, class2='c...
R/ProtWeaver-class.R#L  52   stopifnot('Input list must be all vect...
R/ProtWeaver-class.R#L  53               !any(checkchar) || all(che...
R/ProtWeaver-class.R#L  54   stopifnot('Input list must be all vect...
R/ProtWeaver-class.R#L  55               !any(checkdend) || all(che...
R/ProtWeaver-class.R#L  56   ...
R/ProtWeaver-class.R#L  57   stopifnot('Input list elements must be...
R/ProtWeaver-class.R#L  58               all(checkdend) || all(chec...
R/ProtWeaver-class.R#L  59   ...
R/ProtWeaver-class.R#L  60   # Now we know that the input is either...
R/ProtWeaver-class.R#L  61   if (all(checkchar)){...
R/ProtWeaver-class.R#L  63                   'Input list must inclu...
R/ProtWeaver-class.R#L  64                   'for MT algorithms. Co...
R/ProtWeaver-class.R#L  67   } else {...
R/ProtWeaver-class.R#L  70   }...
R/ProtWeaver-class.R#L  71   ...
R/ProtWeaver-class.R#L  72   if (bitflags[['usemirrortree']]){...
R/ProtWeaver-class.R#L  75       if (any(unlist(flatdendrapply(tree...
R/ProtWeaver-class.R#L  78                              ' include a...
R/ProtWeaver-class.R#L  79                              ' methods. ...
R/ProtWeaver-class.R#L  81       }...
R/ProtWeaver-class.R#L  84   }...
R/ProtWeaver-class.R#L  85   ...
R/ProtWeaver-class.R#L  86   checkforcoloc <- grepl('.+_.+_[0-9]+',...
R/ProtWeaver-class.R#L  87   if ( all(checkforcoloc) ){...
R/ProtWeaver-class.R#L  90   }...
R/ProtWeaver-class.R#L  91   else{...
R/ProtWeaver-class.R#L  94               '[GENOME]_[INDEX]_[ORDER] ...
R/ProtWeaver-class.R#L  96   }...
R/ProtWeaver-class.R#L  97   ...
R/ProtWeaver-class.R#L  98   if (is.null(names(ipt))){...
R/ProtWeaver-class.R#L 101   }...
R/ProtWeaver-class.R#L 102   if (any(names(ipt) == '')){...
R/ProtWeaver-class.R#L 107   }...
R/ProtWeaver-class.R#L 108   ...
R/ProtWeaver-class.R#L 109   if (all(grepl('^[0-9]+$', allentries))...
R/ProtWeaver-class.R#L 111   else ...
R/ProtWeaver-class.R#L 113   ...
R/ProtWeaver-class.R#L 114   return(list(ipt=ipt, allgenomes=allent...
R/ProtWeaver-class.R#L 120   if (length(x) == 1){...
R/ProtWeaver-class.R#L 122               'group and', length(attr(x...
R/ProtWeaver-class.R#L 123   } else {...
R/ProtWeaver-class.R#L 125               'groups and', length(attr(...
R/ProtWeaver-class.R#L 126   }...
R/ProtWeaver-class.R#L 130   if (length(x) == 1){...
R/ProtWeaver-class.R#L 132               'group and', length(attr(x...
R/ProtWeaver-class.R#L 133   } else {...
R/ProtWeaver-class.R#L 135               'groups and', length(attr(...
R/ProtWeaver-class.R#L 136   }...
R/ProtWeaver-class.R#L 140   y <- unclass(x)...
R/ProtWeaver-class.R#L 141   newv <- validate_ProtWeaver(y[i], noWa...
R/ProtWeaver-class.R#L 142   new_ProtWeaver(newv)...
R/ProtWeaver-class.R#L 146                                MySpecies...
R/ProtWeaver-class.R#L 147                                RawZScore...
R/ProtWeaver-class.R#L 148                                ReturnRaw...
R/ProtWeaver-class.R#L 149   pw <- object...
R/ProtWeaver-class.R#L 150   func <- getS3method(Method, 'ProtWeave...
R/ProtWeaver-class.R#L 151   if(Verbose && !ReturnRawData) starttim...
R/ProtWeaver-class.R#L 152   ...
R/ProtWeaver-class.R#L 153   preds <- func(pw, Subset=Subset, Verbo...
R/ProtWeaver-class.R#L 157   ...
R/ProtWeaver-class.R#L 158   if (Verbose && !ReturnRawData){...
R/ProtWeaver-class.R#L 162   } ...
R/ProtWeaver-class.R#L 163   if (is(preds, 'list') && !is.null(pred...
R/ProtWeaver-class.R#L 165   if (ReturnRawData)...
R/ProtWeaver-class.R#L 167   ...
R/ProtWeaver-class.R#L 168   pc <- ProcessSubset(pw, Subset)...
R/ProtWeaver-class.R#L 169   n <- names(pw)[pc$uvals]...
R/ProtWeaver-class.R#L 170   names(preds) <- n...
R/ProtWeaver-class.R#L 171   rs <- structure(preds,...
R/ProtWeaver-class.R#L 172                  method=Method,...
R/ProtWeaver-class.R#L 173                  class=c('ProtWeb', 'sim...
R/ProtWeaver-class.R#L 174   invisible(rs)...
R/ProtWeaver-class.R#L 185   ...
R/ProtWeaver-class.R#L 186   flags <- rep(FALSE, 3)...
R/ProtWeaver-class.R#L 187   ...
R/ProtWeaver-class.R#L 188   subs <- ProcessSubset(pw, Subset)...
R/ProtWeaver-class.R#L 189   n <- names(pw)...
R/ProtWeaver-class.R#L 190   uvals <- subs$uvals...
R/ProtWeaver-class.R#L 191   unames <- vapply(uvals, function(x) n[...
R/ProtWeaver-class.R#L 192   splist <- NULL...
R/ProtWeaver-class.R#L 193   if (!is.null(MySpeciesTree)){...
R/ProtWeaver-class.R#L 195   }...
R/ProtWeaver-class.R#L 197   if (Verbose) cat('Calculating P/A prof...
R/ProtWeaver-class.R#L 198   PAs <- PAProfiles(pw, uvals, Verbose=V...
R/ProtWeaver-class.R#L 199   CPs <- NULL...
R/ProtWeaver-class.R#L 200   takesCP <- c('MirrorTree') # Just usin...
R/ProtWeaver-class.R#L 201   ...
R/ProtWeaver-class.R#L 202   submodels <- c('ProfileDCA', 'Jaccard'...
R/ProtWeaver-class.R#L 203   if (attr(pw, 'useMT')){...
R/ProtWeaver-class.R#L 207   }...
R/ProtWeaver-class.R#L 208   ...
R/ProtWeaver-class.R#L 209   if (!is.null(MySpeciesTree) && CheckBi...
R/ProtWeaver-class.R#L 211   }...
R/ProtWeaver-class.R#L 213   if (attr(pw, 'useColoc')){...
R/ProtWeaver-class.R#L 215   }...
R/ProtWeaver-class.R#L 216   ...
R/ProtWeaver-class.R#L 217   if (attr(pw, 'useResidue')){...
R/ProtWeaver-class.R#L 221   }...
R/ProtWeaver-class.R#L 222   ...
R/ProtWeaver-class.R#L 223   if(!is.null(PretrainedModel)) {...
R/ProtWeaver-class.R#L 226   } else {...
R/ProtWeaver-class.R#L 228   }...
R/ProtWeaver-class.R#L 229   ...
R/ProtWeaver-class.R#L 230   results <- list()...
R/ProtWeaver-class.R#L 231   for ( model in submodels ){...
R/ProtWeaver-class.R#L 236                               ReturnRawD...
R/ProtWeaver-class.R#L 237                               precalcSub...
R/ProtWeaver-class.R#L 238                               MySpeciesT...
R/ProtWeaver-class.R#L 239   }...
R/ProtWeaver-class.R#L 240   ...
R/ProtWeaver-class.R#L 241   cat('Combining results...\n')...
R/ProtWeaver-class.R#L 242   results <- AdjMatToDf(results, Verbose...
R/ProtWeaver-class.R#L 243   cat('Calculating additional P/A Statis...
R/ProtWeaver-class.R#L 244   pas <- PAStats(results, PAs) ...
R/ProtWeaver-class.R#L 245   results[,'AvgOcc'] <- pas$avg...
R/ProtWeaver-class.R#L 246   results[,'OccDiff'] <- pas$diff...
R/ProtWeaver-class.R#L 248   if (NoPrediction) return(list(res=resu...
R/ProtWeaver-class.R#L 249   ...
R/ProtWeaver-class.R#L 250   if (Verbose) cat('Predicting with Ense...
R/ProtWeaver-class.R#L 251   if (UseBuiltIns){...
R/ProtWeaver-class.R#L 253   } else if (is(predictionmodel, 'glm'))...
R/ProtWeaver-class.R#L 255   } else {...
R/ProtWeaver-class.R#L 257   }...
R/ProtWeaver-class.R#L 258   outmat <- simMat(NA_real_, length(unam...
R/ProtWeaver-class.R#L 259   if (Verbose) pb <- txtProgressBar(max=...
R/ProtWeaver-class.R#L 260   for (i in seq_along(predictions)){...
R/ProtWeaver-class.R#L 266   }...
R/ProtWeaver-class.R#L 267   cat('\n')...
R/ProtWeaver-class.R#L 268   Diag(outmat) <- 1...
R/ProtWeaver-class.R#L 269   return(outmat)...
R/ProtWeaver-ColocPreds.R#L  14                              precalcProf...
R/ProtWeaver-ColocPreds.R#L  15   if (!is.null(precalcSubset))...
R/ProtWeaver-ColocPreds.R#L  17   else...
R/ProtWeaver-ColocPreds.R#L  19   uvals <- subs$uvals...
R/ProtWeaver-ColocPreds.R#L  20   evalmap <- subs$evalmap...
R/ProtWeaver-ColocPreds.R#L  21   stopifnot('Colocalization is disabled....
R/ProtWeaver-ColocPreds.R#L  22   if (attr(pw, 'useMT')){...
R/ProtWeaver-ColocPreds.R#L  24   } else {...
R/ProtWeaver-ColocPreds.R#L  26   }...
R/ProtWeaver-ColocPreds.R#L  27   l <- length(labvecs)...
R/ProtWeaver-ColocPreds.R#L  28   pairscores <- rep(NA_real_, l*(l-1)/2)...
R/ProtWeaver-ColocPreds.R#L  29   ctr <- 0...
R/ProtWeaver-ColocPreds.R#L  30   if (Verbose) pb <- txtProgressBar(max=...
R/ProtWeaver-ColocPreds.R#L  31   for ( i in seq_len(l-1)){...
R/ProtWeaver-ColocPreds.R#L  36       uval2 <- uvals[j]...
R/ProtWeaver-ColocPreds.R#L  37       accessor <- as.character(min(uval1...
R/ProtWeaver-ColocPreds.R#L  38       entry <- max(uval1, uval2)...
R/ProtWeaver-ColocPreds.R#L  39       if (is.null(evalmap) || entry %in%...
R/ProtWeaver-ColocPreds.R#L  47           spk <- shared[k]...
R/ProtWeaver-ColocPreds.R#L  48           v1 <- lab1[match(spk, l1sp)]...
R/ProtWeaver-ColocPreds.R#L  49           v2 <- lab2[match(spk, l2sp)]...
R/ProtWeaver-ColocPreds.R#L  50           idx1 <- as.integer(gsub('.*_([...
R/ProtWeaver-ColocPreds.R#L  51           idx2 <- as.integer(gsub('.*_([...
R/ProtWeaver-ColocPreds.R#L  52           # Double loop is SIGNIFICANTLY...
R/ProtWeaver-ColocPreds.R#L  53           # ...even though it looks so g...
R/ProtWeaver-ColocPreds.R#L  54           diffs <- 0...
R/ProtWeaver-ColocPreds.R#L  55           for (v1i in idx1)...
R/ProtWeaver-ColocPreds.R#L  57               diffs <- diffs + exp(1 - a...
R/ProtWeaver-ColocPreds.R#L  58           score <- score + sum(diffs) / ...
R/ProtWeaver-ColocPreds.R#L  62       }...
R/ProtWeaver-ColocPreds.R#L  63       ctr <- ctr + 1...
R/ProtWeaver-ColocPreds.R#L  64       if (Verbose) setTxtProgressBar(pb,...
R/ProtWeaver-ColocPreds.R#L  66   }...
R/ProtWeaver-ColocPreds.R#L  67   if (Verbose) cat('\n')...
R/ProtWeaver-ColocPreds.R#L  68   n <- names(pw)[uvals]...
R/ProtWeaver-ColocPreds.R#L  69   pairscores <- as.simMat(pairscores, NA...
R/ProtWeaver-ColocPreds.R#L  70   m <- ifelse(max(pairscores, na.rm=TRUE...
R/ProtWeaver-ColocPreds.R#L  71   pairscores <- pairscores / m...
R/ProtWeaver-ColocPreds.R#L  72   Diag(pairscores) <- 1...
R/ProtWeaver-ColocPreds.R#L  73   return(pairscores)...
R/ProtWeaver-DMPreds.R#L  16                                   Subset...
R/ProtWeaver-DMPreds.R#L  17                                   MySpec...
R/ProtWeaver-DMPreds.R#L  18                                   precal...
R/ProtWeaver-DMPreds.R#L  19   if (!is.null(precalcSubset))...
R/ProtWeaver-DMPreds.R#L  21   else...
R/ProtWeaver-DMPreds.R#L  23   uvals <- subs$uvals...
R/ProtWeaver-DMPreds.R#L  24   evalmap <- subs$evalmap...
R/ProtWeaver-DMPreds.R#L  25   pl <- length(uvals)...
R/ProtWeaver-DMPreds.R#L  26   ...
R/ProtWeaver-DMPreds.R#L  27   if (is.null(precalcProfs)){...
R/ProtWeaver-DMPreds.R#L  32   } else {...
R/ProtWeaver-DMPreds.R#L  34   }...
R/ProtWeaver-DMPreds.R#L  35   ...
R/ProtWeaver-DMPreds.R#L  36   l <- ncol(CPs)...
R/ProtWeaver-DMPreds.R#L  37   if ( l == 1 ){...
R/ProtWeaver-DMPreds.R#L  41   }...
R/ProtWeaver-DMPreds.R#L  42   ...
R/ProtWeaver-DMPreds.R#L  43   MTCorrection <- tolower(MTCorrection)...
R/ProtWeaver-DMPreds.R#L  44   if ('speciestree' %in% MTCorrection){...
R/ProtWeaver-DMPreds.R#L  54   }...
R/ProtWeaver-DMPreds.R#L  55   if ('normalize' %in% MTCorrection){...
R/ProtWeaver-DMPreds.R#L  60       CPs[,i] <- (CPs[,i] - means[i]) / ...
R/ProtWeaver-DMPreds.R#L  62   }...
R/ProtWeaver-DMPreds.R#L  63   if ('satoaverage' %in% MTCorrection){...
R/ProtWeaver-DMPreds.R#L  69       if (Verbose) pb <- txtProgressBar(...
R/ProtWeaver-DMPreds.R#L  70       proj_op <- diag(nrow=nrow(CPs)) - ...
R/ProtWeaver-DMPreds.R#L  71       for ( i in seq_len(ncol(CPs)) ){...
R/ProtWeaver-DMPreds.R#L  74       }...
R/ProtWeaver-DMPreds.R#L  76       if (Verbose) pb <- txtProgressBar(...
R/ProtWeaver-DMPreds.R#L  77       for ( i in seq_len(ncol(CPs)) ){...
R/ProtWeaver-DMPreds.R#L  81           if ( !is.na(v[j]) )...
R/ProtWeaver-DMPreds.R#L  83           if ( Verbose ) setTxtProgressB...
R/ProtWeaver-DMPreds.R#L  86       }...
R/ProtWeaver-DMPreds.R#L  89   }...
R/ProtWeaver-DMPreds.R#L  90   ...
R/ProtWeaver-DMPreds.R#L  91   #pairscores <- matrix(NA, nrow=pl, nco...
R/ProtWeaver-DMPreds.R#L  92   #pairscores <- simMat(nelem=pl)...
R/ProtWeaver-DMPreds.R#L  93   pairscores <- rep(NA_real_, pl*(pl-1) ...
R/ProtWeaver-DMPreds.R#L  94   ctr <- 0...
R/ProtWeaver-DMPreds.R#L  95   if (Verbose) pb <- txtProgressBar(max=...
R/ProtWeaver-DMPreds.R#L  96   for ( i in seq_len(pl-1) ){...
R/ProtWeaver-DMPreds.R#L 102       pairscores[(ctr+1):(ctr+pl)] <- 0...
R/ProtWeaver-DMPreds.R#L 103       ctr <- ctr + length((i+1):pl)...
R/ProtWeaver-DMPreds.R#L 104       if (Verbose) setTxtProgressBar(pb,...
R/ProtWeaver-DMPreds.R#L 106       for ( j in (i+1):pl ){...
R/ProtWeaver-DMPreds.R#L 111           v2 <- CPs[,j]...
R/ProtWeaver-DMPreds.R#L 112           sd2 <- sd(v2, na.rm=TRUE)...
R/ProtWeaver-DMPreds.R#L 113           if (is.na(sd2) || sd2 == 0)...
R/ProtWeaver-DMPreds.R#L 115           else...
R/ProtWeaver-DMPreds.R#L 119           pairscores[ctr+1] <- ifelse(is...
R/ProtWeaver-DMPreds.R#L 123       }...
R/ProtWeaver-DMPreds.R#L 125   }...
R/ProtWeaver-DMPreds.R#L 126   if (Verbose) cat('\n')...
R/ProtWeaver-DMPreds.R#L 127   pairscores <- as.simMat(pairscores, NA...
R/ProtWeaver-DMPreds.R#L 128   Diag(pairscores) <- 1...
R/ProtWeaver-DMPreds.R#L 129   if ('partialcorrelation' %in% MTCorrec...
R/ProtWeaver-DMPreds.R#L 133       opsm <- pairscores...
R/ProtWeaver-DMPreds.R#L 134       pairscores <- pairscores[uvals, uv...
R/ProtWeaver-DMPreds.R#L 135       if (any(is.na(pairscores))){...
R/ProtWeaver-DMPreds.R#L 139       }...
R/ProtWeaver-DMPreds.R#L 142       d <- det(pairscores)...
R/ProtWeaver-DMPreds.R#L 143       if (d == 0){...
R/ProtWeaver-DMPreds.R#L 145       } else {...
R/ProtWeaver-DMPreds.R#L 151       }...
R/ProtWeaver-DMPreds.R#L 152       if ( !is.null(Subset) ){...
R/ProtWeaver-DMPreds.R#L 155       }...
R/ProtWeaver-DMPreds.R#L 158   }...
R/ProtWeaver-DMPreds.R#L 159   Diag(pairscores) <- 1...
R/ProtWeaver-DMPreds.R#L 160   ...
R/ProtWeaver-DMPreds.R#L 161   return(abs(pairscores))...
R/ProtWeaver-DMPreds.R#L 165                                    MySpe...
R/ProtWeaver-DMPreds.R#L 166   ...
R/ProtWeaver-DMPreds.R#L 167   if ( !is.null(MySpeciesTree) && is(MyS...
R/ProtWeaver-DMPreds.R#L 169   } else { ...
R/ProtWeaver-DMPreds.R#L 171                       'partialcorrelatio...
R/ProtWeaver-DMPreds.R#L 172   }...
R/ProtWeaver-DMPreds.R#L 173   ...
R/ProtWeaver-DMPreds.R#L 174   return(MirrorTree(pw, MTCorrection=MTC...
R/ProtWeaver-PAPreds.R#L  22                                precalcPr...
R/ProtWeaver-PAPreds.R#L  23   ...
R/ProtWeaver-PAPreds.R#L  24   if (!is.null(precalcSubset))...
R/ProtWeaver-PAPreds.R#L  26   else...
R/ProtWeaver-PAPreds.R#L  28   uvals <- subs$uvals...
R/ProtWeaver-PAPreds.R#L  29   evalmap <- subs$evalmap...
R/ProtWeaver-PAPreds.R#L  30   ...
R/ProtWeaver-PAPreds.R#L  31   if ( is.null(precalcProfs) ){...
R/ProtWeaver-PAPreds.R#L  34   } else {...
R/ProtWeaver-PAPreds.R#L  36   }...
R/ProtWeaver-PAPreds.R#L  37   l <- length(uvals)...
R/ProtWeaver-PAPreds.R#L  38   n <- names(pw)...
R/ProtWeaver-PAPreds.R#L  39   if ( l == 1 ){...
R/ProtWeaver-PAPreds.R#L  43   }...
R/ProtWeaver-PAPreds.R#L  44   ...
R/ProtWeaver-PAPreds.R#L  45   pairscores <- rep(NA_real_, l*(l-1)/2)...
R/ProtWeaver-PAPreds.R#L  46   ctr <- 0...
R/ProtWeaver-PAPreds.R#L  47   if (Verbose) pb <- txtProgressBar(max=...
R/ProtWeaver-PAPreds.R#L  48   for ( i in seq_len(l-1) ){...
R/ProtWeaver-PAPreds.R#L  52       uval2 <- uvals[j]...
R/ProtWeaver-PAPreds.R#L  53       accessor <- as.character(min(uval1...
R/ProtWeaver-PAPreds.R#L  54       entry <- max(uval1, uval2)...
R/ProtWeaver-PAPreds.R#L  55       if (is.null(evalmap) || entry %in%...
R/ProtWeaver-PAPreds.R#L  63       }...
R/ProtWeaver-PAPreds.R#L  64       ctr <- ctr + 1...
R/ProtWeaver-PAPreds.R#L  65       if (Verbose) setTxtProgressBar(pb,...
R/ProtWeaver-PAPreds.R#L  67   }...
R/ProtWeaver-PAPreds.R#L  68   if (Verbose) cat('\n')...
R/ProtWeaver-PAPreds.R#L  69   ...
R/ProtWeaver-PAPreds.R#L  70   n <- n[uvals]...
R/ProtWeaver-PAPreds.R#L  71   pairscores <- as.simMat(pairscores, NA...
R/ProtWeaver-PAPreds.R#L  72   Diag(pairscores) <- 0...
R/ProtWeaver-PAPreds.R#L  73   pairscores <- 1 - pairscores # because...
R/ProtWeaver-PAPreds.R#L  74   return(pairscores)...
R/ProtWeaver-PAPreds.R#L  78                                precalcPr...
R/ProtWeaver-PAPreds.R#L  79   if (!is.null(precalcSubset))...
R/ProtWeaver-PAPreds.R#L  81   else...
R/ProtWeaver-PAPreds.R#L  83   uvals <- subs$uvals...
R/ProtWeaver-PAPreds.R#L  84   evalmap <- subs$evalmap...
R/ProtWeaver-PAPreds.R#L  85   if ( is.null(precalcProfs) ){...
R/ProtWeaver-PAPreds.R#L  88   } else {...
R/ProtWeaver-PAPreds.R#L  90   }...
R/ProtWeaver-PAPreds.R#L  91   l <- length(uvals)...
R/ProtWeaver-PAPreds.R#L  92   n <- names(pw)...
R/ProtWeaver-PAPreds.R#L  93   if ( l == 1 ){...
R/ProtWeaver-PAPreds.R#L  97   }...
R/ProtWeaver-PAPreds.R#L  99   pairscores <- rep(NA_real_, l*(l-1)/2)...
R/ProtWeaver-PAPreds.R#L 100   nc <- ncol(pap)...
R/ProtWeaver-PAPreds.R#L 101   ctr <- 0...
R/ProtWeaver-PAPreds.R#L 102   if (Verbose) pb <- txtProgressBar(max=...
R/ProtWeaver-PAPreds.R#L 103   for ( i in seq_len(l-1) ){...
R/ProtWeaver-PAPreds.R#L 107       uval2 <- uvals[j]...
R/ProtWeaver-PAPreds.R#L 108       accessor <- as.character(min(uval1...
R/ProtWeaver-PAPreds.R#L 109       entry <- max(uval1, uval2)...
R/ProtWeaver-PAPreds.R#L 110       if (is.null(evalmap) || entry %in%...
R/ProtWeaver-PAPreds.R#L 113       }...
R/ProtWeaver-PAPreds.R#L 114       ctr <- ctr + 1...
R/ProtWeaver-PAPreds.R#L 115       if (Verbose) setTxtProgressBar(pb,...
R/ProtWeaver-PAPreds.R#L 117   }...
R/ProtWeaver-PAPreds.R#L 118   if (Verbose) cat('\n')...
R/ProtWeaver-PAPreds.R#L 119   ...
R/ProtWeaver-PAPreds.R#L 120   n <- n[uvals]...
R/ProtWeaver-PAPreds.R#L 121   pairscores <- as.simMat(pairscores, NA...
R/ProtWeaver-PAPreds.R#L 122   Diag(pairscores) <- 0...
R/ProtWeaver-PAPreds.R#L 123   mp <- max(pairscores, na.rm=TRUE)...
R/ProtWeaver-PAPreds.R#L 124   mp <- ifelse(mp==0, 1, mp)...
R/ProtWeaver-PAPreds.R#L 125   pairscores <- (mp - pairscores) / mp #...
R/ProtWeaver-PAPreds.R#L 126   return(pairscores)...
R/ProtWeaver-PAPreds.R#L 130                                         ...
R/ProtWeaver-PAPreds.R#L 131   if (!is.null(precalcSubset))...
R/ProtWeaver-PAPreds.R#L 133   else...
R/ProtWeaver-PAPreds.R#L 135   uvals <- subs$uvals...
R/ProtWeaver-PAPreds.R#L 136   evalmap <- subs$evalmap...
R/ProtWeaver-PAPreds.R#L 137   if ( is.null(precalcProfs) ){...
R/ProtWeaver-PAPreds.R#L 140   } else {...
R/ProtWeaver-PAPreds.R#L 142   }...
R/ProtWeaver-PAPreds.R#L 143   l <- length(uvals)...
R/ProtWeaver-PAPreds.R#L 144   n <- names(pw)...
R/ProtWeaver-PAPreds.R#L 145   if ( l == 1 ){...
R/ProtWeaver-PAPreds.R#L 149   }...
R/ProtWeaver-PAPreds.R#L 150   ...
R/ProtWeaver-PAPreds.R#L 151   n <- n[uvals]...
R/ProtWeaver-PAPreds.R#L 152   pairscores <- rep(NA_real_, l*(l-1)/2)...
R/ProtWeaver-PAPreds.R#L 153   ctr <- 0...
R/ProtWeaver-PAPreds.R#L 154   if (Verbose) pb <- txtProgressBar(max=...
R/ProtWeaver-PAPreds.R#L 155   for ( i in seq_len(l-1) ){...
R/ProtWeaver-PAPreds.R#L 159       uval2 <- uvals[j]...
R/ProtWeaver-PAPreds.R#L 160       accessor <- as.character(min(uval1...
R/ProtWeaver-PAPreds.R#L 161       entry <- max(uval1, uval2)...
R/ProtWeaver-PAPreds.R#L 162       if (is.null(evalmap) || entry %in%...
R/ProtWeaver-PAPreds.R#L 182           val <- jpd[k] * log(jpd[k] / (...
R/ProtWeaver-PAPreds.R#L 183           score <- score + ifelse(is.nan...
R/ProtWeaver-PAPreds.R#L 186       }...
R/ProtWeaver-PAPreds.R#L 187       ctr <- ctr + 1...
R/ProtWeaver-PAPreds.R#L 188       if (Verbose) setTxtProgressBar(pb,...
R/ProtWeaver-PAPreds.R#L 190   }...
R/ProtWeaver-PAPreds.R#L 191   if (Verbose) cat('\n')...
R/ProtWeaver-PAPreds.R#L 192   ...
R/ProtWeaver-PAPreds.R#L 193   # Correction...
R/ProtWeaver-PAPreds.R#L 194   apccorr <- mean(pairscores, na.rm=TRUE...
R/ProtWeaver-PAPreds.R#L 195   pairscores <- pairscores - apccorr...
R/ProtWeaver-PAPreds.R#L 196   pairscores <- abs(pairscores)...
R/ProtWeaver-PAPreds.R#L 197   # Normalize...
R/ProtWeaver-PAPreds.R#L 198   denom <- max(pairscores, na.rm=TRUE)...
R/ProtWeaver-PAPreds.R#L 199   pairscores <- pairscores / ifelse(deno...
R/ProtWeaver-PAPreds.R#L 200   pairscores <- as.simMat(pairscores, NA...
R/ProtWeaver-PAPreds.R#L 201   Diag(pairscores) <- 1...
R/ProtWeaver-PAPreds.R#L 202   #pairscores <- pairscores #because dis...
R/ProtWeaver-PAPreds.R#L 203   return(pairscores)...
R/ProtWeaver-PAPreds.R#L 207                                   precal...
R/ProtWeaver-PAPreds.R#L 208   if (!is.null(precalcSubset))...
R/ProtWeaver-PAPreds.R#L 210   else...
R/ProtWeaver-PAPreds.R#L 212   uvals <- subs$uvals...
R/ProtWeaver-PAPreds.R#L 213   ...
R/ProtWeaver-PAPreds.R#L 214   if ( is.null(precalcProfs) ){...
R/ProtWeaver-PAPreds.R#L 217   } else {...
R/ProtWeaver-PAPreds.R#L 219   }...
R/ProtWeaver-PAPreds.R#L 220   l <- ncol(pap)...
R/ProtWeaver-PAPreds.R#L 221   n <- colnames(pap)...
R/ProtWeaver-PAPreds.R#L 222   if ( l == 1 ){...
R/ProtWeaver-PAPreds.R#L 226   }...
R/ProtWeaver-PAPreds.R#L 227   ...
R/ProtWeaver-PAPreds.R#L 228   pairscores <- DCA_logRISE(pap, Verbose...
R/ProtWeaver-PAPreds.R#L 229   rownames(pairscores) <- colnames(pairs...
R/ProtWeaver-PAPreds.R#L 230   pairscores <- as.simMat(pairscores)...
R/ProtWeaver-PAPreds.R#L 231   if (useAbs) pairscores <- abs(pairscor...
R/ProtWeaver-PAPreds.R#L 232   if (max(pairscores) != 0)...
R/ProtWeaver-PAPreds.R#L 234   ...
R/ProtWeaver-PAPreds.R#L 235   return(pairscores)...
R/ProtWeaver-PAPreds.R#L 243   stopifnot('No species tree provided.'=...
R/ProtWeaver-PAPreds.R#L 244   stopifnot("Method 'Behdenna' requires ...
R/ProtWeaver-PAPreds.R#L 245   if (!is.null(precalcSubset))...
R/ProtWeaver-PAPreds.R#L 247   else...
R/ProtWeaver-PAPreds.R#L 249   uvals <- subs$uvals...
R/ProtWeaver-PAPreds.R#L 250   evalmap <- subs$evalmap...
R/ProtWeaver-PAPreds.R#L 251   ...
R/ProtWeaver-PAPreds.R#L 252   if ( is.null(precalcProfs) ){...
R/ProtWeaver-PAPreds.R#L 255   } else {...
R/ProtWeaver-PAPreds.R#L 257   }...
R/ProtWeaver-PAPreds.R#L 258   l <- length(uvals)...
R/ProtWeaver-PAPreds.R#L 259   stopifnot(nrow(pap) > 1)...
R/ProtWeaver-PAPreds.R#L 260   fd <- FastDend(MySpeciesTree)...
R/ProtWeaver-PAPreds.R#L 261   v1 <- abs(generateGainLossVec(fd, pap[...
R/ProtWeaver-PAPreds.R#L 262   glmat <- matrix(0, nrow=length(v1), nc...
R/ProtWeaver-PAPreds.R#L 263   glmat[,1] <- v1...
R/ProtWeaver-PAPreds.R#L 264   if (Verbose) cat('  Calculating gain/l...
R/ProtWeaver-PAPreds.R#L 265   if (Verbose) pb <- txtProgressBar(max=...
R/ProtWeaver-PAPreds.R#L 266   for ( i in 2:ncol(pap) ){...
R/ProtWeaver-PAPreds.R#L 269   }...
R/ProtWeaver-PAPreds.R#L 270   ...
R/ProtWeaver-PAPreds.R#L 271   vals <- calc_SId_mat(fd, IdOnly=!useSu...
R/ProtWeaver-PAPreds.R#L 272   if (useSubtree)...
R/ProtWeaver-PAPreds.R#L 274   else...
R/ProtWeaver-PAPreds.R#L 276   Cmat <- vals$Cmat...
R/ProtWeaver-PAPreds.R#L 277   bl <- vals$blengths...
R/ProtWeaver-PAPreds.R#L 278   ...
R/ProtWeaver-PAPreds.R#L 279   glmat <- abs(glmat)...
R/ProtWeaver-PAPreds.R#L 280   #pairscores <- matrix(NA, nrow=l, ncol...
R/ProtWeaver-PAPreds.R#L 281   #pairscores <- simMat(nelem=l, NAMES=n...
R/ProtWeaver-PAPreds.R#L 282   pairscores <- rep(NA_real_, l*(l-1)/2)...
R/ProtWeaver-PAPreds.R#L 283   ...
R/ProtWeaver-PAPreds.R#L 284   ctr <- 0...
R/ProtWeaver-PAPreds.R#L 285   if (Verbose) cat('\n  Calculating pair...
R/ProtWeaver-PAPreds.R#L 286   if (Verbose) pb <- txtProgressBar(max=...
R/ProtWeaver-PAPreds.R#L 287   for ( i in seq_len(l-1)){...
R/ProtWeaver-PAPreds.R#L 292       uval2 <- uvals[j]...
R/ProtWeaver-PAPreds.R#L 293       accessor <- as.character(min(uval1...
R/ProtWeaver-PAPreds.R#L 294       entry <- max(uval1, uval2)...
R/ProtWeaver-PAPreds.R#L 295       if (is.null(evalmap) || entry %in%...
R/ProtWeaver-PAPreds.R#L 300           score <- t(gl1) %*% M %*% gl2...
R/ProtWeaver-PAPreds.R#L 301           exp_mean <- n2 * (t(gl1) %*% M...
R/ProtWeaver-PAPreds.R#L 302           exp_var <- n2*t(gl1) %*% M %*%...
R/ProtWeaver-PAPreds.R#L 303           score <- (score - exp_mean) / ...
R/ProtWeaver-PAPreds.R#L 306       }...
R/ProtWeaver-PAPreds.R#L 307       ctr <- ctr + 1...
R/ProtWeaver-PAPreds.R#L 308       if (Verbose) setTxtProgressBar(pb,...
R/ProtWeaver-PAPreds.R#L 310   }...
R/ProtWeaver-PAPreds.R#L 311   if (Verbose) cat('\n')...
R/ProtWeaver-PAPreds.R#L 312   ...
R/ProtWeaver-PAPreds.R#L 313   if (!rawZScores){...
R/ProtWeaver-PAPreds.R#L 316                                       ma...
R/ProtWeaver-PAPreds.R#L 318   }...
R/ProtWeaver-PAPreds.R#L 319   ...
R/ProtWeaver-PAPreds.R#L 320   n <- names(pw)[uvals]...
R/ProtWeaver-PAPreds.R#L 321   pairscores <- as.simMat(pairscores, NA...
R/ProtWeaver-PAPreds.R#L 322   Diag(pairscores) <- ifelse(rawZScores,...
R/ProtWeaver-PAPreds.R#L 323   ...
R/ProtWeaver-PAPreds.R#L 324   return(pairscores)...
R/ProtWeaver-ResiduePreds.R#L  14                                  precalc...
R/ProtWeaver-ResiduePreds.R#L  15   useResidue <- attr(pw, 'useResidue')...
R/ProtWeaver-ResiduePreds.R#L  16   useMT <- attr(pw, 'useMT')...
R/ProtWeaver-ResiduePreds.R#L  17   useColoc <- attr(pw, 'useColoc')...
R/ProtWeaver-ResiduePreds.R#L  18   ...
R/ProtWeaver-ResiduePreds.R#L  19   stopifnot('ProtWeaver object must be i...
R/ProtWeaver-ResiduePreds.R#L  20               useMT)...
R/ProtWeaver-ResiduePreds.R#L  21   stopifnot('ProtWeaver dendrograms must...
R/ProtWeaver-ResiduePreds.R#L  22               useResidue)...
R/ProtWeaver-ResiduePreds.R#L  23   ...
R/ProtWeaver-ResiduePreds.R#L  24   if (!is.null(precalcSubset))...
R/ProtWeaver-ResiduePreds.R#L  26   else...
R/ProtWeaver-ResiduePreds.R#L  28   ...
R/ProtWeaver-ResiduePreds.R#L  29   uvals <- subs$uvals...
R/ProtWeaver-ResiduePreds.R#L  30   evalmap <- subs$evalmap...
R/ProtWeaver-ResiduePreds.R#L  31   l <- length(uvals)...
R/ProtWeaver-ResiduePreds.R#L  32   n <- names(pw)...
R/ProtWeaver-ResiduePreds.R#L  33   if ( l == 1 ){...
R/ProtWeaver-ResiduePreds.R#L  37   }...
R/ProtWeaver-ResiduePreds.R#L  38   ...
R/ProtWeaver-ResiduePreds.R#L  39   pairscores <- rep(NA_real_, l*(l-1)/2)...
R/ProtWeaver-ResiduePreds.R#L  40   ctr <- 0...
R/ProtWeaver-ResiduePreds.R#L  41   if (Verbose) pb <- txtProgressBar(max=...
R/ProtWeaver-ResiduePreds.R#L  42   for ( i in seq_len(l-1) ){...
R/ProtWeaver-ResiduePreds.R#L  46       uval2 <- uvals[j]...
R/ProtWeaver-ResiduePreds.R#L  47       accessor <- as.character(min(uval1...
R/ProtWeaver-ResiduePreds.R#L  48       entry <- max(uval1, uval2)...
R/ProtWeaver-ResiduePreds.R#L  49       if (i!=j && (is.null(evalmap) || e...
R/ProtWeaver-ResiduePreds.R#L  52       }...
R/ProtWeaver-ResiduePreds.R#L  53       ctr <- ctr + 1...
R/ProtWeaver-ResiduePreds.R#L  54       if (Verbose) setTxtProgressBar(pb,...
R/ProtWeaver-ResiduePreds.R#L  56   }...
R/ProtWeaver-ResiduePreds.R#L  57   n <- n[uvals]...
R/ProtWeaver-ResiduePreds.R#L  58   pairscores <- as.simMat(pairscores, NA...
R/ProtWeaver-ResiduePreds.R#L  59   Diag(pairscores) <- 1...
R/ProtWeaver-ResiduePreds.R#L  60   if (Verbose) cat('\n')...
R/ProtWeaver-ResiduePreds.R#L  61   ...
R/ProtWeaver-ResiduePreds.R#L  62   return(pairscores)...
R/ProtWeaver-utils.R#L  11                                   specie...
R/ProtWeaver-utils.R#L  12   cols <- names(pw)...
R/ProtWeaver-utils.R#L  13   ao <- attr(pw, 'allOrgs')...
R/ProtWeaver-utils.R#L  14   if (!is.null(speciesList)){...
R/ProtWeaver-utils.R#L  17   } else {...
R/ProtWeaver-utils.R#L  19   }...
R/ProtWeaver-utils.R#L  20   useColoc <- attr(pw, 'useColoc')...
R/ProtWeaver-utils.R#L  21   useMT <- attr(pw, 'useMT')...
R/ProtWeaver-utils.R#L  22   if (useMT)...
R/ProtWeaver-utils.R#L  24   if (useColoc)...
R/ProtWeaver-utils.R#L  26   ...
R/ProtWeaver-utils.R#L  27   skip <- FALSE...
R/ProtWeaver-utils.R#L  28   if ( !is.null(toEval) ){...
R/ProtWeaver-utils.R#L  31   }...
R/ProtWeaver-utils.R#L  32   profiles <- matrix(FALSE, nrow=length(...
R/ProtWeaver-utils.R#L  33   rownames(profiles) <- allOrgs...
R/ProtWeaver-utils.R#L  34   colnames(profiles) <- cols...
R/ProtWeaver-utils.R#L  35   if (Verbose) pb <- txtProgressBar(max=...
R/ProtWeaver-utils.R#L  36   for ( i in seq_len(length(pw)) ){...
R/ProtWeaver-utils.R#L  38       profiles[pw[[i]],i] <- TRUE...
R/ProtWeaver-utils.R#L  40   }...
R/ProtWeaver-utils.R#L  41   if (Verbose) cat('\n')...
R/ProtWeaver-utils.R#L  42   if (!is.null(toEval))...
R/ProtWeaver-utils.R#L  44   return(profiles)...
R/ProtWeaver-utils.R#L  49   ## TODO: Some way to handle paralogs...
R/ProtWeaver-utils.R#L  50   cols <- names(pw)...
R/ProtWeaver-utils.R#L  51   ao <- attr(pw, 'allOrgs')...
R/ProtWeaver-utils.R#L  52   if (!is.null(speciesList)){...
R/ProtWeaver-utils.R#L  55   } else {...
R/ProtWeaver-utils.R#L  57   }...
R/ProtWeaver-utils.R#L  58   useColoc <- attr(pw, 'useColoc')...
R/ProtWeaver-utils.R#L  59   useMT <- attr(pw, 'useMT')...
R/ProtWeaver-utils.R#L  60   ...
R/ProtWeaver-utils.R#L  61   stopifnot('ProtWeaver object must be i...
R/ProtWeaver-utils.R#L  62               useMT)...
R/ProtWeaver-utils.R#L  63   ...
R/ProtWeaver-utils.R#L  64   skip <- FALSE...
R/ProtWeaver-utils.R#L  65   if ( !is.null(toEval) ){...
R/ProtWeaver-utils.R#L  68   }...
R/ProtWeaver-utils.R#L  69   l <- length(allOrgs)...
R/ProtWeaver-utils.R#L  70   num_entries <- (l * (l-1)) / 2...
R/ProtWeaver-utils.R#L  71   outmat <- matrix(0, nrow=num_entries, ...
R/ProtWeaver-utils.R#L  72   dummycoph <- matrix(NA, nrow=l, ncol=l...
R/ProtWeaver-utils.R#L  73   ut <- upper.tri(dummycoph)...
R/ProtWeaver-utils.R#L  74   rownames(dummycoph) <- colnames(dummyc...
R/ProtWeaver-utils.R#L  75   if (Verbose) pb <- txtProgressBar(max=...
R/ProtWeaver-utils.R#L  76   for ( i in seq_along(pw) ){...
R/ProtWeaver-utils.R#L  78       dummycoph[] <- NA...
R/ProtWeaver-utils.R#L  79       cop <- NA...
R/ProtWeaver-utils.R#L  80       # This is occasionally throwing er...
R/ProtWeaver-utils.R#L  81       cop <- as.matrix(Cophenetic(pw[[i]...
R/ProtWeaver-utils.R#L  82       copOrgNames <- rownames(cop)...
R/ProtWeaver-utils.R#L  83       if (useColoc){...
R/ProtWeaver-utils.R#L  85                               replacemen...
R/ProtWeaver-utils.R#L  87       }...
R/ProtWeaver-utils.R#L  88       dummycoph[copOrgNames, copOrgNames...
R/ProtWeaver-utils.R#L  89       outmat[,i] <- dummycoph[ut]...
R/ProtWeaver-utils.R#L  92   }...
R/ProtWeaver-utils.R#L  93   if(Verbose) cat('\n')...
R/ProtWeaver-utils.R#L  94   colnames(outmat) <- cols...
R/ProtWeaver-utils.R#L  95   if (!is.null(toEval)){...
R/ProtWeaver-utils.R#L 100   }...
R/ProtWeaver-utils.R#L 101   return(outmat)...
R/ProtWeaver-utils.R#L 105   pl <- length(pw)...
R/ProtWeaver-utils.R#L 106   evalmap <- NULL...
R/ProtWeaver-utils.R#L 107   uvals <- seq_len(pl)...
R/ProtWeaver-utils.R#L 108   if (!is.null(Subset)){...
R/ProtWeaver-utils.R#L 113       if( ncol(Subset) != 2)...
R/ProtWeaver-utils.R#L 115       if( is(Subset[1], 'character') ){...
R/ProtWeaver-utils.R#L 117       }...
R/ProtWeaver-utils.R#L 118       for ( i in seq_len(nrow(Subset))){...
R/ProtWeaver-utils.R#L 123       }...
R/ProtWeaver-utils.R#L 124       uvals <- unique(c(Subset))...
R/ProtWeaver-utils.R#L 126       if (is(Subset, 'character'))...
R/ProtWeaver-utils.R#L 128       if (length(Subset)==1){...
R/ProtWeaver-utils.R#L 131           evalmap <- lapply(seq_len(entr...
R/ProtWeaver-utils.R#L 133           evalmap <- list()...
R/ProtWeaver-utils.R#L 137           evalmap[[entry]] <- seq(entry+...
R/ProtWeaver-utils.R#L 141       } else {...
R/ProtWeaver-utils.R#L 145       }...
R/ProtWeaver-utils.R#L 147   }...
R/ProtWeaver-utils.R#L 148   ...
R/ProtWeaver-utils.R#L 149   return(list(evalmap=evalmap, uvals=uva...
R/ProtWeaver-utils.R#L 153   val <- lapply(dend, ...
R/ProtWeaver-utils.R#L 155                   if (is.null(attr(x, 'l...
R/ProtWeaver-utils.R#L 159                   } ...
R/ProtWeaver-utils.R#L 160                   else if (!is(LEAFFUN, ...
R/ProtWeaver-utils.R#L 162                   else ...
R/ProtWeaver-utils.R#L 165   )...
R/ProtWeaver-utils.R#L 166   retval <- unlist(val, recursive=FALSE)...
R/ProtWeaver-utils.R#L 167   if (!INCLUDEROOT)...
R/ProtWeaver-utils.R#L 169   ...
R/ProtWeaver-utils.R#L 170   return(retval)...
R/ProtWeaver-utils.R#L 174   stopifnot(length(preds) > 0)...
R/ProtWeaver-utils.R#L 175   n <- names(preds)...
R/ProtWeaver-utils.R#L 176   prednames <- names(preds[[1]])...
R/ProtWeaver-utils.R#L 177   lp <- length(prednames)...
R/ProtWeaver-utils.R#L 178   v1 <- v2 <- character(lp*(lp+1)/2)...
R/ProtWeaver-utils.R#L 179   ctr <- 1...
R/ProtWeaver-utils.R#L 180   # can't use expand.grid because of dup...
R/ProtWeaver-utils.R#L 181   for ( i in seq_len(lp) ){...
R/ProtWeaver-utils.R#L 183       v1[ctr] <- prednames[i]...
R/ProtWeaver-utils.R#L 184       v2[ctr] <- prednames[j]...
R/ProtWeaver-utils.R#L 185       ctr <- ctr + 1...
R/ProtWeaver-utils.R#L 187   }...
R/ProtWeaver-utils.R#L 188   AdjDf <- data.frame(Gene1=v1, Gene2=v2...
R/ProtWeaver-utils.R#L 189   if (Verbose) pb <- txtProgressBar(max=...
R/ProtWeaver-utils.R#L 190   for ( i in seq_len(length(n))){...
R/ProtWeaver-utils.R#L 193   }...
R/ProtWeaver-utils.R#L 194   cat('\n')...
R/ProtWeaver-utils.R#L 195   ...
R/ProtWeaver-utils.R#L 196   nc <- ncol(AdjDf)...
R/ProtWeaver-utils.R#L 197   rtk <- vapply(seq_len(nrow(AdjDf)), fu...
R/ProtWeaver-utils.R#L 199   AdjDf <- AdjDf[rtk,]...
R/ProtWeaver-utils.R#L 200   rownames(AdjDf) <- NULL...
R/ProtWeaver-utils.R#L 201   return(AdjDf)...
R/ProtWeaver-utils.R#L 205   l <- nrow(paps)...
R/ProtWeaver-utils.R#L 206   ocv1 <- vapply(predDf[,1], function(x)...
R/ProtWeaver-utils.R#L 207   ocv2 <- vapply(predDf[,2], function(x)...
R/ProtWeaver-utils.R#L 208   ...
R/ProtWeaver-utils.R#L 209   d <- abs(ocv1 - ocv2)...
R/ProtWeaver-utils.R#L 210   av <- (ocv1 + ocv2) / 2...
R/ProtWeaver-utils.R#L 211   return(list(avg=av, diff=d))...
R/ProtWeaver-utils.R#L 215   # Checks if a dendrogram is bifurcatin...
R/ProtWeaver-utils.R#L 216   helperfunc <- function(node){...
R/ProtWeaver-utils.R#L 220   }...
R/ProtWeaver-utils.R#L 221   return(helperfunc(dend))...
R/ProtWeaver-utils.R#L 225   sigi <- spins[,i]...
R/ProtWeaver-utils.R#L 226   sigj <- spins[,-i]...
R/ProtWeaver-utils.R#L 227   Hi <- params[i]...
R/ProtWeaver-utils.R#L 228   Jij <- params[-i]...
R/ProtWeaver-utils.R#L 229   ...
R/ProtWeaver-utils.R#L 230   sigprods <- sigi * sigj...
R/ProtWeaver-utils.R#L 231   firstterm <- colSums(Jij * t(sigprods)...
R/ProtWeaver-utils.R#L 232   secondterm <- Hi * sigi...
R/ProtWeaver-utils.R#L 233   Si <- mean(exp( -1 * (firstterm + seco...
R/ProtWeaver-utils.R#L 234   ...
R/ProtWeaver-utils.R#L 235   regularizer <- R * sum(abs(Jij))...
R/ProtWeaver-utils.R#L 236   retval <- log(Si + regularizer)...
R/ProtWeaver-utils.R#L 237   print(retval)...
R/ProtWeaver-utils.R#L 238   if (is.infinite(retval)){...
R/ProtWeaver-utils.R#L 240   }...
R/ProtWeaver-utils.R#L 241   return(retval)...
R/ProtWeaver-utils.R#L 245   grad <- numeric(length(params))...
R/ProtWeaver-utils.R#L 246   ...
R/ProtWeaver-utils.R#L 247   sigi <- spins[,i]...
R/ProtWeaver-utils.R#L 248   sigj <- spins[,-i]...
R/ProtWeaver-utils.R#L 249   Hi <- params[i]...
R/ProtWeaver-utils.R#L 250   Jij <- params[-i]...
R/ProtWeaver-utils.R#L 251   ...
R/ProtWeaver-utils.R#L 252   #Calculate gradient...
R/ProtWeaver-utils.R#L 253   sigprods <- sigi * sigj...
R/ProtWeaver-utils.R#L 254   firstterm <- colSums(Jij * t(sigprods)...
R/ProtWeaver-utils.R#L 255   secondterm <- Hi * sigi...
R/ProtWeaver-utils.R#L 256   interior <- exp(-1 * firstterm + secon...
R/ProtWeaver-utils.R#L 257   entries <- interior * sigi * sigj...
R/ProtWeaver-utils.R#L 258   Si <- mean(interior)...
R/ProtWeaver-utils.R#L 259   if (is.null(dim(entries))){...
R/ProtWeaver-utils.R#L 261   }...
R/ProtWeaver-utils.R#L 262   else...
R/ProtWeaver-utils.R#L 264   Hpartial <- mean(interior * sigi) / Si...
R/ProtWeaver-utils.R#L 265   grad[-i] <- Jpartials...
R/ProtWeaver-utils.R#L 266   grad[i] <- Hpartial...
R/ProtWeaver-utils.R#L 267   return(grad)...
R/ProtWeaver-utils.R#L 271   if (NumCores != 1){...
R/ProtWeaver-utils.R#L 274       NumCores <- 1...
R/ProtWeaver-utils.R#L 276       NumCores <- ifelse(NumCores < 0, a...
R/ProtWeaver-utils.R#L 277   }...
R/ProtWeaver-utils.R#L 278   nnodes <- ncol(spins)...
R/ProtWeaver-utils.R#L 279   if (printProgress){...
R/ProtWeaver-utils.R#L 283   }...
R/ProtWeaver-utils.R#L 284   ...
R/ProtWeaver-utils.R#L 285   if (printProgress) cat('  |')...
R/ProtWeaver-utils.R#L 286   links <- simplify2array(mclapply(seq_l...
R/ProtWeaver-utils.R#L 287                                    funct...
R/ProtWeaver-utils.R#L 288                                      pro...
R/ProtWeaver-utils.R#L 289                                      val...
R/ProtWeaver-utils.R#L 290                                         ...
R/ProtWeaver-utils.R#L 291                                         ...
R/ProtWeaver-utils.R#L 292                                         ...
R/ProtWeaver-utils.R#L 293                                         ...
R/ProtWeaver-utils.R#L 294                                      if ...
R/ProtWeaver-utils.R#L 295                                        s...
R/ProtWeaver-utils.R#L 296                                      ret...
R/ProtWeaver-utils.R#L 297                                    }, mc...
R/ProtWeaver-utils.R#L 298   )...
R/ProtWeaver-utils.R#L 299   )...
R/ProtWeaver-utils.R#L 300   if (printProgress) cat('| ')...
R/ProtWeaver-utils.R#L 301   for ( i in seq_len(nrow(links)-1) ){...
R/ProtWeaver-utils.R#L 303       links[i,j] <- links[j,i] <- mean(l...
R/ProtWeaver-utils.R#L 305   }...
R/ProtWeaver-utils.R#L 306   ...
R/ProtWeaver-utils.R#L 307   if (printProgress) cat('\n  Done.\n  E...
R/ProtWeaver-utils.R#L 308   # Shrink close to zero to zero...
R/ProtWeaver-utils.R#L 309   vals <- links[upper.tri(links)]...
R/ProtWeaver-utils.R#L 310   h <- hist(vals, breaks=40, plot=FALSE)...
R/ProtWeaver-utils.R#L 311   bin0 <- which(h$breaks==0)...
R/ProtWeaver-utils.R#L 312   countsNorm <- h$counts == 0...
R/ProtWeaver-utils.R#L 313   lb <- length(countsNorm)...
R/ProtWeaver-utils.R#L 314   if (length(bin0) != 0 && lb > bin0){...
R/ProtWeaver-utils.R#L 322       tmp <- which(up)...
R/ProtWeaver-utils.R#L 323       double_up <- ifelse(length(tmp) !=...
R/ProtWeaver-utils.R#L 325       double_up <- double_up[1]...
R/ProtWeaver-utils.R#L 330       tmp <- which(down)...
R/ProtWeaver-utils.R#L 331       double_down <- ifelse(length(tmp) ...
R/ProtWeaver-utils.R#L 333       double_down <- double_down[1]...
R/ProtWeaver-utils.R#L 340   } ...
R/ProtWeaver-utils.R#L 341   ...
R/ProtWeaver-utils.R#L 342   max_degree <- max(rowSums(links != 0))...
R/ProtWeaver-utils.R#L 343   max_val <- max(links) * 2 #conservativ...
R/ProtWeaver-utils.R#L 344   bounding <- exp(max_degree * max_val)...
R/ProtWeaver-utils.R#L 345   if (printProgress) cat('  Refining edg...
R/ProtWeaver-utils.R#L 346   ...
R/ProtWeaver-utils.R#L 347   if (printProgress) cat('  |')...
R/ProtWeaver-utils.R#L 348   links <- simplify2array(...
R/ProtWeaver-utils.R#L 350              function(i) {...
R/ProtWeaver-utils.R#L 351                probs <- links[,i]...
R/ProtWeaver-utils.R#L 352                mask <- seq_len(nnodes) =...
R/ProtWeaver-utils.R#L 353                nonzeros <- (probs != 0) ...
R/ProtWeaver-utils.R#L 354                adjustment <- ifelse(i==1...
R/ProtWeaver-utils.R#L 355                ...
R/ProtWeaver-utils.R#L 356                if ( sum(nonzeros) > 1 ){...
R/ProtWeaver-utils.R#L 357                  pspins <- spins[,nonzer...
R/ProtWeaver-utils.R#L 358                  pprobs <- probs[nonzero...
R/ProtWeaver-utils.R#L 359                  val <- optim(pprobs, DC...
R/ProtWeaver-utils.R#L 360                               gr=DCA_gra...
R/ProtWeaver-utils.R#L 361                               method='L-...
R/ProtWeaver-utils.R#L 362                               lower=-bou...
R/ProtWeaver-utils.R#L 363                               R=0, spins...
R/ProtWeaver-utils.R#L 364                  probs[nonzeros] <- val...
R/ProtWeaver-utils.R#L 365                }...
R/ProtWeaver-utils.R#L 366                if (printProgress && char...
R/ProtWeaver-utils.R#L 367                return(probs)...
R/ProtWeaver-utils.R#L 368              }, ...
R/ProtWeaver-utils.R#L 369              mc.cores=NumCores, mc.presc...
R/ProtWeaver-utils.R#L 370   if (printProgress) cat('| ')...
R/ProtWeaver-utils.R#L 371   ...
R/ProtWeaver-utils.R#L 372   for ( i in seq_len(nrow(links)-1) ){...
R/ProtWeaver-utils.R#L 374       links[i,j] <- links[j,i] <- mean(l...
R/ProtWeaver-utils.R#L 376   }...
R/ProtWeaver-utils.R#L 377   ...
R/ProtWeaver-utils.R#L 378   if (max(abs(links)) != 0)...
R/ProtWeaver-utils.R#L 380   if (printProgress) cat('\n  Done.\n')...
R/ProtWeaver-utils.R#L 381   return(links)...
R/ProtWeaver-utils.R#L 387   ...
R/ProtWeaver-utils.R#L 388   mult <- 1/niter...
R/ProtWeaver-utils.R#L 389   intPA <- PAProfiles + 0...
R/ProtWeaver-utils.R#L 390   intPA[intPA==0] <- -1...
R/ProtWeaver-utils.R#L 391   nc <- ncol(intPA)...
R/ProtWeaver-utils.R#L 392   pp <- FALSE...
R/ProtWeaver-utils.R#L 393   ...
R/ProtWeaver-utils.R#L 394   if (Verbose & niter==1) pp <- TRUE  ...
R/ProtWeaver-utils.R#L 395   else if (Verbose){...
R/ProtWeaver-utils.R#L 398   } ...
R/ProtWeaver-utils.R#L 399   ...
R/ProtWeaver-utils.R#L 400   truelinks <- countsmat <- matrix(0, nr...
R/ProtWeaver-utils.R#L 401   for ( i in seq_len(niter) ){...
R/ProtWeaver-utils.R#L 409   }...
R/ProtWeaver-utils.R#L 410   if(Verbose & !pp) cat('\n')...
R/ProtWeaver-utils.R#L 411   ...
R/ProtWeaver-utils.R#L 412   if (zero_cutoff > 0) {...
R/ProtWeaver-utils.R#L 417   } ...
R/ProtWeaver-utils.R#L 418   ...
R/ProtWeaver-utils.R#L 419   return(truelinks)...
R/ProtWeaver-utils.R#L 423   stopifnot("'pseudocount' must be an in...
R/ProtWeaver-utils.R#L 424   pseudocount <- min(0, pseudocount)...
R/ProtWeaver-utils.R#L 425   # Psuedocount=0.01 taken as default by...
R/ProtWeaver-utils.R#L 426   a <- .Call('calcMIcVec', v1, v2, uv, p...
R/ProtWeaver-utils.R#L 427   return(a)...
R/ProtWeaver-utils.R#L 431   on.exit(.C("cleanupFxn"))...
R/ProtWeaver-utils.R#L 432   stopifnot(nv == as.integer(nv))...
R/ProtWeaver-utils.R#L 433   stopifnot(nr == as.integer(nr))...
R/ProtWeaver-utils.R#L 434   stopifnot(all(fsp == as.integer(fsp)))...
R/ProtWeaver-utils.R#L 435   stopifnot(all(ssp == as.integer(ssp)))...
R/ProtWeaver-utils.R#L 436   ...
R/ProtWeaver-utils.R#L 437   a <- .Call('trimCovar', fm, as.integer...
R/ProtWeaver-utils.R#L 438   return(a)...
R/ProtWeaver-utils.R#L 442   if (useColoc){...
R/ProtWeaver-utils.R#L 445   } else {...
R/ProtWeaver-utils.R#L 448   }...
R/ProtWeaver-utils.R#L 449   completeSet <- intersect(l1, l2)...
R/ProtWeaver-utils.R#L 450   if (length(completeSet) == 0){...
R/ProtWeaver-utils.R#L 452   }...
R/ProtWeaver-utils.R#L 453   ...
R/ProtWeaver-utils.R#L 454   edges1 <- flatdendrapply(dend1, ...
R/ProtWeaver-utils.R#L 455                            \(x) list(val...
R/ProtWeaver-utils.R#L 456                                      sta...
R/ProtWeaver-utils.R#L 457                            NULL)...
R/ProtWeaver-utils.R#L 458   edges2 <- flatdendrapply(dend2, ...
R/ProtWeaver-utils.R#L 459                            \(x) list(val...
R/ProtWeaver-utils.R#L 460                                      sta...
R/ProtWeaver-utils.R#L 461                            NULL)...
R/ProtWeaver-utils.R#L 462   ...
R/ProtWeaver-utils.R#L 463   ...
R/ProtWeaver-utils.R#L 464   jsscore <- matrix(Inf, nrow=length(edg...
R/ProtWeaver-utils.R#L 465   for ( i in seq_along(edges1) ){...
R/ProtWeaver-utils.R#L 468       v2 <- intersect(edges2[[j]]$vals, ...
R/ProtWeaver-utils.R#L 469       s <- 1 - length(intersect(v1, v2))...
R/ProtWeaver-utils.R#L 470       jsscore[i,j] <- ifelse(is.nan(s), ...
R/ProtWeaver-utils.R#L 472   }...
R/ProtWeaver-utils.R#L 473   ...
R/ProtWeaver-utils.R#L 474   nr <- nrow(jsscore)...
R/ProtWeaver-utils.R#L 475   nc <- ncol(jsscore)...
R/ProtWeaver-utils.R#L 476   if (nr < nc){...
R/ProtWeaver-utils.R#L 484   }...
R/ProtWeaver-utils.R#L 485   #now guaranteed to have the larger dim...
R/ProtWeaver-utils.R#L 486   ...
R/ProtWeaver-utils.R#L 487   rownames(jsscore) <- as.character(seq_...
R/ProtWeaver-utils.R#L 488   colnames(jsscore) <- as.character(seq_...
R/ProtWeaver-utils.R#L 489   ...
R/ProtWeaver-utils.R#L 490   # I'm just using a greedy matching her...
R/ProtWeaver-utils.R#L 491   # and this also scales much better...
R/ProtWeaver-utils.R#L 492   pairings <- rep(NA, nc)...
R/ProtWeaver-utils.R#L 493   allvals <- rownames(jsscore)...
R/ProtWeaver-utils.R#L 494   for ( i in seq_len(nc) ){...
R/ProtWeaver-utils.R#L 498       pairings[i] <- ordered[pos]...
R/ProtWeaver-utils.R#L 499   }...
R/ProtWeaver-utils.R#L 500   # need to catch this here, in case we ...
R/ProtWeaver-utils.R#L 501   # random ones...
R/ProtWeaver-utils.R#L 502   checksum <- sum(is.na(pairings))...
R/ProtWeaver-utils.R#L 503   if (checksum > 0){...
R/ProtWeaver-utils.R#L 506   }...
R/ProtWeaver-utils.R#L 507   names(pairings) <- colnames(jsscore) ...
R/ProtWeaver-utils.R#L 508   ...
R/ProtWeaver-utils.R#L 509   seqset1 <- seqset2 <- NULL...
R/ProtWeaver-utils.R#L 510   n <- names(pairings)...
R/ProtWeaver-utils.R#L 511   for ( i in seq_along(pairings) ){...
R/ProtWeaver-utils.R#L 515       seqset1 <- BStringSet(edges1[[a1]]...
R/ProtWeaver-utils.R#L 516       seqset2 <- BStringSet(edges2[[a2]]...
R/ProtWeaver-utils.R#L 518       seqset1 <- append(seqset1, edges1[...
R/ProtWeaver-utils.R#L 519       seqset2 <- append(seqset2, edges2[...
R/ProtWeaver-utils.R#L 521   }...
R/ProtWeaver-utils.R#L 522   ...
R/ProtWeaver-utils.R#L 523   names(seqset1) <- names(seqset2) <- se...
R/ProtWeaver-utils.R#L 524   res <- MISeqLevel(seqset1, seqset2, co...
R/ProtWeaver-utils.R#L 525   return(res)...
R/ProtWeaver-utils.R#L 529   stopifnot('seqSets must be XStringSets...
R/ProtWeaver-utils.R#L 530   stopifnot('seqSetq sequences have diff...
R/ProtWeaver-utils.R#L 531               all(width(seqSet1) == widt...
R/ProtWeaver-utils.R#L 532   stopifnot('seqSet2 sequences have diff...
R/ProtWeaver-utils.R#L 533               all(width(seqSet2) == widt...
R/ProtWeaver-utils.R#L 534   stopifnot('compressionpct must be betw...
R/ProtWeaver-utils.R#L 535               compressionpct < 1 && comp...
R/ProtWeaver-utils.R#L 536   stopifnot('seqSets must be named'=!is....
R/ProtWeaver-utils.R#L 537   stopifnot('seqSets must be named'=all(...
R/ProtWeaver-utils.R#L 538   #stopifnot('Both inputs must be DNAStr...
R/ProtWeaver-utils.R#L 539   #            is(seqSet1, 'DNAStringSet...
R/ProtWeaver-utils.R#L 540   start2 <- width(seqSet1)[1] + 1...
R/ProtWeaver-utils.R#L 541   cali <- ConcatSeqs(seqSet1, seqSet2)...
R/ProtWeaver-utils.R#L 542   if (length(cali) == 0){...
R/ProtWeaver-utils.R#L 545   }...
R/ProtWeaver-utils.R#L 546   ...
R/ProtWeaver-utils.R#L 547   v <- CorrCompressSeqs(cali, start2, mv...
R/ProtWeaver-utils.R#L 548   if (!is.null(v$warn)){...
R/ProtWeaver-utils.R#L 551   }...
R/ProtWeaver-utils.R#L 552   compali <- v$xstrset...
R/ProtWeaver-utils.R#L 553   pos <- v$pos...
R/ProtWeaver-utils.R#L 554   newstart2 <- which.max(pos >= start2)...
R/ProtWeaver-utils.R#L 555   miscore <- CalcMIReduced(compali, news...
R/ProtWeaver-utils.R#L 556   ...
R/ProtWeaver-utils.R#L 557   # APC correction...
R/ProtWeaver-utils.R#L 558   nr <- nrow(miscore)...
R/ProtWeaver-utils.R#L 559   nc <- ncol(miscore)...
R/ProtWeaver-utils.R#L 560   if (nr == 0 || nc == 0){...
R/ProtWeaver-utils.R#L 562   }...
R/ProtWeaver-utils.R#L 563   APC_corr <- matrix(colMeans(miscore), ...
R/ProtWeaver-utils.R#L 565   miscore <- miscore - APC_corr...
R/ProtWeaver-utils.R#L 566   ...
R/ProtWeaver-utils.R#L 567   # scoring...
R/ProtWeaver-utils.R#L 568   miscore <- apply(abs(miscore), 2, max)...
R/ProtWeaver-utils.R#L 569   retval <- mean(miscore)...
R/ProtWeaver-utils.R#L 570   if (is.nan(retval)) ...
R/ProtWeaver-utils.R#L 572   return(retval)...
R/ProtWeaver-utils.R#L 576   unames <- intersect(names(seqSet1), na...
R/ProtWeaver-utils.R#L 577   concatAli <- xscat(seqSet1[unames], se...
R/ProtWeaver-utils.R#L 578   names(concatAli) <- unames...
R/ProtWeaver-utils.R#L 579   return(concatAli)...
R/ProtWeaver-utils.R#L 583                              gapLetters=...
R/ProtWeaver-utils.R#L 584                              uncertainty...
R/ProtWeaver-utils.R#L 585   freqMat <- consensusMatrix(myStringSet...
R/ProtWeaver-utils.R#L 586   freqMat <- freqMat[rowSums(freqMat) !=...
R/ProtWeaver-utils.R#L 587   freqMat <- freqMat + pseudocount...
R/ProtWeaver-utils.R#L 588   ...
R/ProtWeaver-utils.R#L 589   freqMat <- t(t(freqMat) / colSums(freq...
R/ProtWeaver-utils.R#L 590   ...
R/ProtWeaver-utils.R#L 591   ...
R/ProtWeaver-utils.R#L 592   to_keep <- rep(FALSE, ncol(freqMat))...
R/ProtWeaver-utils.R#L 593   nongaploc <- !(rownames(freqMat) %in% ...
R/ProtWeaver-utils.R#L 594   for ( i in seq_along(to_keep) ){...
R/ProtWeaver-utils.R#L 604   }...
R/ProtWeaver-utils.R#L 605   # Need a guard case here...
R/ProtWeaver-utils.R#L 606   if (!any(to_keep)){...
R/ProtWeaver-utils.R#L 608   }...
R/ProtWeaver-utils.R#L 609   trimmedFreqMat <- freqMat[,to_keep]...
R/ProtWeaver-utils.R#L 610   colnames(trimmedFreqMat) <- which(to_k...
R/ProtWeaver-utils.R#L 611   fm <- unique(trimmedFreqMat, MARGIN=2)...
R/ProtWeaver-utils.R#L 612   ...
R/ProtWeaver-utils.R#L 613   nc <- ncol(fm)...
R/ProtWeaver-utils.R#L 614   num_vals <- ceiling(mvalpct * nc) ...
R/ProtWeaver-utils.R#L 615   ...
R/ProtWeaver-utils.R#L 616   isInSecondSeq <- as.integer(colnames(f...
R/ProtWeaver-utils.R#L 617   s2 <- which.max(isInSecondSeq)...
R/ProtWeaver-utils.R#L 618   firstSeqPos <- seq_len(s2-1)...
R/ProtWeaver-utils.R#L 619   if (length(firstSeqPos) == 0){...
R/ProtWeaver-utils.R#L 621   }...
R/ProtWeaver-utils.R#L 622   secondSeqPos <- seq_len(length(isInSec...
R/ProtWeaver-utils.R#L 623   # keeping the entire covariance matrix...
R/ProtWeaver-utils.R#L 624   # this is more code but significantly ...
R/ProtWeaver-utils.R#L 625   # the cost is slightly more runtime...
R/ProtWeaver-utils.R#L 626   corrs <- CorrComp_C(fm, firstSeqPos, s...
R/ProtWeaver-utils.R#L 627   corrs <- unique(corrs)...
R/ProtWeaver-utils.R#L 628   if ( length(corrs) < num_vals ){...
R/ProtWeaver-utils.R#L 635   }...
R/ProtWeaver-utils.R#L 636   upositions <- sort(as.integer(colnames...
R/ProtWeaver-utils.R#L 637   subsetXStr <- extractAt(myStringSet, I...
R/ProtWeaver-utils.R#L 638   return(list(xstrset=unstrsplit(subsetX...
R/ProtWeaver-utils.R#L 642                           secondgroupsta...
R/ProtWeaver-utils.R#L 643   matxss <- as.matrix(trimmedXStringSet)...
R/ProtWeaver-utils.R#L 644   group1 <- seq_len(start2-1)...
R/ProtWeaver-utils.R#L 645   group2 <- seq_len(width(trimmedXString...
R/ProtWeaver-utils.R#L 646   ...
R/ProtWeaver-utils.R#L 647   u <- unique(c(matxss))...
R/ProtWeaver-utils.R#L 648   converter <- seq_len(length(u)) - 1L...
R/ProtWeaver-utils.R#L 649   names(converter) <- u...
R/ProtWeaver-utils.R#L 650   umat <- matrix(converter[matxss], ncol...
R/ProtWeaver-utils.R#L 651   scores <- matrix(NA, nrow=length(group...
R/ProtWeaver-utils.R#L 652   gapnum <- ifelse('-' %in% u, which(u==...
R/ProtWeaver-utils.R#L 653   numunique <- length(u) - (gapnum!=-1)...
R/ProtWeaver-utils.R#L 654   ctr <- 0...
R/ProtWeaver-utils.R#L 655   for ( i in seq_along(group1) ){...
R/ProtWeaver-utils.R#L 659       p2 <- umat[,group2[j]]...
R/ProtWeaver-utils.R#L 660       ...
R/ProtWeaver-utils.R#L 661       fullsub <- subsetloc & (p2 != gapn...
R/ProtWeaver-utils.R#L 662       p1p <- p1[fullsub]...
R/ProtWeaver-utils.R#L 663       p2p <- p2[fullsub]...
R/ProtWeaver-utils.R#L 664       MI <- MICalc_C(p1p, p2p, numunique...
R/ProtWeaver-utils.R#L 665       scores[i,j] <- MI...
R/ProtWeaver-utils.R#L 666       ctr <- ctr + 1...
R/ProtWeaver-utils.R#L 668   }...
R/ProtWeaver-utils.R#L 669   return(scores)...
R/ProtWeaver-utils.R#L 673   # Key: (val is binary + 1)...
R/ProtWeaver-utils.R#L 674   # 000 => 1: Jaccard, Hamming, MI, Prof...
R/ProtWeaver-utils.R#L 675   # 001 => 2: base and MT...
R/ProtWeaver-utils.R#L 676   # 010 => 3: base and Behdenna...
R/ProtWeaver-utils.R#L 677   # 011 => 4: base and Behdenna, MT...
R/ProtWeaver-utils.R#L 678   # 100 => 5: base and Coloc...
R/ProtWeaver-utils.R#L 679   # 101 => 6: base and Coloc, MT...
R/ProtWeaver-utils.R#L 680   # 110 => 7: base and Behdenna, Coloc...
R/ProtWeaver-utils.R#L 681   # 111 => 8: base and Behdenna, Coloc, ...
R/ProtWeaver-utils.R#L 682   modelsToUse <- rep(1, nrow(preds))...
R/ProtWeaver-utils.R#L 683   relevant_cnames <- c('MirrorTree', 'Be...
R/ProtWeaver-utils.R#L 684   pred_cnames <- colnames(preds)...
R/ProtWeaver-utils.R#L 685   for (i in seq_along(relevant_cnames)){...
R/ProtWeaver-utils.R#L 688       idxs <- !is.na(preds[,rcn])...
R/ProtWeaver-utils.R#L 689       modelsToUse[idxs] <- modelsToUse[i...
R/ProtWeaver-utils.R#L 691   }...
R/ProtWeaver-utils.R#L 692   builtins <- get(data('BuiltInEnsembles...
R/ProtWeaver-utils.R#L 693   if (all(modelsToUse == modelsToUse[1])...
R/ProtWeaver-utils.R#L 695   } else {...
R/ProtWeaver-utils.R#L 698       model <- builtins[[modelsToUse[i]]...
R/ProtWeaver-utils.R#L 699       builtInPredictions[i] <- predict(m...
R/ProtWeaver-utils.R#L 702   }...
R/ProtWeb-class.R#L  11                          MoveRate=0.25, ...
R/ProtWeb-class.R#L  12                          ColorPalette=to...
R/ProtWeb-class.R#L  13   ## Springy embedding...
R/ProtWeb-class.R#L  14   #...
R/ProtWeb-class.R#L  15   # Uses 3 forces:...
R/ProtWeb-class.R#L  16   # - Gravity (force towards (0,0))...
R/ProtWeb-class.R#L  17   # - Coulomb force (repels nodes)...
R/ProtWeb-class.R#L  18   # - Connection force...
R/ProtWeb-class.R#L  19   web <- as.matrix(x)...
R/ProtWeb-class.R#L  20   starttime <- Sys.time()...
R/ProtWeb-class.R#L  21   if (Verbose) cat('Finding a descriptiv...
R/ProtWeb-class.R#L  22   # Change similarity scores to distance...
R/ProtWeb-class.R#L  23   web <- abs(web)...
R/ProtWeb-class.R#L  24   web <- 1 - web...
R/ProtWeb-class.R#L  25   web[web<Cutoff] <- 0...
R/ProtWeb-class.R#L  26   ...
R/ProtWeb-class.R#L  27   # initialize to random values...
R/ProtWeb-class.R#L  28   embedding <- matrix(runif(2*nrow(web))...
R/ProtWeb-class.R#L  29   true_dists <- cur_dists <- unclass(web...
R/ProtWeb-class.R#L  30   if (Verbose) pb <- txtProgressBar(max=...
R/ProtWeb-class.R#L  31   for (iter in seq_len(NumSims)){...
R/ProtWeb-class.R#L  34       for ( j in i:nrow(cur_dists) )...
R/ProtWeb-class.R#L  44       for ( j in seq_len(nrow(embedding)...
R/ProtWeb-class.R#L  50       }...
R/ProtWeb-class.R#L  54   }...
R/ProtWeb-class.R#L  55   ...
R/ProtWeb-class.R#L  56   center <- c(mean(embedding[,1]), mean(...
R/ProtWeb-class.R#L  57   colsvec <- vapply(seq_len(nrow(embeddi...
R/ProtWeb-class.R#L  60   colors <- ColorPalette(length(colsvec)...
R/ProtWeb-class.R#L  61   embedding <- embedding[order(colsvec, ...
R/ProtWeb-class.R#L  62   if (Verbose)...
R/ProtWeb-class.R#L  66   plot(embedding[,1], embedding[,2], pch...
R/ProtWeb-class.R#L  67        xaxt='n', yaxt='n', ylab='', xlab...
R/ProtWeb-class.R#L  68        main='Force-directed embedding of...
R/ProtWeb-class.R#L  72   cat('a ProtWeb object.\n')...
R/ProtWeb-class.R#L  73   a <- attributes(object)...
R/ProtWeb-class.R#L  74   cat('\tMethod used:', a$method, '\n')...
R/ProtWeb-class.R#L  75   numGenes <- length(a$NAMES)...
R/ProtWeb-class.R#L  76   numPreds <- sum(!is.na(object))...
R/ProtWeb-class.R#L  77   cat('\tNumber of genes:', numGenes, '\...
R/ProtWeb-class.R#L  78   cat('\tNumber of predictions:', numPre...
R/ProtWeb-class.R#L  79   if ('model' %in% names(a)){...
R/ProtWeb-class.R#L  82   }...
R/ProtWeb-class.R#L  86   cat('a ProtWeb object.\n')...
R/ProtWeb-class.R#L  87   a <- attributes(object)...
R/ProtWeb-class.R#L  88   cat('\tMethod used:', a$method, '\n')...
R/ProtWeb-class.R#L  89   numGenes <- length(a$NAMES)...
R/ProtWeb-class.R#L  90   numPreds <- sum(!is.na(object))...
R/ProtWeb-class.R#L  91   cat('\tNumber of genes:', numGenes, '\...
R/ProtWeb-class.R#L  92   cat('\tNumber of predictions:', numPre...
R/ProtWeb-class.R#L  93   cat('\tPredictions:', numPreds, '\n\n'...
R/ProtWeb-class.R#L  94   NextMethod()...
R/ProtWeb-class.R#L  98   summary(x)...
R/ProtWeb-class.R#L  99   cat('\nPredictions:\n\n')...
R/ProtWeb-class.R#L 100   NextMethod()...
R/ProtWeb-class.R#L 105   # Fall through to 'simMat' function...
R/ProtWeb-class.R#L 106   NextMethod()...
R/ProtWeb-class.R#L 110   # Fall through to 'simMat' function...
R/ProtWeb-class.R#L 111   NextMethod()...
R/ProtWeb-class.R#L 115   stopifnot(is(preds,'matrix'))...
R/ProtWeb-class.R#L 116   pair_locs <- upper.tri(preds)...
R/ProtWeb-class.R#L 117   pairnames <- which(pair_locs, arr.ind=...
R/ProtWeb-class.R#L 118   pairentry1 <- rownames(preds)[pairname...
R/ProtWeb-class.R#L 119   pairentry2 <- colnames(preds)[pairname...
R/ProtWeb-class.R#L 120   AdjDf <- data.frame(Gene1=pairentry1, ...
R/ProtWeb-class.R#L 121   AdjDf[,'Prediction'] <- preds[pair_loc...
R/ProtWeb-class.R#L 122   ...
R/ProtWeb-class.R#L 123   nc <- ncol(AdjDf)...
R/ProtWeb-class.R#L 124   rtk <- vapply(seq_len(nrow(AdjDf)), fu...
R/ProtWeb-class.R#L 126   AdjDf <- AdjDf[rtk,]...
R/ProtWeb-class.R#L 127   rownames(AdjDf) <- NULL...
R/ProtWeb-class.R#L 128   return(AdjDf)...
R/SelectByK.R#L  15                       UserConfidence = 0...
R/SelectByK.R#L  16                       ClusterScalar = 1,...
R/SelectByK.R#L  17                       MaxClusters = 15L,...
R/SelectByK.R#L  18                       ReturnAllCommuniti...
R/SelectByK.R#L  19                       Verbose = FALSE,...
R/SelectByK.R#L  20                       ShowPlot = FALSE,...
R/SelectByK.R#L  21                       RetainHighest = TR...
R/SelectByK.R#L  22   # require both Score and PID...
R/SelectByK.R#L  23   if (!is(object = Pairs,...
R/SelectByK.R#L  24           class2 = "PairSummaries")) {...
R/SelectByK.R#L  26   }...
R/SelectByK.R#L  27   COLS <- colnames(Pairs)...
R/SelectByK.R#L  28   if (!all(c("SCORE", "PID") %in% COLS))...
R/SelectByK.R#L  30   }...
R/SelectByK.R#L  31   if (MaxClusters >= nrow(Pairs)) {...
R/SelectByK.R#L  33   }...
R/SelectByK.R#L  34   if (MaxClusters <= 2L) {...
R/SelectByK.R#L  36   }...
R/SelectByK.R#L  37   ...
R/SelectByK.R#L  38   # normalize score,...
R/SelectByK.R#L  39   # convert absolute matches to relative...
R/SelectByK.R#L  40   dat1 <- data.frame("RelativeMatch" = P...
R/SelectByK.R#L  41                      "Consensus" = Pairs...
R/SelectByK.R#L  42                      "PID" = Pairs$PID,...
R/SelectByK.R#L  43                      "SCORE" = Pairs$SCO...
R/SelectByK.R#L  44                      "TetDist" = Pairs$T...
R/SelectByK.R#L  45   ...
R/SelectByK.R#L  46   # cluster out to user specified total ...
R/SelectByK.R#L  47   NClust <- 2:MaxClusters...
R/SelectByK.R#L  48   kmc <- vector(mode = "list",...
R/SelectByK.R#L  50   for (m1 in seq_along(NClust)) {...
R/SelectByK.R#L  57       print(m1)...
R/SelectByK.R#L  59   }...
R/SelectByK.R#L  60   ...
R/SelectByK.R#L  61   wss <- sapply(X = kmc,...
R/SelectByK.R#L  63                   x$tot.withinss...
R/SelectByK.R#L  65   ...
R/SelectByK.R#L  66   OneSite <- function(X,...
R/SelectByK.R#L  67                       Bmax,...
R/SelectByK.R#L  68                       Kd) {...
R/SelectByK.R#L  70   }...
R/SelectByK.R#L  71   ...
R/SelectByK.R#L  72   # first column defaults to the x axis...
R/SelectByK.R#L  73   n <- NClust...
R/SelectByK.R#L  74   dat2 <- cbind("n" = n,...
R/SelectByK.R#L  76   # transform data to make the 2 cluster...
R/SelectByK.R#L  77   dat3 <- cbind("n" = n - 2L,...
R/SelectByK.R#L  79   # plot(dat3)...
R/SelectByK.R#L  80   ...
R/SelectByK.R#L  81   FitA <- nls(dat3[, 2L]~OneSite(X = dat...
R/SelectByK.R#L  82                                  Bmax,...
R/SelectByK.R#L  83                                  Kd),...
R/SelectByK.R#L  84               start = list(Bmax = max(da...
R/SelectByK.R#L  85                            Kd = unname(q...
R/SelectByK.R#L  86   FitASum <- summary(FitA)...
R/SelectByK.R#L  87   FitASum$coefficients...
R/SelectByK.R#L  88   ...
R/SelectByK.R#L  89   # fit is offset by -2L to plot and fit...
R/SelectByK.R#L  90   # list position...
R/SelectByK.R#L  91   EvalClust <- ceiling((FitASum$coeffici...
R/SelectByK.R#L  92   if (EvalClust >= MaxClusters) {...
R/SelectByK.R#L  95   }...
R/SelectByK.R#L  96   if (EvalClust < 1L) {...
R/SelectByK.R#L  99   }...
R/SelectByK.R#L 100   ...
R/SelectByK.R#L 101   SEQ <- seq(from = dat3[1, 1L],...
R/SelectByK.R#L 102              to = dat3[nrow(dat3), 1L],...
R/SelectByK.R#L 103              by = 0.05)...
R/SelectByK.R#L 104   CURVE <- OneSite(X = SEQ,...
R/SelectByK.R#L 105                    Kd = FitASum$coeffici...
R/SelectByK.R#L 106                    Bmax = FitASum$coeffi...
R/SelectByK.R#L 107   ...
R/SelectByK.R#L 108   # original method, select by quantile...
R/SelectByK.R#L 109   # select the cluster number based on q...
R/SelectByK.R#L 110   # that users input, default is 50%, se...
R/SelectByK.R#L 111   # EvalClust <- max(which(wss >= quanti...
R/SelectByK.R#L 112   # if (EvalClust >= MaxClusters) {...
R/SelectByK.R#L 113   #   warning("Evaluated clusters may be...
R/SelectByK.R#L 114   #   EvalClust <- MaxClusters...
R/SelectByK.R#L 115   # }...
R/SelectByK.R#L 116   # EvalClust <- max(which(diff(wss) <= ...
R/SelectByK.R#L 117   ...
R/SelectByK.R#L 118   # print(wss)...
R/SelectByK.R#L 119   # print(quantile(wss, ClusterSelect))...
R/SelectByK.R#L 120   # print(EvalClust)...
R/SelectByK.R#L 121   ...
R/SelectByK.R#L 122   res1 <- kmc[[EvalClust]]$centers[, "PI...
R/SelectByK.R#L 123   res1 <- names(res1)[res1 >= UserConfid...
R/SelectByK.R#L 124   if (RetainHighest & length(res1) == 0)...
R/SelectByK.R#L 126   }...
R/SelectByK.R#L 127   ...
R/SelectByK.R#L 128   res2 <- kmc[[EvalClust]]$cluster %in% ...
R/SelectByK.R#L 129   ...
R/SelectByK.R#L 130   res3 <- Pairs[res2, ]...
R/SelectByK.R#L 131   res4 <- vector(mode = "list",...
R/SelectByK.R#L 132                  length = nrow(kmc[[Eval...
R/SelectByK.R#L 133   for (m2 in seq_along(res4)) {...
R/SelectByK.R#L 138   }...
R/SelectByK.R#L 139   if (ShowPlot) {...
R/SelectByK.R#L 146          y = dat3[, 2L],...
R/SelectByK.R#L 147          main = "fit Bmax Kd",...
R/SelectByK.R#L 148          xaxt = "n",...
R/SelectByK.R#L 149          xlab = "Cluster number",...
R/SelectByK.R#L 150          ylab = "Transformed WSS val")...
R/SelectByK.R#L 152          at = seq(from = 0,...
R/SelectByK.R#L 153                   to = max(dat3[, 1L]),...
R/SelectByK.R#L 154                   by = 1L),...
R/SelectByK.R#L 155          labels = seq(from = 0,...
R/SelectByK.R#L 156                       to = max(dat3[, 1L...
R/SelectByK.R#L 157                       by = 1L) + 2L)...
R/SelectByK.R#L 159           y = CURVE)...
R/SelectByK.R#L 161            lty = 2,...
R/SelectByK.R#L 162            col = "blue")...
R/SelectByK.R#L 164          main = "density")...
R/SelectByK.R#L 166          y = 0,...
R/SelectByK.R#L 167          type = "n",...
R/SelectByK.R#L 168          xlab = "Frequency",...
R/SelectByK.R#L 169          ylab = "PID",...
R/SelectByK.R#L 170          xlim = c(0, 1),...
R/SelectByK.R#L 171          ylim = c(0, 1),...
R/SelectByK.R#L 172          main = "Cluster CDFs")...
R/SelectByK.R#L 174       u1 <- res4[[m2]]$PID...
R/SelectByK.R#L 175       u2 <- mean(u1)...
R/SelectByK.R#L 176       points(x = sort(u1),...
R/SelectByK.R#L 177              y = seq_along(u1) / length(...
R/SelectByK.R#L 178              col = m2,...
R/SelectByK.R#L 179              pch = if (u2 >= UserConfide...
R/SelectByK.R#L 180                1...
R/SelectByK.R#L 181              } else {...
R/SelectByK.R#L 182                4...
R/SelectByK.R#L 183              })...
R/SelectByK.R#L 187                       INDEX = resgroups,...
R/SelectByK.R#L 188                       FUN = mean)...
R/SelectByK.R#L 191       pchkey2 <- names(which.max(kmc[[Ev...
R/SelectByK.R#L 195          y = Pairs$SCORE,...
R/SelectByK.R#L 196          xlim = c(0, 1),...
R/SelectByK.R#L 197          ylim = range(Pairs$SCORE),...
R/SelectByK.R#L 198          col = resgroups,...
R/SelectByK.R#L 199          pch = ifelse(test = resgroups %...
R/SelectByK.R#L 200                       yes = 1,...
R/SelectByK.R#L 201                       no = 4),...
R/SelectByK.R#L 202          main = "Pairs",...
R/SelectByK.R#L 203          xlab = "PID",...
R/SelectByK.R#L 204          ylab = "SCORE")...
R/SelectByK.R#L 205   }...
R/SelectByK.R#L 206   ...
R/SelectByK.R#L 207   if (ReturnAllCommunities) {...
R/SelectByK.R#L 214   } else {...
R/SelectByK.R#L 219   }...
R/SequenceSimilarity.R#L  11                                SubMat,...
R/SequenceSimilarity.R#L  12                                penalizeG...
R/SequenceSimilarity.R#L  13                                includeTe...
R/SequenceSimilarity.R#L  14                                allowNega...
R/SequenceSimilarity.R#L  15   ...
R/SequenceSimilarity.R#L  16   # overhead checking...
R/SequenceSimilarity.R#L  17   # Seqs must be of a stringset of lengt...
R/SequenceSimilarity.R#L  18   seqclass <- class(Seqs)...
R/SequenceSimilarity.R#L  19   ...
R/SequenceSimilarity.R#L  20   if (!(seqclass %in% c("DNAStringSet", ...
R/SequenceSimilarity.R#L  22   }...
R/SequenceSimilarity.R#L  23   if (length(Seqs) != 2L) {...
R/SequenceSimilarity.R#L  25   }...
R/SequenceSimilarity.R#L  26   # if SubMat argument is not specified,...
R/SequenceSimilarity.R#L  27   if (missing(SubMat)) {...
R/SequenceSimilarity.R#L  29            class2 = "DNAStringSet")) {...
R/SequenceSimilarity.R#L  30       # build a generic DNA Substitution...
R/SequenceSimilarity.R#L  31       SubMat <- diag(length(DNA_ALPHABET...
R/SequenceSimilarity.R#L  32       dimnames(SubMat) <- list(DNA_ALPHA...
R/SequenceSimilarity.R#L  33                                DNA_ALPHA...
R/SequenceSimilarity.R#L  35                   class2 = "AAStringSet"...
R/SequenceSimilarity.R#L  36       # use the 40th PFASUM matrix...
R/SequenceSimilarity.R#L  37       # PFASUM data object loads an obje...
R/SequenceSimilarity.R#L  38       # that there is a visible binding ...
R/SequenceSimilarity.R#L  39       PFASUM <- get(data(list = "PFASUM"...
R/SequenceSimilarity.R#L  40                          envir = environ...
R/SequenceSimilarity.R#L  41                          package = "DECI...
R/SequenceSimilarity.R#L  42       SubMat <- PFASUM[seq_len(20), seq_...
R/SequenceSimilarity.R#L  44   }...
R/SequenceSimilarity.R#L  45   ...
R/SequenceSimilarity.R#L  46   # ensure that the substition matrix ca...
R/SequenceSimilarity.R#L  47   PresentCharacters <- alphabetFrequency...
R/SequenceSimilarity.R#L  48   PresentCharacters <- names(PresentChar...
R/SequenceSimilarity.R#L  49   # remove alignment characters...
R/SequenceSimilarity.R#L  50   PresentCharacters <- PresentCharacters...
R/SequenceSimilarity.R#L  51   SubMatChars <- colnames(SubMat)...
R/SequenceSimilarity.R#L  52   # all of the present characters must b...
R/SequenceSimilarity.R#L  53   # matrix...
R/SequenceSimilarity.R#L  54   # return(list(PresentCharacters,...
R/SequenceSimilarity.R#L  55   #             SubMatChars))...
R/SequenceSimilarity.R#L  56   if (!all(PresentCharacters %in% SubMat...
R/SequenceSimilarity.R#L  58   }...
R/SequenceSimilarity.R#L  59   ...
R/SequenceSimilarity.R#L  60   # include terminal gaps, or not i.e. g...
R/SequenceSimilarity.R#L  61   if (!includeTerminalGaps) {...
R/SequenceSimilarity.R#L  66   }...
R/SequenceSimilarity.R#L  67   Seqs <- unname(as.matrix(Seqs))...
R/SequenceSimilarity.R#L  68   ...
R/SequenceSimilarity.R#L  69   m1 <- match(Seqs[1,], rownames(SubMat)...
R/SequenceSimilarity.R#L  70   m2 <- match(Seqs[2,], rownames(SubMat)...
R/SequenceSimilarity.R#L  71   w <- is.na(m1) | is.na(m2)...
R/SequenceSimilarity.R#L  72   m1 <- m1[!w]...
R/SequenceSimilarity.R#L  73   m2 <- m2[!w]...
R/SequenceSimilarity.R#L  74   ...
R/SequenceSimilarity.R#L  75   s11 <- sum(diag(SubMat) * tabulate(m1,...
R/SequenceSimilarity.R#L  76   s22 <- sum(diag(SubMat) * tabulate(m2,...
R/SequenceSimilarity.R#L  77   ...
R/SequenceSimilarity.R#L  78   if (s11 > 1e-8 & s22 > 1e-8) {...
R/SequenceSimilarity.R#L  83       s <- s12/sqrt(s11*s22)...
R/SequenceSimilarity.R#L  84       if (penalizeGapLetter)...
R/SequenceSimilarity.R#L  87       if (s12 > 0) {...
R/SequenceSimilarity.R#L  89           s <- s12/sqrt(s11*s22) - sum(w...
R/SequenceSimilarity.R#L  90           if (s < 0)...
R/SequenceSimilarity.R#L  93           s <- s12/sqrt(s11*s22)...
R/SequenceSimilarity.R#L  95       } else {...
R/SequenceSimilarity.R#L  97       }...
R/SequenceSimilarity.R#L  99   } else {...
R/SequenceSimilarity.R#L 101   }...
R/SequenceSimilarity.R#L 102   return(s)...
R/simMat-class.R#L   6   if (missing(nelem)){...
R/simMat-class.R#L   8   }...
R/simMat-class.R#L  10   if (DIAG)...
R/simMat-class.R#L  12   else...
R/simMat-class.R#L  14   if (num_vals %% length(VALUE) != 0)...
R/simMat-class.R#L  17   v <- rep(VALUE, length.out=num_vals)...
R/simMat-class.R#L  18   return(as.simMat(v, NAMES=NAMES, DIAG=...
R/simMat-class.R#L  24   if (is(x, 'matrix')){...
R/simMat-class.R#L  26   } else if (is(x, 'vector')){...
R/simMat-class.R#L  28   } else {...
R/simMat-class.R#L  30   }...
R/simMat-class.R#L  34   # We can just solve quadratic formula ...
R/simMat-class.R#L  35   # n^2 - n - 2*length(x) = 0...
R/simMat-class.R#L  36   # a=1, b=-1, c=-2*length(x)...
R/simMat-class.R#L  37   b <- ifelse(DIAG, -1, 1)...
R/simMat-class.R#L  38   l <- 2*length(x)...
R/simMat-class.R#L  39   deter <- 1 + 4*l...
R/simMat-class.R#L  40   # Has to be the positive case to be va...
R/simMat-class.R#L  41   val <- (sqrt(deter) + b) / 2...
R/simMat-class.R#L  42   stopifnot('x is not a valid length!'=v...
R/simMat-class.R#L  43   stopifnot('incorrect NAMES length!'=(i...
R/simMat-class.R#L  44   ...
R/simMat-class.R#L  45   if ( !DIAG ){...
R/simMat-class.R#L  52   }...
R/simMat-class.R#L  53   ...
R/simMat-class.R#L  54   if (is.null(NAMES)){...
R/simMat-class.R#L  56   }...
R/simMat-class.R#L  57   ...
R/simMat-class.R#L  58   structure(x, ...
R/simMat-class.R#L  65   nr <- nrow(x)...
R/simMat-class.R#L  66   nc <- ncol(x)...
R/simMat-class.R#L  67   stopifnot("Matrix must be square"=nr==...
R/simMat-class.R#L  68   if (all(x[upper.tri(x)] != t(x)[upper....
R/simMat-class.R#L  70   }...
R/simMat-class.R#L  71   ...
R/simMat-class.R#L  72   if (is.null(rownames(x)) || is.null(co...
R/simMat-class.R#L  74   } else if(!setequal(rownames(x),colnam...
R/simMat-class.R#L  77   } else {...
R/simMat-class.R#L  79   }...
R/simMat-class.R#L  80   v <- t(x)[lower.tri(x, diag=TRUE)]...
R/simMat-class.R#L  81   return(as.simMat.vector(v, NAMES=NAMES...
R/simMat-class.R#L  85   nr <- attr(object, 'nrow')...
R/simMat-class.R#L  86   CUTOFF <- FALSE...
R/simMat-class.R#L  87   if (n < 3) n <- 3...
R/simMat-class.R#L  88   if (nr > n){...
R/simMat-class.R#L  91   }...
R/simMat-class.R#L  92   ns <- attr(object, 'NAMES')...
R/simMat-class.R#L  93   object <- unclass(object)...
R/simMat-class.R#L  94   format_vals <- function(x) paste0(form...
R/simMat-class.R#L  95   nstr <- ns...
R/simMat-class.R#L  96   if (CUTOFF){...
R/simMat-class.R#L  98   }...
R/simMat-class.R#L  99   outstr <- c(format_vals(c(' ', nstr)),...
R/simMat-class.R#L 100   ctr <- 1L...
R/simMat-class.R#L 101   for ( i in seq_len(nr) ){...
R/simMat-class.R#L 103       linestr <- c(ns[i], rep(' ', i-1L)...
R/simMat-class.R#L 104       for ( j in seq_len(nr-i+1L) ){...
R/simMat-class.R#L 107       }...
R/simMat-class.R#L 108       ...
R/simMat-class.R#L 109       if (CUTOFF){...
R/simMat-class.R#L 111       }...
R/simMat-class.R#L 112       if (CUTOFF && i == nr){...
R/simMat-class.R#L 115       }...
R/simMat-class.R#L 117       linestr <- c('\u22EE', rep('\u22EE...
R/simMat-class.R#L 119       next...
R/simMat-class.R#L 122   }...
R/simMat-class.R#L 123   statusstr <- paste0('\n     Similarity...
R/simMat-class.R#L 124   outstr <- c(outstr, statusstr)...
R/simMat-class.R#L 125   # invisible to quietly return NULL...
R/simMat-class.R#L 126   invisible(cat(outstr))...
R/simMat-class.R#L 132   nr <- attr(x, 'nrow')...
R/simMat-class.R#L 133   ns <- attr(x, 'NAMES')...
R/simMat-class.R#L 134   outmat <- diag(1, nrow=nr)...
R/simMat-class.R#L 135   colnames(outmat) <- rownames(outmat) <...
R/simMat-class.R#L 136   ...
R/simMat-class.R#L 137   # have to do it this way due to column...
R/simMat-class.R#L 138   outmat[lower.tri(outmat, diag=TRUE)] <...
R/simMat-class.R#L 139   outmat <- t(outmat)...
R/simMat-class.R#L 140   outmat[lower.tri(outmat, diag=TRUE)] <...
R/simMat-class.R#L 141   return(t(outmat))...
R/simMat-class.R#L 145   nr <- attr(x, 'nrow')...
R/simMat-class.R#L 146   ns <- attr(x, 'NAMES')...
R/simMat-class.R#L 147   svals <- c(0, cumsum(nr:1)) + 1...
R/simMat-class.R#L 148   hasi <- !missing(i)...
R/simMat-class.R#L 149   hasj <- !missing(j)...
R/simMat-class.R#L 150   COLOUT <- FALSE...
R/simMat-class.R#L 151   if (!hasi && !hasj)...
R/simMat-class.R#L 153   ...
R/simMat-class.R#L 154   class(x) <- 'vector'...
R/simMat-class.R#L 155   if (hasi){...
R/simMat-class.R#L 159       if(nr %% length(i) != 0) ...
R/simMat-class.R#L 161       stopifnot("No rows specified!"=any...
R/simMat-class.R#L 162       i <- rep(i, length.out=nr)...
R/simMat-class.R#L 163       i <- which(i, useNames = FALSE)...
R/simMat-class.R#L 166       stop('indices must be whole number...
R/simMat-class.R#L 168       i <- sapply(i, \(ii) which(ii==ns)...
R/simMat-class.R#L 171       stop('Incorrect indices provided')...
R/simMat-class.R#L 174       i <- (1:nr)[i]...
R/simMat-class.R#L 177       stop('Mixing of positive and negat...
R/simMat-class.R#L 180       stop('Indices out of bounds')...
R/simMat-class.R#L 182   }...
R/simMat-class.R#L 183   ...
R/simMat-class.R#L 184   if (hasj){...
R/simMat-class.R#L 188       if(nr %% length(j) != 0) ...
R/simMat-class.R#L 190       stopifnot("No columns specified!"=...
R/simMat-class.R#L 191       j <- rep(j, length.out=nr)...
R/simMat-class.R#L 192       j <- which(j, useNames = FALSE)...
R/simMat-class.R#L 195       stop('indices must be whole number...
R/simMat-class.R#L 197       j <- sapply(j, \(ji) which(j==ns)[...
R/simMat-class.R#L 200       stop('Incorrect indices provided')...
R/simMat-class.R#L 203       j <- (1:nr)[j]...
R/simMat-class.R#L 206       stop('Mixing of positive and negat...
R/simMat-class.R#L 209       stop('Indices out of bounds')...
R/simMat-class.R#L 211   }...
R/simMat-class.R#L 212   ...
R/simMat-class.R#L 213   if (hasj && !hasi){...
R/simMat-class.R#L 218   }...
R/simMat-class.R#L 219   if (!hasj){...
R/simMat-class.R#L 222       idx <- i[idxi]...
R/simMat-class.R#L 223       outvec <- numeric(nr)...
R/simMat-class.R#L 224       outvec[idx:nr] <- x[svals[idx]:(sv...
R/simMat-class.R#L 225       if (idx != 1)...
R/simMat-class.R#L 227       outmat[idxi,] <- outvec...
R/simMat-class.R#L 233   }...
R/simMat-class.R#L 234   all_accessed <- expand.grid(i, j)...
R/simMat-class.R#L 235   idxvec <- integer(nrow(all_accessed))...
R/simMat-class.R#L 236   namevec <- character(nrow(all_accessed...
R/simMat-class.R#L 237   for (idx in seq_len(nrow(all_accessed)...
R/simMat-class.R#L 241       namevec[idx] <- paste(ns[i2], ns[i...
R/simMat-class.R#L 242       idxvec[idx] <- svals[i2] + (i1 - i...
R/simMat-class.R#L 244       namevec[idx] <- paste(ns[i1], ns[i...
R/simMat-class.R#L 245       idxvec[idx] <- svals[i1] ...
R/simMat-class.R#L 247       namevec[idx] <- paste(ns[i1], ns[i...
R/simMat-class.R#L 248       idxvec[idx] <- svals[i1] + (i2 - i...
R/simMat-class.R#L 250   }...
R/simMat-class.R#L 251   outvec <- x[idxvec]...
R/simMat-class.R#L 252   names(outvec) <- namevec...
R/simMat-class.R#L 253   return(outvec)...
R/simMat-class.R#L 257   nr <- attr(x, 'nrow')...
R/simMat-class.R#L 258   ns <- attr(x, 'NAMES')...
R/simMat-class.R#L 259   svals <- c(0, cumsum(nr:1)) + 1...
R/simMat-class.R#L 260   class(x) <- c('vector')...
R/simMat-class.R#L 261   hasi <- !missing(i)...
R/simMat-class.R#L 262   hasj <- !missing(j)...
R/simMat-class.R#L 263   ...
R/simMat-class.R#L 264   if (hasi){...
R/simMat-class.R#L 268       stop('indices must be whole number...
R/simMat-class.R#L 270       i <- sapply(i, \(ii) which(ii==ns)...
R/simMat-class.R#L 273       stop('Incorrect indices provided')...
R/simMat-class.R#L 276       i <- (1:nr)[i]...
R/simMat-class.R#L 279       stop('Mixing of positive and negat...
R/simMat-class.R#L 282       stop('Indices out of bounds')...
R/simMat-class.R#L 284   }...
R/simMat-class.R#L 285   ...
R/simMat-class.R#L 286   if (hasj){...
R/simMat-class.R#L 290       stop('indices must be whole number...
R/simMat-class.R#L 292       j <- sapply(j, \(ji) which(j==ns)[...
R/simMat-class.R#L 295       stop('Incorrect indices provided')...
R/simMat-class.R#L 298       j <- (1:nr)[j]...
R/simMat-class.R#L 301       stop('Mixing of positive and negat...
R/simMat-class.R#L 304       stop('Indices out of bounds')...
R/simMat-class.R#L 306   }...
R/simMat-class.R#L 307   ...
R/simMat-class.R#L 308   # Symmetric so we can do this to simpl...
R/simMat-class.R#L 309   if (hasj && !hasi){...
R/simMat-class.R#L 313   }...
R/simMat-class.R#L 314   ...
R/simMat-class.R#L 315   ## Checking for valid inputs...
R/simMat-class.R#L 316   # 3 cases: none given, only i given, i...
R/simMat-class.R#L 317   num_given <- length(value)...
R/simMat-class.R#L 318   if (!hasi && !hasj){...
R/simMat-class.R#L 320       warning("number of items to replac...
R/simMat-class.R#L 324   }...
R/simMat-class.R#L 325   li <- length(i)...
R/simMat-class.R#L 326   if (hasi && !hasj){...
R/simMat-class.R#L 328   } else {...
R/simMat-class.R#L 331   }...
R/simMat-class.R#L 332   ...
R/simMat-class.R#L 333   if (num_req %% num_given != 0){...
R/simMat-class.R#L 335   } ...
R/simMat-class.R#L 336   value <- rep(value, length.out=num_req...
R/simMat-class.R#L 337   ...
R/simMat-class.R#L 338   if (!hasj){...
R/simMat-class.R#L 340       idx <- i[idxi]...
R/simMat-class.R#L 341       offset <- nr * (idxi-1)...
R/simMat-class.R#L 342       x[svals[idx]:(svals[idx+1]-1)] <- ...
R/simMat-class.R#L 343       if (idx != 1)...
R/simMat-class.R#L 348   }...
R/simMat-class.R#L 349   ...
R/simMat-class.R#L 350   all_accessed <- expand.grid(i, j)...
R/simMat-class.R#L 351   idxvec <- integer(nrow(all_accessed))...
R/simMat-class.R#L 352   for (idx in seq_len(nrow(all_accessed)...
R/simMat-class.R#L 356       idxvec[idx] <- svals[i2] + (i1 - i...
R/simMat-class.R#L 358       idxvec[idx] <- svals[i1] ...
R/simMat-class.R#L 360       idxvec[idx] <- svals[i1] + (i2 - i...
R/simMat-class.R#L 362   }...
R/simMat-class.R#L 363   ...
R/simMat-class.R#L 364   x[idxvec] <- value...
R/simMat-class.R#L 365   class(x) <- 'simMat'...
R/simMat-class.R#L 366   return(x)...
R/simMat-class.R#L 367   #return(as.simMat(v, NAMES=ns, DIAG=TR...
R/simMat-class.R#L 368   ...
R/simMat-class.R#L 374   nr <- attr(x, 'nrow')...
R/simMat-class.R#L 375   svals <- c(0, cumsum(nr:2)) + 1...
R/simMat-class.R#L 376   v <- unclass(x)...
R/simMat-class.R#L 377   return(v[svals])...
R/simMat-class.R#L 383   nr <- attr(x, 'nrow')...
R/simMat-class.R#L 384   if (nr %% length(value) != 0){...
R/simMat-class.R#L 386   }...
R/simMat-class.R#L 387   value <- rep(value, length.out=nr)...
R/simMat-class.R#L 388   svals <- c(0, cumsum(nr:2)) + 1...
R/simMat-class.R#L 389   class(x) <- 'vector'...
R/simMat-class.R#L 390   x[svals] <- value...
R/simMat-class.R#L 391   class(x) <- 'simMat'...
R/simMat-class.R#L 392   return(x)...
R/simMat-class.R#L 396   return(attr(x, 'NAMES'))...
R/simMat-class.R#L 400   ns <- attr(x, 'NAMES')...
R/simMat-class.R#L 401   stopifnot('Incorrect number of names p...
R/simMat-class.R#L 402   attr(x, 'NAMES') <- value...
R/simMat-class.R#L 403   return(x)...
R/simMat-class.R#L 407   l <- length(x)...
R/simMat-class.R#L 408   nr <- attr(x, 'nrow')...
R/simMat-class.R#L 409   i1 <- i2 <- rep(NA_integer_, l)...
R/simMat-class.R#L 410   v <- rep(NA_real_, l)...
R/simMat-class.R#L 411   ctr <- 1...
R/simMat-class.R#L 412   for ( i in seq_len(nr) ){...
R/simMat-class.R#L 414       i1[ctr] <- i...
R/simMat-class.R#L 415       i2[ctr] <- j...
R/simMat-class.R#L 416       v[ctr] <- x[i,j]...
R/simMat-class.R#L 417       ctr <- ctr + 1...
R/simMat-class.R#L 419   }...
R/simMat-class.R#L 420   ...
R/simMat-class.R#L 421   return(data.frame(row=i1, col=i2, valu...
R/SubSetPairs.R#L  14   ...
R/SubSetPairs.R#L  15   if (Verbose) {...
R/SubSetPairs.R#L  18   }...
R/SubSetPairs.R#L  19   ...
R/SubSetPairs.R#L  20   ###### -- overhead checking ----------...
R/SubSetPairs.R#L  21   # CurrentPairs must be a PairSummaries...
R/SubSetPairs.R#L  22   # user thresholds must be a named vect...
R/SubSetPairs.R#L  23   # should be ordered by priority...
R/SubSetPairs.R#L  24   if (!missing(UserThresholds)) {...
R/SubSetPairs.R#L  27       USETHRESH <- TRUE...
R/SubSetPairs.R#L  29       stop ("Supplied thresholds do not ...
R/SubSetPairs.R#L  31   } else {...
R/SubSetPairs.R#L  33   }...
R/SubSetPairs.R#L  34   # Competitor rejection left as `TRUE` ...
R/SubSetPairs.R#L  35   # can be a numeric between zero and 1,...
R/SubSetPairs.R#L  36   if (is.logical(RejectCompetitors) &...
R/SubSetPairs.R#L  37       !is.na(RejectCompetitors)) {...
R/SubSetPairs.R#L  40   } else if (is.integer(RejectCompetitor...
R/SubSetPairs.R#L  41              is.numeric(RejectCompetitor...
R/SubSetPairs.R#L  44   } else {...
R/SubSetPairs.R#L  46   }...
R/SubSetPairs.R#L  47   # RejectionCriteria must be a column n...
R/SubSetPairs.R#L  48   if (!(RejectionCriteria %in% colnames(...
R/SubSetPairs.R#L  50   }...
R/SubSetPairs.R#L  51   ...
R/SubSetPairs.R#L  52   ...
R/SubSetPairs.R#L  53   ###### -- competitor rejection -------...
R/SubSetPairs.R#L  54   ...
R/SubSetPairs.R#L  55   keep <- rep(TRUE,...
R/SubSetPairs.R#L  56               nrow(CurrentPairs))...
R/SubSetPairs.R#L  57   ...
R/SubSetPairs.R#L  58   if (CompRejection) {...
R/SubSetPairs.R#L  62       cat("\nConverting node IDs.\n")...
R/SubSetPairs.R#L  65                                         ...
R/SubSetPairs.R#L  68                   as.integer(unlist(regm...
R/SubSetPairs.R#L  69                                         ...
R/SubSetPairs.R#L  73                                         ...
R/SubSetPairs.R#L  76                   as.integer(unlist(regm...
R/SubSetPairs.R#L  77                                         ...
R/SubSetPairs.R#L  81                                         ...
R/SubSetPairs.R#L  84                   as.integer(unlist(regm...
R/SubSetPairs.R#L  85                                         ...
R/SubSetPairs.R#L  90       cat("\nFinding conflicts.\n")...
R/SubSetPairs.R#L 101       w1 <- which(gmat[, 1L] == ugm[m1, ...
R/SubSetPairs.R#L 102       CurrentIndices <- imat[w1, ]...
R/SubSetPairs.R#L 103       ...
R/SubSetPairs.R#L 104       uim <- unique(CurrentIndices)...
R/SubSetPairs.R#L 105       ...
R/SubSetPairs.R#L 106       for (m2 in seq_len(nrow(uim))) {...
R/SubSetPairs.R#L 117           for (m3 in seq_along(checkp1))...
R/SubSetPairs.R#L 132           }...
R/SubSetPairs.R#L 137           for (m3 in seq_along(checkp1))...
R/SubSetPairs.R#L 145           }...
R/SubSetPairs.R#L 148       } # end loop through current index...
R/SubSetPairs.R#L 149       ...
R/SubSetPairs.R#L 150       if (Verbose) {...
R/SubSetPairs.R#L 152                           value = m1 / L...
R/SubSetPairs.R#L 153       }...
R/SubSetPairs.R#L 154       ...
R/SubSetPairs.R#L 156   } # end if statement for competitor re...
R/SubSetPairs.R#L 157   ...
R/SubSetPairs.R#L 158   ###### -- user supplied thresholds on ...
R/SubSetPairs.R#L 159   ...
R/SubSetPairs.R#L 160   if (USETHRESH) {...
R/SubSetPairs.R#L 165       # whoever is below the user specif...
R/SubSetPairs.R#L 166       w <- CurrentPairs[, names(UserThre...
R/SubSetPairs.R#L 167       # is set to rejection...
R/SubSetPairs.R#L 168       keep[w] <- FALSE...
R/SubSetPairs.R#L 170   }...
R/SubSetPairs.R#L 171   ...
R/SubSetPairs.R#L 172   ...
R/SubSetPairs.R#L 173   ###### -- return object --------------...
R/SubSetPairs.R#L 174   ...
R/SubSetPairs.R#L 175   EditedPairs <- CurrentPairs[keep, ]...
R/SubSetPairs.R#L 176   RejectedPairs <- CurrentPairs[!keep, ]...
R/SubSetPairs.R#L 177   ...
R/SubSetPairs.R#L 178   if (Verbose) {...
R/SubSetPairs.R#L 182   }...
R/SubSetPairs.R#L 183   ...
R/SubSetPairs.R#L 184   if (WinnersOnly) {...
R/SubSetPairs.R#L 186   } else {...
R/SubSetPairs.R#L 189   }...
R/SubSetPairs.R#L 190   ...
R/SubSetPairs.R#L 191   ...
R/SuperTree.R#L   2   # error checking...
R/SuperTree.R#L   3   if (!is(myDendList, 'list') || ...
R/SuperTree.R#L   4       !all(vapply(myDendList, \(x) is(x,...
R/SuperTree.R#L   6   }...
R/SuperTree.R#L   7   ...
R/SuperTree.R#L   8   stopifnot("'Processors' must be a posi...
R/SuperTree.R#L   9               (Processors >=1 && Process...
R/SuperTree.R#L  10   if (!is(Processors, 'integer')) Proces...
R/SuperTree.R#L  11   ...
R/SuperTree.R#L  12   useNFUN <- is(NAMEFUN, 'function')...
R/SuperTree.R#L  13   ...
R/SuperTree.R#L  14   if (useNFUN){...
R/SuperTree.R#L  18       stop("NAMEFUN should operate on a ...
R/SuperTree.R#L  19            vector of the same size as in...
R/SuperTree.R#L  21   }...
R/SuperTree.R#L  22   ...
R/SuperTree.R#L  23   # Get list of species...
R/SuperTree.R#L  24   allspecies <- character(0)...
R/SuperTree.R#L  25   if (Verbose){ ...
R/SuperTree.R#L  29   }...
R/SuperTree.R#L  30   ctr <- 0...
R/SuperTree.R#L  31   for ( i in seq_along(myDendList) ){...
R/SuperTree.R#L  38       specs <- NAMEFUN(specs)...
R/SuperTree.R#L  42   }...
R/SuperTree.R#L  43   ...
R/SuperTree.R#L  44   # Initialize distance matrix and count...
R/SuperTree.R#L  45   dmat <- countmat <- matrix(0, nrow=len...
R/SuperTree.R#L  46   rownames(dmat) <- colnames(dmat) <- al...
R/SuperTree.R#L  47   rownames(countmat) <- colnames(countma...
R/SuperTree.R#L  48   if (Verbose){ ...
R/SuperTree.R#L  51   }...
R/SuperTree.R#L  52   ctr <- 0...
R/SuperTree.R#L  53   for ( dend in myDendList ){...
R/SuperTree.R#L  60       rownames(d) <- colnames(d) <- NAME...
R/SuperTree.R#L  67       firsttocom <- names(which.max(tabl...
R/SuperTree.R#L  68       pos <- which(rownames(d) == firstt...
R/SuperTree.R#L  69       newrow <- colSums(d[pos,]) / lengt...
R/SuperTree.R#L  70       d[pos[1], ] <- d[,pos[1]] <- newro...
R/SuperTree.R#L  71       d <- d[-pos[2], -pos[2]]...
R/SuperTree.R#L  72       lr <- lr - 1...
R/SuperTree.R#L  73       rn <- rn[-pos[2]]...
R/SuperTree.R#L  80   }...
R/SuperTree.R#L  81   ...
R/SuperTree.R#L  82   # Average result...
R/SuperTree.R#L  83   dmat <- dmat / countmat...
R/SuperTree.R#L  84   ...
R/SuperTree.R#L  85   # Build species tree with NJ...
R/SuperTree.R#L  86   if (Verbose) cat("\nBuilding species t...
R/SuperTree.R#L  87   newTree <- TreeLine(myDistMatrix=dmat,...
R/SuperTree.R#L  88                       verbose=FALSE, pro...
R/SuperTree.R#L  89   ...
R/SuperTree.R#L  90   if (Verbose){...
R/SuperTree.R#L  93   }...
R/SuperTree.R#L  94   return(newTree)...
man/BlastSeqs.Rd#L  15               blastType=c('blastn', 'bla...
man/BlastSeqs.Rd#L  16               extraArgs='', verbose=TRUE...
man/BlastSeqs.Rd#L  19   \item{seqs}{...
man/BlastSeqs.Rd#L  22   }...
man/BlastSeqs.Rd#L  23   \item{BlastDB}{...
man/BlastSeqs.Rd#L  27   }...
man/BlastSeqs.Rd#L  28   \item{blastType}{...
man/BlastSeqs.Rd#L  30   }...
man/BlastSeqs.Rd#L  31   \item{extraArgs}{...
man/BlastSeqs.Rd#L  34   }...
man/BlastSeqs.Rd#L  35   \item{verbose}{...
man/BlastSeqs.Rd#L  37   }...
man/BlastSeqs.Rd#L  41   \itemize{...
man/BlastSeqs.Rd#L  43       \code{blastn}: Nucleotide sequence...
man/BlastSeqs.Rd#L  46       \code{blastp}: Protein sequences a...
man/BlastSeqs.Rd#L  49       \code{tblastn}: Translates nucleot...
man/BlastSeqs.Rd#L  50                       queries against da...
man/BlastSeqs.Rd#L  53       \code{blastx}: Queries protein seq...
man/BlastSeqs.Rd#L  57       \code{tblastx}: Translates nucleot...
man/BlastSeqs.Rd#L  58                       queries against da...
man/BlastSeqs.Rd#L  59                       protein sequences...
man/BlockExpansion.Rd#L  11                GapTolerance = 4L,...
man/BlockExpansion.Rd#L  12                DropSingletons = FALSE,...
man/BlockExpansion.Rd#L  13                Criteria = "PID",...
man/BlockExpansion.Rd#L  14                Floor = 0.5,...
man/BlockExpansion.Rd#L  15                NewPairsOnly = TRUE,...
man/BlockExpansion.Rd#L  16                DBPATH,...
man/BlockExpansion.Rd#L  17                Verbose = FALSE)...
man/BlockExpansion.Rd#L  20   \item{Pairs}{...
man/BlockExpansion.Rd#L  23   \item{GapTolerance}{...
man/BlockExpansion.Rd#L  26   \item{DropSingletons}{...
man/BlockExpansion.Rd#L  29   \item{Criteria}{...
man/BlockExpansion.Rd#L  33   \item{Floor}{...
man/BlockExpansion.Rd#L  36   \item{NewPairsOnly}{...
man/BlockExpansion.Rd#L  39   \item{DBPATH}{...
man/BlockExpansion.Rd#L  42   \item{Verbose}{...
man/BlockExpansion.Rd#L  61                       "Endosymbionts.sql...
man/BlockExpansion.Rd#L  62                       package = "SynExte...
man/BlockExpansion.Rd#L  63                       ...
man/BlockExpansion.Rd#L  66                           NewPairsOnly =...
man/BlockExpansion.Rd#L  67                           DBPATH = DBPAT...
man/BlockExpansion.Rd#L  68                           Verbose = TRUE...
man/BlockReconciliation.Rd#L  18   \item{Pairs}{...
man/BlockReconciliation.Rd#L  21   \item{ConservativeRejection}{...
man/BlockReconciliation.Rd#L  24   \item{Precedent}{...
man/BlockReconciliation.Rd#L  27   \item{PIDThreshold}{...
man/BlockReconciliation.Rd#L  30   \item{SCOREThreshold}{...
man/BlockReconciliation.Rd#L  33   \item{Verbose}{...
man/BlockReconciliation.Rd#L  53                                Conservat...
man/BlockReconciliation.Rd#L  54                                Verbose =...
man/BuiltInEnsembles.Rd#L  20   The data contain a list of objects of ...
man/BuiltInEnsembles.Rd#L  29                   ...
man/BuiltInEnsembles.Rd#L  39           PretrainedModel=myModel)...
man/DisjointSet.Rd#L  14   \item{Pairs}{...
man/DisjointSet.Rd#L  17   \item{Verbose}{...
man/EstimRearrScen.Rd#L  19   \item{SyntenyObject}{...
man/EstimRearrScen.Rd#L  20   \code{\link[=Synteny-class]{Synteny}} ...
man/EstimRearrScen.Rd#L  21   Expected input is unichromosomal seque...
man/EstimRearrScen.Rd#L  22   }...
man/EstimRearrScen.Rd#L  23   \item{NumRuns}{...
man/EstimRearrScen.Rd#L  24   Numeric; Number of times to simulate s...
man/EstimRearrScen.Rd#L  25   values) runs each analysis for \eqn{\s...
man/EstimRearrScen.Rd#L  26   breakpoints....
man/EstimRearrScen.Rd#L  27   }...
man/EstimRearrScen.Rd#L  28   \item{Mean}{...
man/EstimRearrScen.Rd#L  29   Logical; If TRUE, returns the mean num...
man/EstimRearrScen.Rd#L  30   returns the scenario corresponding to ...
man/EstimRearrScen.Rd#L  31   across all runs. This parameter only a...
man/EstimRearrScen.Rd#L  32   transpositions reported; the specific ...
man/EstimRearrScen.Rd#L  33   resulted in a minimum value....
man/EstimRearrScen.Rd#L  34   }...
man/EstimRearrScen.Rd#L  35   \item{MinBlockLength}{...
man/EstimRearrScen.Rd#L  36   Numeric; Minimum size of syntenic bloc...
man/EstimRearrScen.Rd#L  37   Set to a larger value to ignore sectio...
man/EstimRearrScen.Rd#L  38   result of SNPs or other small-scale mu...
man/EstimRearrScen.Rd#L  39   }...
man/EstimRearrScen.Rd#L  40   \item{Verbose}{...
man/EstimRearrScen.Rd#L  41   Logical; indicates whether or not to d...
man/EstimRearrScen.Rd#L  42   }...
man/EstimRearrScen.Rd#L 145   \item \code{start1}: Nucleotide positi...
man/EstimRearrScen.Rd#L 146   on genome 1....
man/EstimRearrScen.Rd#L 147   \item \code{start2}: Same as \code{sta...
man/EstimRearrScen.Rd#L 148   \item \code{length}: Length of block, ...
man/EstimRearrScen.Rd#L 149   \item \code{rel_direction_on_2}: 1 if ...
man/EstimRearrScen.Rd#L 150   genomes, and 0 if the direction is rev...
man/EstimRearrScen.Rd#L 151   \item \code{index1}: Label of the gene...
man/ExampleStreptomycesData.Rd#L  12   The data contain two elements, \code{G...
man/ExampleStreptomycesData.Rd#L  13   a list of presence/absence vectors in ...
man/ExampleStreptomycesData.Rd#L  14   \code{Tree} is a species tree used for...
man/ExtractBy.Rd#L  11           y,...
man/ExtractBy.Rd#L  12           z,...
man/ExtractBy.Rd#L  13           Verbose = FALSE)...
man/ExtractBy.Rd#L  16   \item{x}{...
man/ExtractBy.Rd#L  19   \item{y}{...
man/ExtractBy.Rd#L  22   \item{z}{...
man/ExtractBy.Rd#L  25   \item{Verbose}{...
man/ExtractBy.Rd#L  44                       "Endosymbionts.sql...
man/ExtractBy.Rd#L  45                       package = "SynExte...
man/ExtractBy.Rd#L  51                   y = DBPATH,...
man/ExtractBy.Rd#L  52                   z = Endosymbionts_Sets...
man/ExtractBy.Rd#L  53                   Verbose = TRUE)...
man/ExtractBy.Rd#L  54                   ...
man/ExtractBy.Rd#L  59                   y = DBPATH,...
man/ExtractBy.Rd#L  60                   Verbose = TRUE)...
man/FindSets.Rd#L  11          p2,...
man/FindSets.Rd#L  12          Verbose = FALSE)...
man/FindSets.Rd#L  15   \item{p1}{...
man/FindSets.Rd#L  18   \item{p2}{...
man/FindSets.Rd#L  21   \item{Verbose}{...
man/FindSets.Rd#L  41                              replace = T...
man/FindSets.Rd#L  42            as.integer(sample(35, size = ...
man/FindSets.Rd#L  43                              replace = T...
man/FindSets.Rd#L  46                  m[, 2]))...
man/FindSets.Rd#L  48                                    level...
man/FindSets.Rd#L  49            "2" = as.integer(factor(x = m...
man/FindSets.Rd#L  50                                    level...
man/FindSets.Rd#L  52               p2 = m[, 2])...
man/flatdendrapply.Rd#L  20   \item{dend}{ ...
man/flatdendrapply.Rd#L  21   an object of class \code{\link{dendrog...
man/flatdendrapply.Rd#L  22   }...
man/flatdendrapply.Rd#L  23   ...
man/flatdendrapply.Rd#L  24   \item{NODEFUN}{...
man/flatdendrapply.Rd#L  25   A function to apply to each internal n...
man/flatdendrapply.Rd#L  26   skipped....
man/flatdendrapply.Rd#L  27   }...
man/flatdendrapply.Rd#L  28   ...
man/flatdendrapply.Rd#L  29   \item{LEAFFUN}{...
man/flatdendrapply.Rd#L  30   A function to apply to each leaf node....
man/flatdendrapply.Rd#L  31   Defaults to \code{NODEFUN}, meaning \c...
man/flatdendrapply.Rd#L  32   (interior and leaves) if \code{LEAFFUN...
man/flatdendrapply.Rd#L  33   }...
man/flatdendrapply.Rd#L  34   ...
man/flatdendrapply.Rd#L  35   \item{INCLUDEROOT}{...
man/flatdendrapply.Rd#L  36   If \code{FALSE}, skips applying \code{...
man/flatdendrapply.Rd#L  37   }...
man/flatdendrapply.Rd#L  38   ...
man/flatdendrapply.Rd#L  39   \item{...}{...
man/flatdendrapply.Rd#L  40   Additional arguments passed to BOTH \c...
man/flatdendrapply.Rd#L  41   }...
man/flatdendrapply.Rd#L  93                        LEAFFUN = functio...
man/Generic.Rd#L  12   The format is an object of class ``glm...
man/gffToDataFrame.Rd#L  11                AdditionalAttrs = NULL,...
man/gffToDataFrame.Rd#L  12                AdditionalTypes = NULL,...
man/gffToDataFrame.Rd#L  13                RawTableOnly = FALSE,...
man/gffToDataFrame.Rd#L  14                Verbose = FALSE)...
man/gffToDataFrame.Rd#L  18   \item{GFF}{...
man/gffToDataFrame.Rd#L  21   \item{AdditionalAttrs}{...
man/gffToDataFrame.Rd#L  24   \item{AdditionalTypes}{...
man/gffToDataFrame.Rd#L  27   \item{RawTableOnly}{...
man/gffToDataFrame.Rd#L  30   \item{Verbose}{...
man/gffToDataFrame.Rd#L  48                               Verbose = ...
man/LinkedPairs-class.Rd#L  13       quote = FALSE,...
man/LinkedPairs-class.Rd#L  14       right = TRUE,...
man/LinkedPairs-class.Rd#L  15       \dots)...
man/LinkedPairs-class.Rd#L  18   \item{x}{...
man/LinkedPairs-class.Rd#L  21   \item{quote}{...
man/LinkedPairs-class.Rd#L  24   \item{right}{...
man/LinkedPairs-class.Rd#L  27   \item{\dots}{...
man/NucleotideOverlap.Rd#L  11                   GeneCalls,...
man/NucleotideOverlap.Rd#L  12                   LimitIndex = FALSE,...
man/NucleotideOverlap.Rd#L  13                   AcceptContigNames = TR...
man/NucleotideOverlap.Rd#L  14                   Verbose = FALSE)...
man/NucleotideOverlap.Rd#L  17   \item{SyntenyObject}{...
man/NucleotideOverlap.Rd#L  20   \item{GeneCalls}{...
man/NucleotideOverlap.Rd#L  23   \item{LimitIndex}{...
man/NucleotideOverlap.Rd#L  26   \item{AcceptContigNames}{...
man/NucleotideOverlap.Rd#L  29   \item{Verbose}{...
man/NucleotideOverlap.Rd#L  51                            GeneCalls = E...
man/NucleotideOverlap.Rd#L  52                            LimitIndex = ...
man/NucleotideOverlap.Rd#L  53                            Verbose = TRU...
man/PairSummaries.Rd#L  11               DBPATH,...
man/PairSummaries.Rd#L  12               PIDs = FALSE,...
man/PairSummaries.Rd#L  13               Score = FALSE,...
man/PairSummaries.Rd#L  14               IgnoreDefaultStringSet = F...
man/PairSummaries.Rd#L  15               Verbose = FALSE,...
man/PairSummaries.Rd#L  16               Model = "Generic",...
man/PairSummaries.Rd#L  17               DefaultTranslationTable = ...
man/PairSummaries.Rd#L  18               AcceptContigNames = TRUE,...
man/PairSummaries.Rd#L  19               OffSetsAllowed = NULL,...
man/PairSummaries.Rd#L  20               Storage = 1,...
man/PairSummaries.Rd#L  21               ...)...
man/PairSummaries.Rd#L  24   \item{SyntenyLinks}{...
man/PairSummaries.Rd#L  27   \item{DBPATH}{...
man/PairSummaries.Rd#L  30   \item{PIDs}{...
man/PairSummaries.Rd#L  33   \item{Score}{...
man/PairSummaries.Rd#L  36   \item{IgnoreDefaultStringSet}{...
man/PairSummaries.Rd#L  39   \item{Verbose}{...
man/PairSummaries.Rd#L  42   \item{Model}{...
man/PairSummaries.Rd#L  45   \item{DefaultTranslationTable}{...
man/PairSummaries.Rd#L  48   \item{AcceptContigNames}{...
man/PairSummaries.Rd#L  51   \item{OffSetsAllowed}{...
man/PairSummaries.Rd#L  54   \item{Storage}{...
man/PairSummaries.Rd#L  57   \item{...}{...
man/PairSummaries.Rd#L  76                       "Endosymbionts.sql...
man/PairSummaries.Rd#L  77                       package = "SynExte...
man/PairSummaries.Rd#L  78                       ...
man/PairSummaries.Rd#L  82                        PIDs = FALSE,...
man/PairSummaries.Rd#L  83                        DBPATH = DBPATH,...
man/PairSummaries.Rd#L  84                        Verbose = TRUE)...
man/plot.ProtWeb.Rd#L  16       Gravity=0.05, Coulomb=0.1, Connect...
man/plot.ProtWeb.Rd#L  17       MoveRate=0.25, Cutoff=0.2, ColorPa...
man/plot.ProtWeb.Rd#L  18       Verbose=TRUE, ...)...
man/plot.ProtWeb.Rd#L  21   \item{x}{...
man/plot.ProtWeb.Rd#L  23   }...
man/plot.ProtWeb.Rd#L  24   \item{NumSims}{...
man/plot.ProtWeb.Rd#L  26   }...
man/plot.ProtWeb.Rd#L  27   \item{Gravity}{...
man/plot.ProtWeb.Rd#L  29   }...
man/plot.ProtWeb.Rd#L  30   \item{Coulomb}{...
man/plot.ProtWeb.Rd#L  32   }...
man/plot.ProtWeb.Rd#L  33   \item{Connection}{...
man/plot.ProtWeb.Rd#L  35   }...
man/plot.ProtWeb.Rd#L  36   \item{MoveRate}{...
man/plot.ProtWeb.Rd#L  38   }...
man/plot.ProtWeb.Rd#L  39   \item{Cutoff}{...
man/plot.ProtWeb.Rd#L  41   }...
man/plot.ProtWeb.Rd#L  42   \item{ColorPalette}{...
man/plot.ProtWeb.Rd#L  45   }...
man/plot.ProtWeb.Rd#L  46   \item{Verbose}{...
man/plot.ProtWeb.Rd#L  48   }...
man/plot.ProtWeb.Rd#L  49   \item{...}{...
man/plot.ProtWeb.Rd#L  51   }...
man/plot.ProtWeb.Rd#L  55   This function plots the \code{ProtWeb}...
man/plot.ProtWeb.Rd#L  56   This embedding has three force compone...
man/plot.ProtWeb.Rd#L  57   \itemize{...
man/plot.ProtWeb.Rd#L  58   \item Gravity Force: Attractive force ...
man/plot.ProtWeb.Rd#L  59   \item Coulomb Force: Repulsive force p...
man/plot.ProtWeb.Rd#L  60   \item Connective Force: Tries to push ...
man/plot.ProtWeb.Rd#L  61   }...
man/plot.ProtWeb.Rd#L  62   ...
man/plot.ProtWeb.Rd#L  63   The parameters in the function are suf...
man/plot.ProtWeb.Rd#L  64   are welcome to try to tune them for a ...
man/plot.ProtWeb.Rd#L  65   to aid with visualization of the adjac...
man/plot.ProtWeb.Rd#L  66   ...
man/plot.ProtWeb.Rd#L  67   The function included in this release ...
man/plot.ProtWeb.Rd#L  68   Next release cycle will update this fu...
man/plot.ProtWeb.Rd#L  69   algorithm to improve plotting, visuali...
man/predict.ProtWeaver.Rd#L  13          Subset=NULL, NumCores=1,...
man/predict.ProtWeaver.Rd#L  14          MySpeciesTree=NULL, PretrainedM...
man/predict.ProtWeaver.Rd#L  15          RawZScores=FALSE, NoPrediction=...
man/predict.ProtWeaver.Rd#L  16          ReturnRawData=FALSE, Verbose=TR...
man/predict.ProtWeaver.Rd#L  19   \item{object}{...
man/predict.ProtWeaver.Rd#L  21   }...
man/predict.ProtWeaver.Rd#L  22   \item{Method}{...
man/predict.ProtWeaver.Rd#L  24   }...
man/predict.ProtWeaver.Rd#L  25   \item{Subset}{...
man/predict.ProtWeaver.Rd#L  39   }...
man/predict.ProtWeaver.Rd#L  40   \item{NumCores}{...
man/predict.ProtWeaver.Rd#L  47   }...
man/predict.ProtWeaver.Rd#L  48   \item{MySpeciesTree}{...
man/predict.ProtWeaver.Rd#L  52   }...
man/predict.ProtWeaver.Rd#L  53   \item{PretrainedModel}{...
man/predict.ProtWeaver.Rd#L  60   }...
man/predict.ProtWeaver.Rd#L  61   \item{RawZScores}{...
man/predict.ProtWeaver.Rd#L  66   }...
man/predict.ProtWeaver.Rd#L  67   \item{NoPrediction}{...
man/predict.ProtWeaver.Rd#L  76   }...
man/predict.ProtWeaver.Rd#L  77   \item{ReturnRawData}{...
man/predict.ProtWeaver.Rd#L  78       Internal parameter used for ensemb...
man/predict.ProtWeaver.Rd#L  79       without formatting them into a Pro...
man/predict.ProtWeaver.Rd#L  80       \code{NoPrediction=TRUE} rather th...
man/predict.ProtWeaver.Rd#L  81   }...
man/predict.ProtWeaver.Rd#L  82   \item{Verbose}{...
man/predict.ProtWeaver.Rd#L  84   }...
man/predict.ProtWeaver.Rd#L  85   \item{...}{...
man/predict.ProtWeaver.Rd#L  87   }...
man/predict.ProtWeaver.Rd#L  94   \item \code{'Ensemble'}: Prediction co...
man/predict.ProtWeaver.Rd#L  95   \item \code{'Jaccard'}: Jaccard distan...
man/predict.ProtWeaver.Rd#L  96   \item \code{'Hamming'}: Hamming distan...
man/predict.ProtWeaver.Rd#L  97   \item \code{'MutualInformation'}: MI o...
man/predict.ProtWeaver.Rd#L  98   \item \code{'ProfDCA'}: Direct Couplin...
man/predict.ProtWeaver.Rd#L  99   \item \code{'Behdenna'}: Analysis of G...
man/predict.ProtWeaver.Rd#L 100   \item \code{'Coloc'}: Co-localization ...
man/predict.ProtWeaver.Rd#L 101   \item \code{'MirrorTree'}: MirrorTree...
man/predict.ProtWeaver.Rd#L 102   \item \code{'ContextTree'}: ContextTre...
man/predict.ProtWeaver.Rd#L 103   \item \code{'ResidueMI'}: Mutual Infor...
man/predict.ProtWeaver.Rd#L 136   \code{NumCores} uses 1 less core than ...
man/predict.ProtWeaver.Rd#L 137   cannot detect the number of available ...
man/predict.ProtWeaver.Rd#L 138   on my machine where the R session take...
man/predict.ProtWeaver.Rd#L 139   out of forking processes, with the onl...
man/predict.ProtWeaver.Rd#L 140   This may be an issue specific to ARM M...
man/predict.ProtWeaver.Rd#L 141   I've made the default setting to be sl...
man/predict.ProtWeaver.Rd#L 142   rather than risk bricking a machine....
man/predict.ProtWeaver.Rd#L 144   More models will be implemented in the...
man/predict.ProtWeaver.Rd#L 145   include:...
man/predict.ProtWeaver.Rd#L 146   \itemize{...
man/predict.ProtWeaver.Rd#L 151   }...
man/predict.ProtWeaver.Rd#L 152   ...
man/predict.ProtWeaver.Rd#L 153   Feel free to contact me regarding othe...
man/predict.ProtWeaver.Rd#L 188                   ...
man/predict.ProtWeaver.Rd#L 199                      PretrainedModel=myM...
man/predict.ProtWeaver.Rd#L 200                      ...
man/ProtWeaver-ColocPreds.Rd#L  16   \item \code{'Coloc'}...
man/ProtWeaver-DMPreds.Rd#L  17   \item \code{'MirrorTree'}...
man/ProtWeaver-DMPreds.Rd#L  18   \item \code{'ContextTree'}...
man/ProtWeaver-PAPreds.Rd#L  20   \item \code{'Jaccard'}...
man/ProtWeaver-PAPreds.Rd#L  21   \item \code{'Hamming'}...
man/ProtWeaver-PAPreds.Rd#L  22   \item \code{'MutualInformation'}...
man/ProtWeaver-PAPreds.Rd#L  23   \item \code{'ProfDCA'}...
man/ProtWeaver-PAPreds.Rd#L  24   \item \code{'Behdenna'}...
man/ProtWeaver-ResiduePreds.Rd#L  16   \item \code{'ResidueMI'}...
man/ProtWeaver.Rd#L  16   \item{ListOfData}{...
man/ProtWeaver.Rd#L  28   \item{...
man/ProtWeaver.Rd#L  30   }...
man/ProtWeaver.Rd#L  31   \item{...
man/ProtWeaver.Rd#L  32   \code{ListOfData[[i]] = c('i1_d1_p1', ...
man/ProtWeaver.Rd#L  33   }...
man/ProtWeaver.Rd#L  34   \item{...
man/ProtWeaver.Rd#L  35   \code{ListOfData[[i]] = dendrogram(......
man/ProtWeaver.Rd#L  36   }...
man/SelectByK.Rd#L  11           UserConfidence = 0.5,...
man/SelectByK.Rd#L  12           ClusterScalar = 1,...
man/SelectByK.Rd#L  13           MaxClusters = 15L,...
man/SelectByK.Rd#L  14           ReturnAllCommunities = FALSE,...
man/SelectByK.Rd#L  15           Verbose = FALSE,...
man/SelectByK.Rd#L  16           ShowPlot = FALSE,...
man/SelectByK.Rd#L  17           RetainHighest = TRUE)...
man/SelectByK.Rd#L  20   \item{Pairs}{...
man/SelectByK.Rd#L  23   \item{UserConfidence}{...
man/SelectByK.Rd#L  26   \item{ClusterScalar}{...
man/SelectByK.Rd#L  29   \item{MaxClusters}{...
man/SelectByK.Rd#L  33   \item{ReturnAllCommunities}{...
man/SelectByK.Rd#L  36   \item{ShowPlot}{...
man/SelectByK.Rd#L  39   \item{Verbose}{...
man/SelectByK.Rd#L  42   \item{RetainHighest}{...
man/SequenceSimilarity.Rd#L  11                    SubMat,...
man/SequenceSimilarity.Rd#L  12                    penalizeGapLetter = T...
man/SequenceSimilarity.Rd#L  13                    includeTerminalGaps =...
man/SequenceSimilarity.Rd#L  14                    allowNegative = TRUE)...
man/SequenceSimilarity.Rd#L  17   \item{Seqs}{...
man/SequenceSimilarity.Rd#L  20   \item{SubMat}{...
man/SequenceSimilarity.Rd#L  23   \item{penalizeGapLetter}{...
man/SequenceSimilarity.Rd#L  26   \item{includeTerminalGaps}{...
man/SequenceSimilarity.Rd#L  29   \item{allowNegative}{...
man/SequenceSimilarity.Rd#L  54                                  DNA_ALP...
man/SequenceSimilarity.Rd#L  57                    SubMat = DNAPlacehold...
man/SequenceSimilarity.Rd#L  58                    includeTerminalGaps =...
man/SequenceSimilarity.Rd#L  59                    penalizeGapLetter = T...
man/SequenceSimilarity.Rd#L  60                    allowNegative = TRUE)...
man/SubSetPairs.Rd#L  18   \item{CurrentPairs}{...
man/SubSetPairs.Rd#L  21   \item{UserThresholds}{...
man/SubSetPairs.Rd#L  24   \item{RejectCompetitors}{...
man/SubSetPairs.Rd#L  27   \item{RejectionCriteria}{...
man/SubSetPairs.Rd#L  30   \item{WinnersOnly}{...
man/SubSetPairs.Rd#L  33   \item{Verbose}{...
man/SubSetPairs.Rd#L  54                       Verbose = TRUE)...
man/SubSetPairs.Rd#L  59                       UserThresholds = T...
man/SubSetPairs.Rd#L  60                       RejectCompetitors ...
man/SubSetPairs.Rd#L  61                       Verbose = TRUE)...
man/SuperTree.Rd#L  16   \item{myDendList}{...
man/SuperTree.Rd#L  17   List of \code{dendrogram} objects, whe...
man/SuperTree.Rd#L  20   Optional input specifying a function t...
man/SuperTree.Rd#L  21   labels into species names. This functi...
man/SuperTree.Rd#L  22   and return a character vector of the s...
man/SuperTree.Rd#L  23   indicating that gene tree leaves are a...
man/SuperTree.Rd#L  24   See details for more information....
man/SuperTreeEx.Rd#L  13   A list with 20 elements, where each is...
man/SuperTreeEx.Rd#L  14   corresponding to a gene tree construct...
man/SuperTreeEx.Rd#L  15   genomes. Each leaf node is labeled in ...
man/SuperTreeEx.Rd#L  16   a number identifying the genome, \code...
man/SuperTreeEx.Rd#L  17   and \code{C} is a number identifying t...
man/SuperTreeEx.Rd#L  18   identifies a gene....
vignettes/UsingSynExtend.Rmd#L  21                       quietly = TRUE)) {...
vignettes/UsingSynExtend.Rmd#L  22   install.packages("BiocManager")...
vignettes/UsingSynExtend.Rmd#L  35                       "Endosymbionts.sql...
vignettes/UsingSynExtend.Rmd#L  36                       package = "SynExte...
vignettes/UsingSynExtend.Rmd#L  64                                        "...
vignettes/UsingSynExtend.Rmd#L  65                                        p...
vignettes/UsingSynExtend.Rmd#L  66                      Verbose = TRUE)...
vignettes/UsingSynExtend.Rmd#L  82                                        "...
vignettes/UsingSynExtend.Rmd#L  83                                        p...
vignettes/UsingSynExtend.Rmd#L  92                            GeneCalls = G...
vignettes/UsingSynExtend.Rmd#L  93                            Verbose = TRU...
vignettes/UsingSynExtend.Rmd#L 107                               DBPATH = D...
vignettes/UsingSynExtend.Rmd#L 108                               PIDs = FAL...
vignettes/UsingSynExtend.Rmd#L 109                               Verbose = ...
vignettes/UsingSynExtend.Rmd#L 124                                      Ver...
vignettes/UsingSynExtend.Rmd#L 130                   y = DBPATH,...
vignettes/UsingSynExtend.Rmd#L 131                   z = SingleLinkageClust...
vignettes/UsingSynExtend.Rmd#L 132                   Verbose = TRUE)...
* Checking if package already exists in CRAN... OK
* Checking for bioc-devel mailing list subscription...
* NOTE: Cannot determine whether maintainer is subscribed to the Bioc-Devel mailing list (requires admin credentials). Subscribe here: https://stat.ethz.ch/mailman/listinfo/bioc-devel
* Checking for support site registration... OK
